{
	"info": {
		"_postman_id": "af08963c-5275-4606-bd25-8c74ce751676",
		"name": "Ademico Peppol REST API",
		"description": "# Introduction\n\nAdemico Peppol REST API helps you send and receive `Invoices`, `Credit Notes` and `Orders` in the Peppol Network.\n\nAdemico Peppol REST API is meant to be integrated in your ERP or in any other software application so that you can send\nand receive invoices automatically.\nAdemico Peppol REST API is not meant to be used by human users.\n\n> **INFO** Check our  <a href=\"https://peppol-tools.ademico-software.com\" target=\"_blank\">Peppol Tools</a>\n> to validate your\n> `Invoices`, `Credit Notes` and `Orders`, lookup participants in the Peppol Network and in the Peppol Directory and\n> many more.\n\n# Environments\n\nAdemico Peppol REST API is accessible in two environments:\n\n- TEST\n- PROD\n\n## TEST environment\n\nThe TEST environment is used to perform tests with the Ademico Peppol REST API and integrate it with your ERP or\nsoftware\napplication. TEST environment is using the SMK, the Peppol TEST environment.\n\nIt is not a problem to send invoices or other documents to other participants in the Peppol network in the TEST\nenvironment, they are not legally\nbinding.\n\nThe base URL paths for our TEST environment are different depending on if you are using OAuth2 or Basic\nAuthentication:\n\n- OAuth2: `https://test-peppol-api.ademico-software.com`\n- Basic Authentication: `https://test-peppol-api1.ademico-software.com/domibus`\n\nOnce you have finished your integration in TEST environment, you can move to the PROD environment.\n\n## PROD environment\n\nPROD environment is used to send legally binding invoices/credit notes to your business partners. We recommend using the\nPROD environment after you have finished your tests in our TEST environment.\n\nThe base URL paths for our PROD environment are:\n\n- OAuth2: `https://peppol-api.ademico-software.com`\n- Basic Authentication: `https://peppol-api1.ademico-software.com/domibus`\n\n# Authentication\n\nAdemico Peppol REST API supports the following types of authentication:\n\n- OAuth2\n- Basic authentication\n\n## OAuth2\n\nWe are using AWS Cognito as an Authorization Server and the OAuth2 client credentials flow.\n\nPlease find below the token endpoints you need to use to get your JWT token in our environments:\n\n- TEST: `https://test-peppol-oauth2.ademico-software.com/oauth2/token`\n- PROD: `https://peppol-oauth2.ademico-software.com/oauth2/token`\n\nHere are the steps to authenticate using OAuth2:\n\n1. Get a JWT access token\n\n- We will send you the `client_id` and `client_secret`\n- Call the token endpoint to get a JWT token using your `client_id` and `client_secret`.\n  Your need to base64-encode your `client_id:client_secret` and pass the value in the `Authorization` header.\n\nHere is an example how you can get a JWT token in the TEST environment. For PROD environment you need to use the\nspecific token endpoint URL mentioned above:\n\n```shell\ncurl -X POST -H 'Authorization: Basic YOUR_CLIENT_ID_AND_CLIENT_SECRET_BASE64' -H 'Content-Type: application/x-www-form-urlencoded' 'https://test-peppol-oauth2.ademico-software.com/oauth2/token' -d 'grant_type=client_credentials' -d 'scope=peppol/document'  \n```\n\n> **NOTE** The value `YOUR_CLIENT_ID_AND_CLIENT_SECRET_BASE64` used above is just an example.\n\n> **NOTE** A JWT token has an expiration time of one hour.\n\n2. Call the Ademico Peppol REST API\n\nOnce you have obtained a valid JWT token, you can call the Ademico Peppol REST API.\n\nYou need to send in your HTTP request an `Authorization` header that contains\nthe JWT token you have obtained in step 1.\n\nHere is an example how to call an endpoint using OAuth2:\n\n```shell\ncurl -X GET -H \"Authorization: YOUR_JWT_TOKEN\" -H \"Content-Type: application/json\" \"https://test-peppol-api.ademico-software.com/api/peppol/v1/tools/connectivity\" \n```\n\n> **NOTE** Pass your JWT token directly after the `Authorization` header. Do **not** add `Bearer` after\n> the `Authorization` header.\n\n## Basic Authentication\n\nWhen using Basic Authentication, you need to send in your HTTP request an `Authorization` header that contains the\nword `Basic`\nword followed by a space and a base64-encoded string username:password.\n\nFor example, to authenticate as user / mypassword you would need to\nsend `Authorization: Basic YOUR_USERNAME_AND_PASSWORD_BASE64`.\n\nIn the examples from the following chapters, you would need to replace `YOUR_USERNAME_AND_PASSWORD_BASE64`\nwith your credentials in base64-encoded format.\n\nWhen using Basic Authentication, you need to use an access token `accessToken` as a query parameter in each request.\n\n> **NOTE** Contact us to send you the value of the `accessToken` which is specific to each environment TEST/PROD.\n\nExample of a curl request using Basic Authentication:\n\n```shell\ncurl -X GET -H \"Authorization: Basic YOUR_USERNAME_AND_PASSWORD_BASE64\" -H \"Content-Type: application/json\" \"https://test-peppol-api1.ademico-software.com/domibus/api/peppol/v1/tools/connectivity?accessToken=ACCESS_T0KEN_YOU_RECEIVED_FROM_US\" \n```\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n# Errors\n\nWhen using the endpoints from our Ademico Peppol REST API you might encounter an error. In this case we will normally\nrespond with\nstatus `400`\nunless documented otherwise in the specific resource method.\n\nPlease see below and example:\n\n```json\n{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Details of the occurred error\"\n}\n```\n\nThe error detail contains a `code` which identifies the error type and a `message` providing more information about the\nerror occurred.\n\nYou can find below the list of possible error codes and their meaning:\n\n| Code                         | Description                                                                                           |\n|------------------------------|-------------------------------------------------------------------------------------------------------|\n| UNKNOWN_DOCUMENT_TYPE        | You try to send a document and we could not recognize the document type                               |\n| DOCUMENT_NOT_FOUND           | You refer to a document which does not exist in our system                                            |\n| DUPLICATE_DOCUMENT           | Occurs when you try to send a document which was already sent                                         |\n| SUBMITTED_DOCUMENT_NOT_VALID | You try to send an invalid document eg wrong mime type, empty document, inconsistent values etc       |\n| XML_VALIDATION_ERROR         | You try to send a document which is not a valid XML document                                          |\n| XSD_VALIDATION_ERROR         | You try to send a document which is not valid against the XSD schema                                  |\n| SCHEMATRON_VALIDATION_ERROR  | You try to send a document which does not pass the Peppol Schematron business validation rules        |\n| GENERIC_VALIDATION_ERROR     | Any other error that might occur when you try to send a document                                      |\n| SBDH_ERROR                   | An error occurred when we try to parse the SBDH envelope during sending/receiving flow                |\n| PARTICIPANT_LOOKUP_ERROR     | An error occurred while trying to look up a participant in the Peppol network(SML/SMP)                |\n| PARTICIPANT_ERROR            | Occurs when creating/updating/deleting a participant from Peppol network(SML/SMP) or Peppol Directory |\n| DOCUMENT_TRANSMISSION_ERROR  | An error occurred while trying to send a document to the receiver party                               |\n| GENERIC_ERROR                | Any other error not specified above                                                                   |\n\n# Supported Peppol documents\n\nYou can use the Ademico Peppol REST API to send and receive the following document types in the Peppol network:\n\n| Country               | Document name                                 | Identifier                                     | Customization id                                                                                    | Profile id                                     | \n|-----------------------|-----------------------------------------------|------------------------------------------------|-----------------------------------------------------------------------------------------------------|------------------------------------------------|\n| Europe                | Peppol BIS Billing UBL Invoice V3             | PEPPOL_BIS_BILLING_UBL_INVOICE_V3              | urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0::2.1                     | urn:fdc:peppol.eu:2017:poacc:billing:01:1.0    |\n| Europe                | Peppol BIS Billing UBL CreditNote V3          | PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3          | urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0::2.1                     | urn:fdc:peppol.eu:2017:poacc:billing:01:1.0    |\n| Germany               | Peppol BIS Billing UBL Invoice V3             | PEPPOL_BIS_BILLING_UBL_INVOICE_V3              | urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0::2.1                     | urn:fdc:peppol.eu:2017:poacc:billing:01:1.0    |\n| Germany               | Peppol BIS Billing UBL CreditNote V3          | PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3          | urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0::2.1                     | urn:fdc:peppol.eu:2017:poacc:billing:01:1.0    |\n| Netherlands           | SI-UBL 2.0 Invoice                            | SI_UBL_2_0_INVOICE                             | urn:cen.eu:en16931:2017#compliant#urn:fdc:nen.nl:nlcius:v1.0                                        | urn:fdc:peppol.eu:2017:poacc:billing:01:1.0    |\n| Netherlands           | SI-UBL 2.0 CreditNote                         | SI_UBL_2_0_CREDITNOTE                          | urn:cen.eu:en16931:2017#compliant#urn:fdc:nen.nl:nlcius:v1.0                                        | urn:fdc:peppol.eu:2017:poacc:billing:01:1.0    |\n| Australia/New Zealand | AU-NZ Peppol BIS Billing 3.0 Invoice          | AU_NZ_UBL_INVOICE_V3                           | urn:cen.eu:en16931:2017#conformant#urn:fdc:peppol.eu:2017:poacc:billing:international:aunz:3.0::2.1 | urn:fdc:peppol.eu:2017:poacc:billing:01:1.0    |\n| Australia/New Zealand | AU-NZ Peppol BIS Billing 3.0 CreditNote       | AU_NZ_UBL_CREDIT_NOTE_V3                       | urn:cen.eu:en16931:2017#conformant#urn:fdc:peppol.eu:2017:poacc:billing:international:aunz:3.0::2.1 | urn:fdc:peppol.eu:2017:poacc:billing:01:1.0    |\n| Australia/New Zealand | A-NZ PINT Invoice v1.0                        | A_NZ_PINT_INVOICE_V1_0                         | urn:peppol:pint:billing-1@aunz-1::2.1                                                               | urn:peppol:bis:billing                         |\n| Australia/New Zealand | A-NZ PINT Credit Note v1.0                    | A_NZ_PINT_CREDIT_NOTE_V1_0                     | urn:peppol:pint:billing-1@aunz-1::2.1                                                               | urn:peppol:bis:billing                         |\n| Australia/New Zealand | A-NZ PINT Invoice v1.0(Wildcard)              | A_NZ_PINT_INVOICE_V1_0_WILDCARD                | urn:peppol:pint:billing-1@aunz-1::2.1                                                               | urn:peppol:bis:billing                         |\n| Australia/New Zealand | A-NZ PINT Credit Note v1.0(Wildcard)          | A_NZ_PINT_CREDIT_NOTE_V1_0_WILDCARD            | urn:peppol:pint:billing-1@aunz-1::2.1                                                               | urn:peppol:bis:billing                         |\n| Singapore             | SG Peppol BIS Billing 3.0 Invoice             | SG_PEPPOL_BIS_BILLING_3_0_INVOICE              | urn:cen.eu:en16931:2017#conformant#urn:fdc:peppol.eu:2017:poacc:billing:international:sg:3.0::2.1   | urn:fdc:peppol.eu:2017:poacc:billing:01:1.0    |\n| Singapore             | SG Peppol BIS Billing 3.0 Credit Note         | SG_PEPPOL_BIS_BILLING_3_0_CREDIT_NOTE          | urn:cen.eu:en16931:2017#conformant#urn:fdc:peppol.eu:2017:poacc:billing:international:sg:3.0::2.1   | urn:fdc:peppol.eu:2017:poacc:billing:01:1.0    |\n| Singapore             | SG PINT Invoice v1.0                          | SG_PINT_INVOICE_V1_0                           | urn:peppol:pint:billing-1@sg-1::2.1                                                                 | urn:peppol:bis:billing                         |\n| Singapore             | SG PINT Credit Note v1.0                      | SG_PINT_CREDIT_NOTE_V1_0                       | urn:peppol:pint:billing-1@sg-1::2.1                                                                 | urn:peppol:bis:billing                         |\n| Malaysia              | MY PINT Invoice v1.0                          | MY_PINT_INVOICE_V1_0                           | urn:peppol:pint:billing-1@my-1::2.1                                                                 | urn:peppol:bis:billing                         |\n| Malaysia              | MY PINT Invoice v1.0                          | MY_PINT_INVOICE_V1_0_WILDCARD                  | urn:peppol:pint:billing-1@my-1::2.1                                                                 | urn:peppol:bis:billing                         |\n| Malaysia              | MY PINT Credit Note v1.0                      | MY_PINT_CREDIT_NOTE_V1_0                       | urn:peppol:pint:billing-1@my-1::2.1                                                                 | urn:peppol:bis:billing                         |\n| Malaysia              | MY PINT Credit Note v1.0                      | MY_PINT_CREDIT_NOTE_V1_0_WILDCARD              | urn:peppol:pint:billing-1@my-1::2.1                                                                 | urn:peppol:bis:billing                         |\n| Malaysia              | MY PINT Self-Billing Invoice v1.0             | MY_PINT_SELF_BILLING_INVOICE_V1_0              | urn:peppol:pint:selfbilling-1@my-1::2.1                                                             | urn:peppol:bis:selfbilling                     |\n| Malaysia              | MY PINT Self-Billing Invoice v1.0             | MY_PINT_SELF_BILLING_INVOICE_V1_0_WILDCARD     | urn:peppol:pint:selfbilling-1@my-1::2.1                                                             | urn:peppol:bis:selfbilling                     |\n| Malaysia              | MY PINT Self-Billing Credit Note v1.0         | MY_PINT_SELF_BILLING_CREDIT_NOTE_V1_0          | urn:peppol:pint:selfbilling-1@my-1::2.1                                                             | urn:peppol:bis:selfbilling                     |\n| Malaysia              | MY PINT Self-Billing Credit Note v1.0         | MY_PINT_SELF_BILLING_CREDIT_NOTE_V1_0_WILDCARD | urn:peppol:pint:selfbilling-1@my-1::2.1                                                             | urn:peppol:bis:selfbilling                     |\n| Japan                 | JP PINT Invoice v1.0                          | JP_PINT_INVOICE_V1_0                           | urn:peppol:pint:billing-1@jp-1::2.1                                                                 | urn:peppol:bis:billing                         |\n| Japan                 | JP PINT Invoice v1.0(Wildcard)                | JP_PINT_INVOICE_V1_0_WILDCARD                  | urn:peppol:pint:billing-1@jp-1::2.1                                                                 | urn:peppol:bis:billing                         |\n| International         | Peppol Invoice Response transaction 3.0       | PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0        | urn:fdc:peppol.eu:poacc:trns:invoice_response:3::2.1                                                | urn:fdc:peppol.eu:poacc:bis:invoice_response:3 |\n| International         | Peppol Message Level Response transaction 3.0 | PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0  | urn:fdc:peppol.eu:poacc:trns:mlr:3::2.1                                                             | urn:fdc:peppol.eu:poacc:bis:mlr:3              |\n| International         | BIS Order only                                | PEPPOL_ORDER_TRANSACTION_3_0_ORDER_ONLY        | urn:fdc:peppol.eu:poacc:trns:order:3::2.1                                                           | urn:fdc:peppol.eu:poacc:bis:order_only:3       |\n\nSupport for other document types will be added soon.\n\n# Document examples\n\nHere are some examples of documents that you can send and receive in the Peppol network:\n\n- <a href=\"invoice-sending.xml\" target=\"_blank\" download>Invoice</a>\n- <a href=\"credit-note-sending.xml\" target=\"_blank\" download>Credit Note</a>\n- <a href=\"order-sending.xml\" target=\"_blank\" download>Order</a>\n\n# Getting started\n\nIn this chapter, we will guide you step by step to send and receive `Invoices` in the Peppol network TEST environment.\nSending and receiving `Credit Notes` and `Orders` is similar.\n\n> **NOTE** Before continuing to the steps below, make sure you have already obtained from us the credentials to access\n> our API.\n\n## Checking access to our API\n\nBefore sending your first `Invoice`, you need to check that you have access to our Ademico Peppol REST API.\n\nIn order to check that you have access, you need to execute a `GET` request against our\n[connectivity service](#tag/Connectivity) using the below curl command. If you get a\nstatus `200` it means that you have access, status `401` means that your authentication credentials are not correct.\n\nYou need to adapt your credentials in the example below as described in the [Authentication](#section/Authentication)\nchapter.\n\nCURL commands (or use [Connectivity REST API](#tag/Connectivity)):\n\nOAuth2:\n\n```shell\ncurl -X GET -H \"Authorization: YOUR_JWT_TOKEN\" -H \"Content-Type: application/json\" \"https://test-peppol-api.ademico-software.com/api/peppol/v1/tools/connectivity\" \n```\n\nBasic Authentication:\n\n```shell\ncurl -X GET -H \"Authorization: Basic YOUR_USERNAME_AND_PASSWORD_BASE64\" -H \"Content-Type: application/json\" \"https://test-peppol-api1.ademico-software.com/domibus/api/peppol/v1/tools/connectivity?accessToken=ACCESS_T0KEN_YOU_RECEIVED_FROM_US\"\n```\n\nYou can proceed to the next step after you have a successful connection.\n\n## Register your legal entity as a participant in the Peppol network\n\n### Introduction\n\nA legal entity is an organization/company that sends and receives documents eg invoices in the Peppol network.\nIt is mandatory to [create your legal entity](#tag/Legal-Entity/operation/createLegalEntity) before sending or receiving\ndocuments in the Peppol network.\n\nAfter you create your legal entity you can send and receive invoices and other documents. Your organization will be also\nlisted the <a href=\"https://directory.peppol.eu/public\" target=\"_blank\">Peppol Directory</a> so that it can be\ndiscovered by other participants in the Peppol network.\n\n### Register your legal entity\n\nYou can register your organization as a participant in the Peppol network using the\nAPI [create legal entity](#tag/Legal-Entity/operation/createLegalEntity). Below you can find an example using Basic\nAuthentication and OAuth2:\n\nBasic Authentication:\n\n```shell\ncurl -X POST \"https://test-peppol-api1.ademico-software.com/domibus/api/peppol/v1/legal-entities?accessToken=ACCESS_T0KEN_YOU_RECEIVED_FROM_US\" -H \"Authorization: Basic YOUR_USERNAME_AND_PASSWORD_BASE64\" -H \"Content-Type: application/json\" -d @- << EOF \n{\n  \"legalEntityDetails\": {\n    \"publishInPeppolDirectory\": true,\n    \"name\": \"YOUR_COMPANY_NAME\",\n    \"countryCode\": \"YOUR_COMPANY_COUNTRY_CODE\",\n    \"geographicalInformation\": \"YOUR_COMPANY_STREET_AND_NUMBER, YOUR_COMPANY_CITY\",\n    \"websiteURL\": \"YOUR_COMPANY_WEBSITE\",\n    \"contacts\": [\n      {\n        \"contactType\": \"YOUR_COMPANY_CONTACT_TYPE\",\n        \"name\": \"YOUR_COMPANY_CONTACT_NAME\",\n        \"phoneNumber\": \"YOUR_COMPANY_PHONE_NUMBER\",\n        \"email\": \"YOUR_COMPANY_EMAIL\"\n      }\n    ],\n    \"additionalInformation\": \"Our company is specialized in ...\"\n  },\n  \"peppolRegistrations\": [\n    {\n      \"peppolIdentifier\": {\n        \"scheme\": \"YOUR_PEPPOL_PARTICIPANT_SCHEME\",\n        \"identifier\": \"YOUR_PEPPOL_PARTICIPANT_IDENTIFIER\"\n      },\n      \"supportedDocuments\": [\n        \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n        \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n        \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n        \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n      ],\n      \"peppolRegistration\": true\n    }\n  ]\n}\nEOF \n```\n\nOAuth2:\n\n```shell\ncurl -X POST \"https://test-peppol-api.ademico-software.com/domibus/api/peppol/v1/legal-entities\"  -H \"Authorization: YOUR_JWT_TOKEN\" -H \"Content-Type: application/json\" -d @- << EOF\nSame JSON as above\nEOF \n```\n\nIf you get a status `200`, it means that you have successfully registered your legal entity as a participant in the\nPeppol network. You can now search your organization by company name in\nthe <a href=\"https://test-directory.peppol.eu/public\" target=\"_blank\">Peppol Directory</a> and it will appear in the\nsearch results.\n\nWe will explain the 2 main sections from the register legal entity request from above:\n\n1. `legalEntityDetails`\n\nThis section contains the details of your organization which will be published in\nthe <a href=\"https://test-directory.peppol.eu/public\" target=\"_blank\">Peppol Directory</a> such as:\n\n- YOUR_COMPANY_NAME: The name of your company eg Ademico Software\n- YOUR_COMPANY_COUNTRY_CODE: The country in which the legal entity is registered eg BE\n- YOUR_COMPANY_STREET_AND_NUMBER, YOUR_COMPANY_CITY: The address of the legal entity eg 204 My Street, Leuven, Belgium\n- YOUR_COMPANY_WEBSITE: The company website eg https://ademico-software.com\n- YOUR_COMPANY_CONTACT_TYPE: The company contact type eg info, support\n- YOUR_COMPANY_CONTACT_NAME: The company contact name eg John Doe\n- YOUR_COMPANY_PHONE_NUMBER: The company phone number eg +32 123456\n- YOUR_COMPANY_EMAIL: The email of your organization eg info@ademico-software.com\n\nSet the flag `publishInPeppolDirectory` to false if you don't want to publish your legal entity details in the Peppol\nDirectory. In some countries, such as Singapore, it is mandatory to publish your legal entity details in Peppol\nDirectory.\n\n2. `peppolRegistrations`\n\nThis section contains the identifier of your organization in the Peppol network(`peppolIdentifier`) and defines which\ndocuments your organization can send and receive(`supportedDocuments`). A legal entity can be registered in the Peppol\nnetwork multiple times using different identifiers. For instance a legal entity in Belgium can be registered with the\ncompany registration number 0208:0552912569 and with the Belgium VAT number\n9925:BE0552912569.\n\nDepending on the country in which your organization is registered you need to use a\nspecific participant scheme and identifier in the section `peppolIdentifier`. You can have a look in the\nsection [Participant scheme and identifier](#section/Glossary/Participant-scheme-and-identifier) for more details.\n\nThe section `supportedDocuments` defines which documents your organization can send and receive. In the example above,\nthe legal entity can send and receive the following documents:\n\n- Peppol BIS Billing UBL Invoice V3(`PEPPOL_BIS_BILLING_UBL_INVOICE_V3`)\n- Peppol BIS Billing UBL CreditNote V3(`PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3`)\n- BIS Invoice Response(`PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0`)\n- Peppol Message Level Response transaction 3.0(`PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0`)\n\nYou can have a look in the section [Supported Peppol documents](#section/Supported-Peppol-documents) for a full list of\nsupported documents you can send or receive.\n\nBy default, the legal entity is registered in the Peppol network(SML/SMP). Set the flag `peppolRegistration` to false if\nthe\nlegal entity was registered in the Peppol network (SML/SMP) using other methods than our API. In this case you will only\nbe able to send documents but not to receive.\n\nYou can use the API `Legal Entity Peppol Registration` to update your Peppol registration details.\n\n## Sending Invoices\n\nAfter registering your legal entity as a participant in the Peppol network, you are now ready to send your\nfirst `Invoice`. You can download an invoice template from  <a href=\"invoice-sending.xml\" target=\"_blank\" download>\nhere</a> and save it\nas `invoice-sending.xml`. Open the `invoice-sending.xml` file in a text editor and replace the following elements:\n\n- INVOICE_ID: The unique identifier of the `Invoice`\n- YOUR_PARTICIPANT_SCHEME: eg 0208 You can find\n  in [Participant scheme and identifier](#section/Glossary/Participant-scheme-and-identifier)\n  an explanation of participant scheme and participant identifier\n- YOUR_PARTICIPANT_IDENTIFIER: eg 0552912569\n\nThe other details from the invoice starting with YOUR_COMPANY_ are optional to fill in.\n\nYou can follow a similar process for sending credit notes.You can download\nfrom <a href=\"credit-note-sending.xml\" target=\"_blank\" download>here</a> a template for a Credit Note.\n\nSend your invoice by executing the following curl command:\n\nCURL commands (or use [Invoice/Credit Note REST API](#tag/InvoiceCredit-Note/operation/submitFile)):\n\nBasic Authentication:\n\n```shell\ncurl -X POST -H \"Authorization: Basic YOUR_USERNAME_AND_PASSWORD_BASE64\" -F \"file=@invoice-sending.xml\" \"https://test-peppol-api1.ademico-software.com/domibus/api/peppol/v1/invoices/ubl-submissions?accessToken=ACCESS_T0KEN_YOU_RECEIVED_FROM_US\"\n```\n\nOAuth2:\n\n```shell\ncurl -X POST -H \"Authorization: YOUR_JWT_TOKEN\" -F \"file=@invoice-sending.xml\" \"https://test-peppol-api.ademico-software.com/api/peppol/v1/invoices/ubl-submissions\"\n```\n\nIf you get a status `200` it means that you have successfully scheduled your first `Invoice`\nto be sent in the Peppol network. The `Invoice` is sent asynchronously, it is first put on a queue and it will be sent\nalmost immediately.\n\nNow that you have successfully scheduled an `Invoice`, you need to know if it has been correctly received by the `Buyer`\nand if the `Buyer` has accepted or rejected it. You can receive updates when an `Invoice` status changes with the help\nof the `Invoice` notifications.\n\nIn the section [Pull notifications(polling)](#section/Application-integration/Pull-Notifications-(Polling)) or\n[Push notifications(webhooks)](#section/Application-integration/Push-Notifications-(Webhooks)) you can get more details\nhow to get notifications for sent `Invoices`.\n\nHere is sequence diagram which describes the flow of sending an `Invoice` using Pull Notifications:\n\n![Sending Invoice with Pull Notifications](http://ademico-software.com/wp-content/uploads/2025/03/Peppol-sendInvoiceUsingPullNotifications.png)\n\nHere is sequence diagram which describes the flow of sending an `Invoice` using Push(webhook) Notifications:\n\n![Sending Invoice with Push(webhook) Notifications](http://ademico-software.com/wp-content/uploads/2025/03/Peppol-sendInvoiceUsingPushNotifications.png)\n\n## Receiving Invoices\n\nBefore receiving `Invoices`, please make sure that you\nhave [registered your legal entity](#section/Getting-started/Register-your-legal-entity-as-a-participant-in-the-Peppol-network)\nin the Peppol\nnetwork.\n\nDuring the testing phase when you are integrating your ERP or software application with our\nAPI, it is useful to register a\nsecond participant so that you can send and receive invoices or credit notes between them.\nFor instance, you [register](#section/Getting-started/Register-your-legal-entity-as-a-participant-in-the-Peppol-network)\na legal entity as a Peppol participant with\nthe identifier `9938:LU12345678` and a second participant with identifier `9938:LU12345678_part2`.\nNow in your UBL invoice you set the sending participant in the `AccountingSupplierParty`:\n\n```xml \n\n<cac:AccountingSupplierParty>\n    <cac:Party>\n        <cbc:EndpointID schemeID=\"9938\">LU12345678</cbc:EndpointID>\n    </cac:Party>\n    ..........................\n</cac:AccountingSupplierParty>\n```\n\nand the receiver of the invoice in the `AccountingCustomerParty`:\n\n```xml\n\n<cac:AccountingCustomerParty>\n    <cac:Party>\n        <cbc:EndpointID schemeID=\"9938\">LU12345678_part2</cbc:EndpointID>\n    </cac:Party>\n    ..........................\n</cac:AccountingCustomerParty>\n```\n\nOnce you sent the above invoice, you need to call\nthe [receiving notification endpoint](#tag/InvoiceCredit-Note-Notification/operation/getReceivingNotifications) to get\nthe receiving notification.\nThe receiving notification contains the `transmissionId` which you can use\nto [retrieve the UBL invoice](#tag/InvoiceCredit-Note/operation/getInvoiceInUBLFormat).\nSee also in the next sections some examples how to get the receiving notification and how to retrieve the UBL invoice.\n\nWhen a `Seller` sends you as a `Buyer` an `Invoice`, we automatically validate the `Invoice` against the Peppol\ntechnical and\nbusiness rules before informing you that you have received an `Invoice`. We perform the following checks:\n\n- XML validation\n- XSD validation\n- Schematron validation\n\nIf one of the above validation is not passing, we inform automatically the `Seller` with the reasons of the failed\nvalidation. Technically we send an `MLR` message to the `Seller`. If the `Seller` does not support receiving an `MLR`,\nwe send an `AS4 Signal` error.<br>\nIn conclusion, the `Seller` is always informed if the `Invoice` validation is not passing and if you as a `Buyer`\ncould not process the `Invoice`.\n\nIf you receive a valid `Invoice`, you will be notified either via\n[Pull notifications(polling)](#section/Application-integration/Pull-Notifications-(Polling)) or\n[Push notifications(webhooks)](#section/Application-integration/Push-Notifications-(Webhooks))\nand you get the transmission identifier (`transmissionId`) of the received `Invoice`.<br>\nWith the help of the `transmissionId` you can now get the `Invoice` in UBL XML format:\n\nCURL commands (or use [Invoice/Credit Note REST API](#tag/InvoiceCredit-Note/operation/getInvoiceInUBLFormat)):\n\nBasic authentication:\n\n```shell\ncurl -X GET -H \"Authorization: Basic YOUR_USERNAME_AND_PASSWORD_BASE64\" -H \"Content-Type: application/json\" \"https://test-peppol-api1.ademico-software.com/domibus/api/peppol/v1/invoices/{transmissionId}/ubl?accessToken=ACCESS_T0KEN_YOU_RECEIVED_FROM_US\"\n```\n\nOAuth2:\n\n```shell\ncurl -X GET -H \"Authorization: YOUR_JWT_TOKEN\" -H \"Content-Type: application/json\" \"https://test-peppol-api.ademico-software.com/api/peppol/v1/invoices/{transmissionId}/ubl\"\n```\n\nExample of a received invoice:\n\n```xml\n\n<Invoice xmlns:cac=\"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\"\n         xmlns:cbc=\"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\"\n         xmlns=\"urn:oasis:names:specification:ubl:schema:xsd:Invoice-2\">\n    <cbc:CustomizationID>urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0\n    </cbc:CustomizationID>\n    <cbc:ProfileID>urn:fdc:peppol.eu:2017:poacc:billing:01:1.0</cbc:ProfileID>\n    <cbc:ID>pbe000512-8</cbc:ID>\n    <cbc:IssueDate>2022-05-19</cbc:IssueDate>\n    <cbc:DueDate>2022-06-19</cbc:DueDate>\n    <cbc:InvoiceTypeCode>380</cbc:InvoiceTypeCode>\n    <cbc:DocumentCurrencyCode>EUR</cbc:DocumentCurrencyCode>\n    <cbc:AccountingCost>4025:123:4343</cbc:AccountingCost>\n    <cbc:BuyerReference>0150abc</cbc:BuyerReference>\n    <cac:OrderReference>\n        <cbc:ID>test-ademico-001</cbc:ID>\n        <cbc:SalesOrderID>test-ademico-001</cbc:SalesOrderID>\n    </cac:OrderReference>\n\n    <!-- This is the invoice in PDF format -->\n    <cac:AdditionalDocumentReference>\n        <cbc:ID>invoice1</cbc:ID>\n        <cac:Attachment>\n            <cbc:EmbeddedDocumentBinaryObject mimeCode=\"application/pdf\" filename=\"invoice.pdf\">\n                dGhpcyBpcyB0aGUgcGRmIGludm9pY2UgYmFzZTY0IGVuY29kZWQ=\n            </cbc:EmbeddedDocumentBinaryObject>\n        </cac:Attachment>\n    </cac:AdditionalDocumentReference>\n\n    <cac:AccountingSupplierParty>\n        <cac:Party>\n            <cbc:EndpointID schemeID=\"0208\">0552912569</cbc:EndpointID>\n            <cac:PartyIdentification>\n                <cbc:ID schemeID=\"0208\">0552912569</cbc:ID>\n            </cac:PartyIdentification>\n            <cac:PartyName>\n                <cbc:Name>Ademico Software</cbc:Name>\n            </cac:PartyName>\n            <cac:PostalAddress>\n                <cbc:StreetName>My street</cbc:StreetName>\n                <cbc:CityName>Kessel-Lo</cbc:CityName>\n                <cbc:PostalZone>3010</cbc:PostalZone>\n                <cac:Country>\n                    <cbc:IdentificationCode>BE</cbc:IdentificationCode>\n                </cac:Country>\n            </cac:PostalAddress>\n            <cac:PartyTaxScheme>\n                <cbc:CompanyID>BE0552912569</cbc:CompanyID>\n                <cac:TaxScheme>\n                    <cbc:ID>VAT</cbc:ID>\n                </cac:TaxScheme>\n            </cac:PartyTaxScheme>\n            <cac:PartyLegalEntity>\n                <cbc:RegistrationName>Ademico Software</cbc:RegistrationName>\n                <cbc:CompanyID schemeID=\"0208\">0552912569</cbc:CompanyID>\n            </cac:PartyLegalEntity>\n            <cac:Contact>\n                <cbc:ElectronicMail>info@ademico-software.com</cbc:ElectronicMail>\n            </cac:Contact>\n        </cac:Party>\n    </cac:AccountingSupplierParty>\n\n    <cac:AccountingCustomerParty>\n        <cac:Party>\n            <cbc:EndpointID schemeID=\"9925\">0123456712</cbc:EndpointID>\n            <cac:PartyIdentification>\n                <cbc:ID schemeID=\"9925\">0123456712</cbc:ID>\n            </cac:PartyIdentification>\n            <cac:PartyName>\n                <cbc:Name>JohnDoe</cbc:Name>\n            </cac:PartyName>\n            <cac:PostalAddress>\n                <cbc:StreetName>Simon Bolivarlaan</cbc:StreetName>\n                <cbc:CityName>Brussel</cbc:CityName>\n                <cbc:PostalZone>1000</cbc:PostalZone>\n                <cac:Country>\n                    <cbc:IdentificationCode>BE</cbc:IdentificationCode>\n                </cac:Country>\n            </cac:PostalAddress>\n            <cac:PartyTaxScheme>\n                <cbc:CompanyID>BE0123456712</cbc:CompanyID>\n                <cac:TaxScheme>\n                    <cbc:ID>VAT</cbc:ID>\n                </cac:TaxScheme>\n            </cac:PartyTaxScheme>\n            <cac:PartyLegalEntity>\n                <cbc:RegistrationName>JohnDoe</cbc:RegistrationName>\n                <cbc:CompanyID>0123456712</cbc:CompanyID>\n            </cac:PartyLegalEntity>\n            <cac:Contact>\n                <cbc:ElectronicMail>john.doe@example.com</cbc:ElectronicMail>\n            </cac:Contact>\n        </cac:Party>\n    </cac:AccountingCustomerParty>\n    <cac:Delivery>\n        <cbc:ActualDeliveryDate>2017-11-01</cbc:ActualDeliveryDate>\n        <cac:DeliveryLocation>\n            <cbc:ID schemeID=\"0088\">9483759475923478</cbc:ID>\n            <cac:Address>\n                <cbc:StreetName>Delivery street 2</cbc:StreetName>\n                <cbc:AdditionalStreetName>Building 56</cbc:AdditionalStreetName>\n                <cbc:CityName>Stockholm</cbc:CityName>\n                <cbc:PostalZone>21234</cbc:PostalZone>\n                <cac:Country>\n                    <cbc:IdentificationCode>SE</cbc:IdentificationCode>\n                </cac:Country>\n            </cac:Address>\n        </cac:DeliveryLocation>\n        <cac:DeliveryParty>\n            <cac:PartyName>\n                <cbc:Name>Delivery party Name</cbc:Name>\n            </cac:PartyName>\n        </cac:DeliveryParty>\n    </cac:Delivery>\n    <cac:PaymentMeans>\n        <cbc:PaymentMeansCode name=\"Credit transfer\">30</cbc:PaymentMeansCode>\n        <cbc:PaymentID>Snippet1</cbc:PaymentID>\n        <cac:PayeeFinancialAccount>\n            <cbc:ID>IBAN32423940</cbc:ID>\n            <cbc:Name>AccountName</cbc:Name>\n            <cac:FinancialInstitutionBranch>\n                <cbc:ID>BIC324098</cbc:ID>\n            </cac:FinancialInstitutionBranch>\n        </cac:PayeeFinancialAccount>\n    </cac:PaymentMeans>\n    <cac:PaymentTerms>\n        <cbc:Note>Payment within 10 days, 2% discount</cbc:Note>\n    </cac:PaymentTerms>\n    <cac:AllowanceCharge>\n        <cbc:ChargeIndicator>true</cbc:ChargeIndicator>\n        <cbc:AllowanceChargeReason>Insurance</cbc:AllowanceChargeReason>\n        <cbc:Amount currencyID=\"EUR\">10</cbc:Amount>\n        <cac:TaxCategory>\n            <cbc:ID>E</cbc:ID>\n            <cbc:Percent>0</cbc:Percent>\n            <cac:TaxScheme>\n                <cbc:ID>VAT</cbc:ID>\n            </cac:TaxScheme>\n        </cac:TaxCategory>\n    </cac:AllowanceCharge>\n    <cac:TaxTotal>\n        <cbc:TaxAmount currencyID=\"EUR\">311.09</cbc:TaxAmount>\n        <cac:TaxSubtotal>\n            <cbc:TaxableAmount currencyID=\"EUR\">1481.4</cbc:TaxableAmount>\n            <cbc:TaxAmount currencyID=\"EUR\">311.09</cbc:TaxAmount>\n            <cac:TaxCategory>\n                <cbc:ID>S</cbc:ID>\n                <cbc:Percent>21.0</cbc:Percent>\n                <cac:TaxScheme>\n                    <cbc:ID>VAT</cbc:ID>\n                </cac:TaxScheme>\n            </cac:TaxCategory>\n        </cac:TaxSubtotal>\n        <cac:TaxSubtotal>\n            <cbc:TaxableAmount currencyID=\"EUR\">30</cbc:TaxableAmount>\n            <cbc:TaxAmount currencyID=\"EUR\">0</cbc:TaxAmount>\n            <cac:TaxCategory>\n                <cbc:ID>E</cbc:ID>\n                <cbc:Percent>0</cbc:Percent>\n                <cbc:TaxExemptionReasonCode>VATEX-EU-F</cbc:TaxExemptionReasonCode>\n                <cac:TaxScheme>\n                    <cbc:ID>VAT</cbc:ID>\n                </cac:TaxScheme>\n            </cac:TaxCategory>\n        </cac:TaxSubtotal>\n    </cac:TaxTotal>\n    <cac:LegalMonetaryTotal>\n        <cbc:LineExtensionAmount currencyID=\"EUR\">1501.4</cbc:LineExtensionAmount>\n        <cbc:TaxExclusiveAmount currencyID=\"EUR\">1511.4</cbc:TaxExclusiveAmount>\n        <cbc:TaxInclusiveAmount currencyID=\"EUR\">1822.49</cbc:TaxInclusiveAmount>\n        <cbc:ChargeTotalAmount currencyID=\"EUR\">10</cbc:ChargeTotalAmount>\n        <cbc:PayableAmount currencyID=\"EUR\">1822.49</cbc:PayableAmount>\n    </cac:LegalMonetaryTotal>\n\n    <cac:InvoiceLine>\n        <cbc:ID>1</cbc:ID>\n        <cbc:InvoicedQuantity unitCode=\"DAY\">2</cbc:InvoicedQuantity>\n        <cbc:LineExtensionAmount currencyID=\"EUR\">20</cbc:LineExtensionAmount>\n        <cbc:AccountingCost>Consulting Fees</cbc:AccountingCost>\n        <cac:OrderLineReference>\n            <cbc:LineID>test-ademico-001</cbc:LineID>\n        </cac:OrderLineReference>\n        <cac:Item>\n            <cbc:Description>TEST 0%</cbc:Description>\n            <cbc:Name>TEST 0%</cbc:Name>\n            <cac:StandardItemIdentification>\n                <cbc:ID schemeID=\"0088\">21382183120983</cbc:ID>\n            </cac:StandardItemIdentification>\n            <cac:OriginCountry>\n                <cbc:IdentificationCode>NO</cbc:IdentificationCode>\n            </cac:OriginCountry>\n            <cac:CommodityClassification>\n                <cbc:ItemClassificationCode listID=\"SRV\">09348023</cbc:ItemClassificationCode>\n            </cac:CommodityClassification>\n            <cac:ClassifiedTaxCategory>\n                <cbc:ID>E</cbc:ID>\n                <cbc:Percent>0</cbc:Percent>\n                <cac:TaxScheme>\n                    <cbc:ID>VAT</cbc:ID>\n                </cac:TaxScheme>\n            </cac:ClassifiedTaxCategory>\n        </cac:Item>\n        <cac:Price>\n            <cbc:PriceAmount currencyID=\"EUR\">10</cbc:PriceAmount>\n        </cac:Price>\n    </cac:InvoiceLine>\n    <cac:InvoiceLine>\n        <cbc:ID>2</cbc:ID>\n        <cbc:InvoicedQuantity unitCode=\"DAY\">12</cbc:InvoicedQuantity>\n        <cbc:LineExtensionAmount currencyID=\"EUR\">1481.4</cbc:LineExtensionAmount>\n        <cac:OrderLineReference>\n            <cbc:LineID>test-ademico-001</cbc:LineID>\n        </cac:OrderLineReference>\n        <cac:Item>\n            <cbc:Description>Description 2</cbc:Description>\n            <cbc:Name>TEST 21%</cbc:Name>\n            <cac:StandardItemIdentification>\n                <cbc:ID schemeID=\"0088\">21382183120983</cbc:ID>\n            </cac:StandardItemIdentification>\n            <cac:OriginCountry>\n                <cbc:IdentificationCode>NO</cbc:IdentificationCode>\n            </cac:OriginCountry>\n            <cac:CommodityClassification>\n                <cbc:ItemClassificationCode listID=\"SRV\">09348023</cbc:ItemClassificationCode>\n            </cac:CommodityClassification>\n            <cac:ClassifiedTaxCategory>\n                <cbc:ID>S</cbc:ID>\n                <cbc:Percent>21.0</cbc:Percent>\n                <cac:TaxScheme>\n                    <cbc:ID>VAT</cbc:ID>\n                </cac:TaxScheme>\n            </cac:ClassifiedTaxCategory>\n        </cac:Item>\n        <cac:Price>\n            <cbc:PriceAmount currencyID=\"EUR\">123.45</cbc:PriceAmount>\n        </cac:Price>\n    </cac:InvoiceLine>\n</Invoice>\n```\n\nHere is sequence diagram which describes the flow of receiving an `Invoice` using Pull Notifications:\n\n![Receiving Invoice with Pull Notifications](http://ademico-software.com/wp-content/uploads/2025/03/Peppol-receiveInvoiceUsingPullNotifications.png)\n\nHere is sequence diagram which describes the flow of receiving an `Invoice` using Push(webhook) Notifications:\n\n![Receiving Invoice with Push(webhook) Notifications](http://ademico-software.com/wp-content/uploads/2025/03/Peppol-receiveInvoiceUsingPushNotifications.png)\n\n### Receiving invoices via email\n\nIn specific cases, it is useful to be notified by email each time you receive an `Invoice`.\n\nWe will send you an email to your functional mailbox with the following content:\n\n- email subject: the invoice identifier\n- email body: invoice identifier, sender identifier(eg company registration number, VAT), sender name,\n  sender country, receiver identifier(eg company registration number, VAT), receiver name, receiver country\n- 2 email attachments:\n    - the UBL invoice in XML format\n    - the invoice in PDF format\n\nHere is an example of the contents of the email body we will send you:\n\n```html\nDocument type: Invoice\nDocument id: pbe000512-8\nSender id: 0208:0111111111\nSender name: Seller name\nSender country: Belgium\nReceiver id: 0208:0222222222\nReceiver name: Buyer name\nReceiver country: Belgium\n```\n\nAfter receiving the `Invoice` content in UBL XML format, you as a `Buyer` must process the `Invoice` in your ERP or\nsoftware\napplication. After the\nprocessing takes place, you can optionally inform the `Seller` about the status of the `Invoice`\nby sending an [Invoice Response](#tag/Invoice-Response/operation/sendInvoiceResponse) <br>\nFor instance, you might decide to accept the `Invoice` or reject it because of a business reason eg invalid purchase\norder number.\n\nPlease check the section [Invoice Response](#tag/Invoice-Response/operation/sendInvoiceResponse) for the possible values\nyou can use to inform the `Seller` of your decision.\n\n# Application integration\n\nIn this chapter, we will see how you can integrate your ERP or software application with the Ademico Peppol REST API and\nreceive\nnotifications either using [Pull notifications(polling)](#section/Application-integration/Pull-Notifications-(Polling))\nor\n[Push notifications(webhooks)](#section/Application-integration/Push-Notifications-(Webhooks))\n\n## Generating your API client\n\nThe Ademico Peppol REST API is documented using <a href=\"https://swagger.io/specification/\" target=\"_blank\">OpenAPI 3\nspecification</a>.\n\nThis means that you can easily generate the client in your preferred language. We will see below how to generate your\nclient in Java using <a href=\"https://github.com/OpenAPITools/openapi-generator\" target=\"_blank\">OpenAPI Generator</a>.\nYou can follow a similar approach for generating your client in other languages.\n\nFirst you need to download the OpenAPI Generator from here\n<a href=\"https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/6.1.0/openapi-generator-cli-6.1.0.jar\" target=\"_blank\">\nhere</a>\nand save it in a directory on your local machine. Then switch into that directory and execute the following command:\n\n```shell\njava -jar openapi-generator-cli-6.1.0.jar generate -i https://ademico-software.com/peppol-rest-api/openapi.json -g java\n```\n\nOpenAPI Generator will generate a Maven/Gradle project with a following structure:\n\n```\n|- api\n|- docs\n|- gradle\n|- src\n|- README.md\n|- build.gradle\n|- build.sbt\n|- git_push.sh\n|- gradle.properties\n|- gradlew\n|- gradlew.bat\n|- pom.xml\n|- settings.gradle\n```\n\nIn the directory `src/org/openapitools/client/api` you can find the client APIs eg `InvoiceCreditNoteApi.java` that you\ncan use to call the server side REST service. In the directory `docs` you can find the API documentation with examples\nlike the one below eg `InvoiceCreditNoteApi.md`.\n\nHere is an example how to use the client to get the Invoice UBL XML in the TEST environment:\n\n```java\n// Import classes:\n\nimport org.openapitools.client.ApiClient;\nimport org.openapitools.client.ApiException;\nimport org.openapitools.client.Configuration;\nimport org.openapitools.client.auth.*;\nimport org.openapitools.client.models.*;\nimport org.openapitools.client.api.InvoiceCreditNoteApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n        defaultClient.\n\nsetBasePath(\"https://test-peppol-api1.ademico-software.com\");\n\n// Configure HTTP basic authorization: PeppolBasicAuth\nHttpBasicAuth PeppolBasicAuth = (HttpBasicAuth) defaultClient.getAuthentication(\"PeppolBasicAuth\");\n        PeppolBasicAuth.\n\nsetUsername(\"YOUR USERNAME\");\n        PeppolBasicAuth.\n\nsetPassword(\"YOUR PASSWORD\");\n\nInvoiceCreditNoteApi apiInstance = new InvoiceCreditNoteApi(defaultClient);\nString transmissionId = \"transmissionId_example\"; // String | \n        try{\nString result = apiInstance.getInvoiceInUBLFormat(transmissionId);\n        System.out.\n\nprintln(result);\n        }catch(\nApiException e){\n        // you must replace System.err.println and e.printStackTrace() with a logger from your logging library  \n        System.err.\n\nprintln(\"Exception when calling InvoiceCreditNoteApi#getInvoiceInUBLFormat\");\n        System.err.\n\nprintln(\"Status code: \"+e.getCode());\n        System.err.\n\nprintln(\"Reason: \"+e.getResponseBody());\n        System.err.\n\nprintln(\"Response headers: \"+e.getResponseHeaders());\n        e.\n\nprintStackTrace();\n        }\n```\n\nFor more details on how to generate your API client you can check\nthis <a href=\"https://ademico-software.com/how-to-generate-the-client-api-for-an-openapi-rest-service/\" target=\"_blank\">\narticle</a> on our blog.\n\n## Notifications overview\n\nWhen sending or receiving documents, `Invoices/Credit Notes` change their status depending on different events. The\nstatus change happens asynchronously and therefore this is the reason why notifications are needed.\n\nExample of situations when an `Invoice/Credit Note` changes its status:\n\n- the `Buyer` has validated, accepted or rejected your `Invoice/Credit Note` after you have sent it\n- you have received an `Invoice/Credit Note` from a `Seller`.\n\nWe will see below how you can be notified when the status of your `Invoice/Credit Note` changes.\n\n## Pull Notifications (Polling)\n\nWhen using pull notifications, you need to regularly poll the sending or receiving notifications endpoint to check if\nyou have a\npending notification. We recommend polling for notification once very 5 minutes or even longer.\n\nFor instance, to check the status of an `Invoice/Credit Note` after sending it to the `Buyer`, you use\n[Notifications Endpoint](#tag/Notification/operation/getNotifications).\n\nLet's suppose you get the following sending notification which indicates that the `Buyer` has accepted your `Invoice`:\n\n```json\n{\n  \"eventType\": \"INVOICE_RESPONSE_RECEIVED\",\n  \"notificationId\": 6,\n  \"transmissionId\": \"7ec22637303b11eda7239a0197b30fe2@ademico-software.com\",\n  \"documentId\": \"pbe000512-4\",\n  \"documentStatus\": \"ACCEPTED\",\n  \"peppolDocumentType\": \"INVOICE\",\n  \"sender\": \"0208:0552912569\",\n  \"receiver\": \"0208:0465105397\",\n  \"notificationDate\": \"2022-09-09T13:09:59.524\",\n  \"invoiceResponse\": {\n    \"invoiceTransmissionId\": \"7ec22637303b11eda7239a0197b30fe2@ademico-software.com\",\n    \"responseCode\": \"AP\",\n    \"note\": null,\n    \"effectiveDate\": \"2022-05-22\",\n    \"invoiceClarifications\": []\n  },\n  \"details\": []\n}\n```\n\nYou need to process the notification and update the status of the `Invoice/Credit Note` in your ERP or software\napplication. The next step is to consume the notification using the `notificationId` retrieved previously:\n\nCURL command (or\nuse [Invoice/Credit Note Notifications](#tag/Invoice-Response/operation/consumeInvoiceResponseSendingNotification)):\n\n```shell\ncurl -X DELETE -H \"Authorization: Basic YOUR_USERNAME_AND_PASSWORD_BASE64\" -H \"Content-Type: application/json\" \"https://test-peppol-api1.ademico-software.com/domibus/api/peppol/v1/invoices/sending-notifications/{notificationId}?accessToken=ACCESS_T0KEN_YOU_RECEIVED_FROM_US\"\n```\n\nA consumed notification will not be retrieved anymore when getting the next time the notifications list.\n\nThe other pull notifications types follow the same pattern explained above.\n\n## Push Notifications (Webhooks)\n\nWhen you choose to be notified via push notifications (webhooks), we deliver the notification directly to your\napplication. You would need to implement in your ERP or your software application our\n<a href=\"https://ademico-software.com/peppol-webhook-rest-api/\" target=\"_blank\">Webhook Services</a> documented\nusing\nOpenAPI 3 specification.\n\nLet's suppose that you as a `Seller` send an `Invoice` to the the `Buyer` who accepts your `Invoice`. We will push you\nthe following notification by calling your webhook implementation\ndescribed <a href=\"https://ademico-software.com/peppol-webhook-rest-api/#tag/Notifications\" target=\"_blank\">\nhere</a>:\n\n```json\n{\n  \"eventType\": \"INVOICE_RESPONSE_RECEIVED\",\n  \"notificationId\": 6,\n  \"transmissionId\": \"7ec22637303b11eda7239a0197b30fe2@ademico-software.com\",\n  \"documentId\": \"pbe000512-4\",\n  \"documentStatus\": \"ACCEPTED\",\n  \"peppolDocumentType\": \"INVOICE\",\n  \"sender\": \"0208:0552912569\",\n  \"receiver\": \"0208:0465105397\",\n  \"notificationDate\": \"2022-09-09T13:09:59.524\",\n  \"invoiceResponse\": {\n    \"invoiceTransmissionId\": \"7ec22637303b11eda7239a0197b30fe2@ademico-software.com\",\n    \"responseCode\": \"AP\",\n    \"note\": null,\n    \"effectiveDate\": \"2022-05-22\",\n    \"invoiceClarifications\": []\n  },\n  \"details\": []\n}\n```\n\nWe expect that you return status `200` which indicates us that you have successfully processed the webhook. In case you\nreturn a different status, we will retry sending for one hour every 5 minutes.\n\n> **NOTE** Please make sure to you allow traffic from our servers in your firewall rules. We will provide you the static\n> IP we use\n> to call your service webhooks.\n\nYou can refer to the [Notifications Endpoint](#tag/Notification/operation/getNotifications) documentation to see the\ntypes of notifications we can push to you.\n\n# Glossary\n\n## Participant scheme and identifier\n\nThe **participant scheme** and **participant identifier** together represent the unique identifier of a participant in\nthe Peppol network. For instance the participant scheme and identifier of Ademico Software is `0208:0522912569`.\n\nThe **participant scheme** describes the **participant identifier** type eg VAT number, Chamber of Commerce number, GLN\nnumber, etc. The participant scheme is usually specific to each country eg for Belgium is `0208` which is the enterprise\nnumber but you can also have an\ninternationally used scheme eg GLN number.\nThe complete list of Peppol participant schemes can be\nfound <a href=\"https://docs.peppol.eu/edelivery/codelists\" target=\"_blank\">on the Peppol website</a> under\nsection `Participant Identifier Schemes`.\n\nThe **participant identifier** can be the participant's VAT number, Chamber of Commerce number, GLN, etc. For instance\nthe\nparticipant number of Ademico Software is the enterprise number from the Belgian Crossroad Bank of Enterprises which is\n0552912569.\n\nA legal entity can be registered in the Peppol network multiple times using different identifiers. For instance a legal\nentity in Belgium can be registered with the company registration number 0208:0552912569 and with the Belgium VAT number\n9925:BE0552912569.\n\nHere are some examples of Peppol identifiers in different countries:\n\n<table>\n  <tr>\n    <th>Country</th>\n    <th>Peppol identifiers</th>\n  </tr>\n  <tr>\n        <td>Belgium</td>\n        <td>\n            <ul>\n                <li>0208:0552912569 where 0208 is the scheme for the company registration number and 0552912569 is\n                    the company registration number value\n                </li>\n                <li>9925:BE0552912569 where 9925 is the scheme for the Belgium VAT number and BE0552912569 is the\n                    VAT number value\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <td>Luxembourg</td>\n        <td>\n            <ul>\n                <li>9938:LU12345678 where 9938 is the scheme for the Luxembourg VAT number and LU12345678 is the\n                    VAT number value\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <td>Netherlands</td>\n        <td>\n            <ul>\n                <li>0106:12345678 where 0106 is the scheme for the Netherlands KvK number(Chamber of Commerce) and\n                    12345678 is the KvK number value\n                </li>\n                <li>0190:00000001800123456789 where 0190 is the scheme for the Netherlands OIN(Governmental\n                    organization number) and 00000001800123456789 is the OIN value\n                </li>\n                <li>9944:nl001234567b01 where 9944 is the scheme for the Netherlands VAT number and nl001234567b01\n                    is the VAT number value\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <td>Australia</td>\n        <td>\n            <ul>\n                <li>0151:12345678901 where 0151 is the scheme for the Australian Business Number and 12345678901 is\n                    the Australian Business Number value\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <td>New Zealand</td>\n        <td>\n            <ul>\n                <li>0088:1234567890012 where 0088 is the scheme for the GLN(Global Location Number) and\n                    1234567890012 is the GLN value\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <td>Singapore</td>\n        <td>\n            <ul>\n                <li>0195:SGUEN123456789W where 0195 is the scheme for the Singapore UEN and SGUEN123456789W is the\n                    standard identification number of an entity\n                </li>\n            </ul>\n        </td>\n    </tr>\n</table>\n\n# Changelog\n\n- 1.7 - March 2025\n    - New notifications endpoint which makes it easier to get notifications using one endpoint.\n    - Singapore:\n        - Possibility to perform KYC CorpPass process using API\n        - Possibility to report documents to IRAS C5\n- 1.6 - May 2024\n    - New Legal Entity API to better manage Peppol registrations; the Participant API is deprecated\n    - Fix an issue when duplicate notifications were created in case the same invoice was submitted in parallel in the\n      same time\n    - Added support for PINT AU-NZ Invoices/Credit Notes used in Australia/New Zealand\n    - Added support for Singapore PINT Invoices/Credit notes\n    - Added support for Japan PINT Invoices/Credit notes\n- 1.5 - January 2024\n    - Removed the suffix \"@ademico-software.com\" from the transmission id\n    - Reduced the time to wait after registering a participant\n- 1.4 - December 2023\n    - Added support for SI-UBL Invoices/Credit Notes used in Netherlands\n    - Added support for OpenPeppol statistics\n    - Possibility to filter on event type in the sending notifications\n\n- 1.3 - October 2023\n    - Possibility to send an email to specific email recipients when receiving a document eg Invoice/Credit Note/Order.\n      The email contains the UBL XML and the attachments contained in the UBL XML eg the Invoice in PDF format\n    - Support for Purchase Order - BIS Order only\n\n- 1.2 - July 2023\n    - Added support for Singapore Invoices/Credit Notes\n    - Added possibility to filter the notifications(sending, receiving and invoice response) based on start date and end\n      date\n    - Possibility to send and receive Invoices/Credit Notes up to 50MB\n    - Updated validation rules to the Peppol May release\n\n- 1.1 - March 2023\n    - Added possibility to filter the notifications(sending, receiving and invoice response) based on the sender and the\n      receiver\n    - Improved documentation\n\n</br></br>\n<h1>Ademico Peppol REST API Documentation</h1>\n\n\nContact Support:\n Name: Contact\n Email: info@ademico-software.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43454038",
		"_collection_link": "https://josvermoesen-2654697.postman.co/workspace/Jos-Vermoesen's-Workspace~55723a83-17d9-4861-8dfb-3775fcdbb4c9/collection/43454038-af08963c-5275-4606-bd25-8c74ce751676?action=share&source=collection_link&creator=43454038"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "peppol",
					"item": [
						{
							"name": "v1",
							"item": [
								{
									"name": "legal-entities",
									"item": [
										{
											"name": "{legalEntityId}",
											"item": [
												{
													"name": "peppol-registrations",
													"item": [
														{
															"name": "{peppolRegistrationId}",
															"item": [
																{
																	"name": "kyc",
																	"item": [
																		{
																			"name": "pdf",
																			"item": [
																				{
																					"name": "KYC process using PDF authorisation document",
																					"request": {
																						"auth": {
																							"type": "basic",
																							"basic": [
																								{
																									"key": "username",
																									"value": "{{basicAuthUsername}}",
																									"type": "string"
																								},
																								{
																									"key": "password",
																									"value": "{{basicAuthPassword}}",
																									"type": "string"
																								}
																							]
																						},
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"pdfDocumentBase64\": \"VGhlIFBERiBhdXRob3JpemF0aW9uIGRvY3VtZW50IGluIGJhc2U2NA==\"\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/kyc/pdf",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"api",
																								"peppol",
																								"v1",
																								"legal-entities",
																								":legalEntityId",
																								"peppol-registrations",
																								":peppolRegistrationId",
																								"kyc",
																								"pdf"
																							],
																							"variable": [
																								{
																									"key": "legalEntityId",
																									"value": "7",
																									"description": "(Required) The id of the legal entity"
																								},
																								{
																									"key": "peppolRegistrationId",
																									"value": "1",
																									"description": "(Required) The id of the Peppol registration for which you want to sign the KYC"
																								}
																							]
																						},
																						"description": "This endpoint is used in Singapore and Malaysia. </br> Provide a PDF authorisation document to sign and complete the KYC process for a Peppol registration. </br>For Singapore, you can use this service only in the Test environment. In the Production environment, you must use Corppass to complete the KYC process."
																					},
																					"response": [
																						{
																							"name": "Signed KYC using PDF successfully.",
																							"originalRequest": {
																								"method": "PUT",
																								"header": [
																									{
																										"key": "Content-Type",
																										"value": "application/json"
																									},
																									{
																										"key": "Authorization",
																										"value": "Basic <credentials>",
																										"description": "Added as a part of security scheme: basic"
																									}
																								],
																								"body": {
																									"mode": "raw",
																									"raw": "{\n  \"pdfDocumentBase64\": \"VGhlIFBERiBhdXRob3JpemF0aW9uIGRvY3VtZW50IGluIGJhc2U2NA==\"\n}",
																									"options": {
																										"raw": {
																											"headerFamily": "json",
																											"language": "json"
																										}
																									}
																								},
																								"url": {
																									"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/kyc/pdf",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"peppol",
																										"v1",
																										"legal-entities",
																										":legalEntityId",
																										"peppol-registrations",
																										":peppolRegistrationId",
																										"kyc",
																										"pdf"
																									],
																									"variable": [
																										{
																											"key": "legalEntityId"
																										},
																										{
																											"key": "peppolRegistrationId"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "text",
																							"header": [],
																							"cookie": [],
																							"body": ""
																						},
																						{
																							"name": "Error signing KYC using PDF",
																							"originalRequest": {
																								"method": "PUT",
																								"header": [
																									{
																										"key": "Content-Type",
																										"value": "application/json"
																									},
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"key": "Authorization",
																										"value": "Basic <credentials>",
																										"description": "Added as a part of security scheme: basic"
																									}
																								],
																								"body": {
																									"mode": "raw",
																									"raw": "{\n  \"pdfDocumentBase64\": \"VGhlIFBERiBhdXRob3JpemF0aW9uIGRvY3VtZW50IGluIGJhc2U2NA==\"\n}",
																									"options": {
																										"raw": {
																											"headerFamily": "json",
																											"language": "json"
																										}
																									}
																								},
																								"url": {
																									"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/kyc/pdf",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"peppol",
																										"v1",
																										"legal-entities",
																										":legalEntityId",
																										"peppol-registrations",
																										":peppolRegistrationId",
																										"kyc",
																										"pdf"
																									],
																									"variable": [
																										{
																											"key": "legalEntityId"
																										},
																										{
																											"key": "peppolRegistrationId"
																										}
																									]
																								}
																							},
																							"status": "Bad Request",
																							"code": 400,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error signing KYC process using PDF\"\n}"
																						},
																						{
																							"name": "Authentication failure",
																							"originalRequest": {
																								"method": "PUT",
																								"header": [
																									{
																										"key": "Content-Type",
																										"value": "application/json"
																									},
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"key": "Authorization",
																										"value": "Basic <credentials>",
																										"description": "Added as a part of security scheme: basic"
																									}
																								],
																								"body": {
																									"mode": "raw",
																									"raw": "{\n  \"pdfDocumentBase64\": \"VGhlIFBERiBhdXRob3JpemF0aW9uIGRvY3VtZW50IGluIGJhc2U2NA==\"\n}",
																									"options": {
																										"raw": {
																											"headerFamily": "json",
																											"language": "json"
																										}
																									}
																								},
																								"url": {
																									"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/kyc/pdf",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"peppol",
																										"v1",
																										"legal-entities",
																										":legalEntityId",
																										"peppol-registrations",
																										":peppolRegistrationId",
																										"kyc",
																										"pdf"
																									],
																									"variable": [
																										{
																											"key": "legalEntityId"
																										},
																										{
																											"key": "peppolRegistrationId"
																										}
																									]
																								}
																							},
																							"status": "Unauthorized",
																							"code": 401,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																						}
																					]
																				}
																			]
																		},
																		{
																			"name": "corppass",
																			"item": [
																				{
																					"name": "initiate",
																					"item": [
																						{
																							"name": "Singapore Corppass - Initiate the KYC process",
																							"request": {
																								"auth": {
																									"type": "basic",
																									"basic": [
																										{
																											"key": "username",
																											"value": "{{basicAuthUsername}}",
																											"type": "string"
																										},
																										{
																											"key": "password",
																											"value": "{{basicAuthPassword}}",
																											"type": "string"
																										}
																									]
																								},
																								"method": "POST",
																								"header": [
																									{
																										"key": "Content-Type",
																										"value": "application/json"
																									},
																									{
																										"key": "Accept",
																										"value": "application/json"
																									}
																								],
																								"body": {
																									"mode": "raw",
																									"raw": "{\n  \"signerName\": \"John Doe\",\n  \"signerEmail\": \"john.doe@example.com\"\n}",
																									"options": {
																										"raw": {
																											"headerFamily": "json",
																											"language": "json"
																										}
																									}
																								},
																								"url": {
																									"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/kyc/corppass/initiate",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"peppol",
																										"v1",
																										"legal-entities",
																										":legalEntityId",
																										"peppol-registrations",
																										":peppolRegistrationId",
																										"kyc",
																										"corppass",
																										"initiate"
																									],
																									"variable": [
																										{
																											"key": "legalEntityId",
																											"value": "7",
																											"description": "(Required) The id of the legal entity"
																										},
																										{
																											"key": "peppolRegistrationId",
																											"value": "1",
																											"description": "(Required) The id of the Peppol registration for which you want to initiate the Corppass KYC process"
																										}
																									]
																								},
																								"description": "Provide the contact details to initiate the Corppass KYC process. You will receive an email with instructions to complete the Corppass KYC process"
																							},
																							"response": [
																								{
																									"name": "Corppass KYC initiated successfully.",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Content-Type",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"body": {
																											"mode": "raw",
																											"raw": "{\n  \"signerName\": \"John Doe\",\n  \"signerEmail\": \"john.doe@example.com\"\n}",
																											"options": {
																												"raw": {
																													"headerFamily": "json",
																													"language": "json"
																												}
																											}
																										},
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/kyc/corppass/initiate",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"kyc",
																												"corppass",
																												"initiate"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "OK",
																									"code": 200,
																									"_postman_previewlanguage": "text",
																									"header": [],
																									"cookie": [],
																									"body": ""
																								},
																								{
																									"name": "Error initiating Corppass KYC request",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Content-Type",
																												"value": "application/json"
																											},
																											{
																												"key": "Accept",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"body": {
																											"mode": "raw",
																											"raw": "{\n  \"signerName\": \"John Doe\",\n  \"signerEmail\": \"john.doe@example.com\"\n}",
																											"options": {
																												"raw": {
																													"headerFamily": "json",
																													"language": "json"
																												}
																											}
																										},
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/kyc/corppass/initiate",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"kyc",
																												"corppass",
																												"initiate"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "Bad Request",
																									"code": 400,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "application/json"
																										}
																									],
																									"cookie": [],
																									"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error initiating KYC in Corppass\"\n}"
																								},
																								{
																									"name": "Authentication failure",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Content-Type",
																												"value": "application/json"
																											},
																											{
																												"key": "Accept",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"body": {
																											"mode": "raw",
																											"raw": "{\n  \"signerName\": \"John Doe\",\n  \"signerEmail\": \"john.doe@example.com\"\n}",
																											"options": {
																												"raw": {
																													"headerFamily": "json",
																													"language": "json"
																												}
																											}
																										},
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/kyc/corppass/initiate",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"kyc",
																												"corppass",
																												"initiate"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "Unauthorized",
																									"code": 401,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "application/json"
																										}
																									],
																									"cookie": [],
																									"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																								}
																							]
																						}
																					]
																				},
																				{
																					"name": "cancel",
																					"item": [
																						{
																							"name": "Singapore Corppass - Cancel the KYC process",
																							"request": {
																								"auth": {
																									"type": "basic",
																									"basic": [
																										{
																											"key": "username",
																											"value": "{{basicAuthUsername}}",
																											"type": "string"
																										},
																										{
																											"key": "password",
																											"value": "{{basicAuthPassword}}",
																											"type": "string"
																										}
																									]
																								},
																								"method": "POST",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "application/json"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/kyc/corppass/cancel",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"peppol",
																										"v1",
																										"legal-entities",
																										":legalEntityId",
																										"peppol-registrations",
																										":peppolRegistrationId",
																										"kyc",
																										"corppass",
																										"cancel"
																									],
																									"variable": [
																										{
																											"key": "legalEntityId",
																											"value": "7",
																											"description": "(Required) The id of the legal entity"
																										},
																										{
																											"key": "peppolRegistrationId",
																											"value": "1",
																											"description": "(Required) The id of the Peppol registration for which you want to cancel the Corppass KYC process"
																										}
																									]
																								},
																								"description": "Cancel an initiated Corppass KYC process"
																							},
																							"response": [
																								{
																									"name": "Corppass KYC cancelled successfully.",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/kyc/corppass/cancel",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"kyc",
																												"corppass",
																												"cancel"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "OK",
																									"code": 200,
																									"_postman_previewlanguage": "text",
																									"header": [],
																									"cookie": [],
																									"body": ""
																								},
																								{
																									"name": "Error cancelling Corppass KYC request",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Accept",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/kyc/corppass/cancel",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"kyc",
																												"corppass",
																												"cancel"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "Bad Request",
																									"code": 400,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "application/json"
																										}
																									],
																									"cookie": [],
																									"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error cancelling KYC in Corppass\"\n}"
																								},
																								{
																									"name": "Authentication failure",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Accept",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/kyc/corppass/cancel",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"kyc",
																												"corppass",
																												"cancel"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "Unauthorized",
																									"code": 401,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "application/json"
																										}
																									],
																									"cookie": [],
																									"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																},
																{
																	"name": "c5",
																	"item": [
																		{
																			"name": "corppass",
																			"item": [
																				{
																					"name": "deactivate",
																					"item": [
																						{
																							"name": "Singapore - Initiate C5 deactivation",
																							"request": {
																								"auth": {
																									"type": "basic",
																									"basic": [
																										{
																											"key": "username",
																											"value": "{{basicAuthUsername}}",
																											"type": "string"
																										},
																										{
																											"key": "password",
																											"value": "{{basicAuthPassword}}",
																											"type": "string"
																										}
																									]
																								},
																								"method": "POST",
																								"header": [
																									{
																										"key": "Content-Type",
																										"value": "application/json"
																									},
																									{
																										"key": "Accept",
																										"value": "application/json"
																									}
																								],
																								"body": {
																									"mode": "raw",
																									"raw": "{\n  \"signerName\": \"John Doe\",\n  \"signerEmail\": \"john.doe@example.com\"\n}",
																									"options": {
																										"raw": {
																											"headerFamily": "json",
																											"language": "json"
																										}
																									}
																								},
																								"url": {
																									"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass/deactivate",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"peppol",
																										"v1",
																										"legal-entities",
																										":legalEntityId",
																										"peppol-registrations",
																										":peppolRegistrationId",
																										"c5",
																										"corppass",
																										"deactivate"
																									],
																									"variable": [
																										{
																											"key": "legalEntityId",
																											"value": "7",
																											"description": "(Required) The id of the legal entity"
																										},
																										{
																											"key": "peppolRegistrationId",
																											"value": "1",
																											"description": "(Required) The id of the Peppol registration for which you want to initiate the Corppass C5 deactivation"
																										}
																									]
																								},
																								"description": "Provide the contact details to initiate the Corppass C5 deactivation. You will receive an email with instructions to complete the Corppass C5 deactivation"
																							},
																							"response": [
																								{
																									"name": "Corppass C5 deactivation requested successfully.",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Content-Type",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"body": {
																											"mode": "raw",
																											"raw": "{\n  \"signerName\": \"John Doe\",\n  \"signerEmail\": \"john.doe@example.com\"\n}",
																											"options": {
																												"raw": {
																													"headerFamily": "json",
																													"language": "json"
																												}
																											}
																										},
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass/deactivate",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"c5",
																												"corppass",
																												"deactivate"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "OK",
																									"code": 200,
																									"_postman_previewlanguage": "text",
																									"header": [],
																									"cookie": [],
																									"body": ""
																								},
																								{
																									"name": "Error initiating Corppass C5 deactivation",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Content-Type",
																												"value": "application/json"
																											},
																											{
																												"key": "Accept",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"body": {
																											"mode": "raw",
																											"raw": "{\n  \"signerName\": \"John Doe\",\n  \"signerEmail\": \"john.doe@example.com\"\n}",
																											"options": {
																												"raw": {
																													"headerFamily": "json",
																													"language": "json"
																												}
																											}
																										},
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass/deactivate",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"c5",
																												"corppass",
																												"deactivate"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "Bad Request",
																									"code": 400,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "application/json"
																										}
																									],
																									"cookie": [],
																									"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error initiating C5 in Corppass\"\n}"
																								},
																								{
																									"name": "Authentication failure",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Content-Type",
																												"value": "application/json"
																											},
																											{
																												"key": "Accept",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"body": {
																											"mode": "raw",
																											"raw": "{\n  \"signerName\": \"John Doe\",\n  \"signerEmail\": \"john.doe@example.com\"\n}",
																											"options": {
																												"raw": {
																													"headerFamily": "json",
																													"language": "json"
																												}
																											}
																										},
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass/deactivate",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"c5",
																												"corppass",
																												"deactivate"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "Unauthorized",
																									"code": 401,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "application/json"
																										}
																									],
																									"cookie": [],
																									"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																								}
																							]
																						}
																					]
																				},
																				{
																					"name": "cancel",
																					"item": [
																						{
																							"name": "Singapore - Cancel the C5 activation or deactivation",
																							"request": {
																								"auth": {
																									"type": "basic",
																									"basic": [
																										{
																											"key": "username",
																											"value": "{{basicAuthUsername}}",
																											"type": "string"
																										},
																										{
																											"key": "password",
																											"value": "{{basicAuthPassword}}",
																											"type": "string"
																										}
																									]
																								},
																								"method": "POST",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "application/json"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass/cancel",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"peppol",
																										"v1",
																										"legal-entities",
																										":legalEntityId",
																										"peppol-registrations",
																										":peppolRegistrationId",
																										"c5",
																										"corppass",
																										"cancel"
																									],
																									"variable": [
																										{
																											"key": "legalEntityId",
																											"value": "7",
																											"description": "(Required) The id of the legal entity"
																										},
																										{
																											"key": "peppolRegistrationId",
																											"value": "1",
																											"description": "(Required) The id of the Peppol registration for which you want to cancel the Corppass activation or deactivation process"
																										}
																									]
																								},
																								"description": "Cancel an initiated Corppass C5 activation or deactivation"
																							},
																							"response": [
																								{
																									"name": "Corppass C5 cancelled successfully.",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass/cancel",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"c5",
																												"corppass",
																												"cancel"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "OK",
																									"code": 200,
																									"_postman_previewlanguage": "text",
																									"header": [],
																									"cookie": [],
																									"body": ""
																								},
																								{
																									"name": "Error cancelling Corppass C5 activation/deactivation request",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Accept",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass/cancel",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"c5",
																												"corppass",
																												"cancel"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "Bad Request",
																									"code": 400,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "application/json"
																										}
																									],
																									"cookie": [],
																									"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error cancelling C5 in Corppass\"\n}"
																								},
																								{
																									"name": "Authentication failure",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Accept",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass/cancel",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"c5",
																												"corppass",
																												"cancel"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "Unauthorized",
																									"code": 401,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "application/json"
																										}
																									],
																									"cookie": [],
																									"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																								}
																							]
																						}
																					]
																				},
																				{
																					"name": "activate",
																					"item": [
																						{
																							"name": "Singapore - Initiate C5 activation",
																							"request": {
																								"auth": {
																									"type": "basic",
																									"basic": [
																										{
																											"key": "username",
																											"value": "{{basicAuthUsername}}",
																											"type": "string"
																										},
																										{
																											"key": "password",
																											"value": "{{basicAuthPassword}}",
																											"type": "string"
																										}
																									]
																								},
																								"method": "POST",
																								"header": [
																									{
																										"key": "Content-Type",
																										"value": "application/json"
																									},
																									{
																										"key": "Accept",
																										"value": "application/json"
																									}
																								],
																								"body": {
																									"mode": "raw",
																									"raw": "{\n  \"signerName\": \"John Doe\",\n  \"signerEmail\": \"john.doe@example.com\"\n}",
																									"options": {
																										"raw": {
																											"headerFamily": "json",
																											"language": "json"
																										}
																									}
																								},
																								"url": {
																									"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass/activate",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"peppol",
																										"v1",
																										"legal-entities",
																										":legalEntityId",
																										"peppol-registrations",
																										":peppolRegistrationId",
																										"c5",
																										"corppass",
																										"activate"
																									],
																									"variable": [
																										{
																											"key": "legalEntityId",
																											"value": "7",
																											"description": "(Required) The id of the legal entity"
																										},
																										{
																											"key": "peppolRegistrationId",
																											"value": "1",
																											"description": "(Required) The id of the Peppol registration for which you want to initiate the Corppass C5 activation"
																										}
																									]
																								},
																								"description": "Provide the contact details to initiate the Corppass C5 activation. You will receive an email with instructions to complete the Corppass C5 activation"
																							},
																							"response": [
																								{
																									"name": "Corppass C5 initiated successfully.",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Content-Type",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"body": {
																											"mode": "raw",
																											"raw": "{\n  \"signerName\": \"John Doe\",\n  \"signerEmail\": \"john.doe@example.com\"\n}",
																											"options": {
																												"raw": {
																													"headerFamily": "json",
																													"language": "json"
																												}
																											}
																										},
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass/activate",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"c5",
																												"corppass",
																												"activate"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "OK",
																									"code": 200,
																									"_postman_previewlanguage": "text",
																									"header": [],
																									"cookie": [],
																									"body": ""
																								},
																								{
																									"name": "Error initiating Corppass C5 activation",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Content-Type",
																												"value": "application/json"
																											},
																											{
																												"key": "Accept",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"body": {
																											"mode": "raw",
																											"raw": "{\n  \"signerName\": \"John Doe\",\n  \"signerEmail\": \"john.doe@example.com\"\n}",
																											"options": {
																												"raw": {
																													"headerFamily": "json",
																													"language": "json"
																												}
																											}
																										},
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass/activate",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"c5",
																												"corppass",
																												"activate"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "Bad Request",
																									"code": 400,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "application/json"
																										}
																									],
																									"cookie": [],
																									"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error initiating C5 in Corppass\"\n}"
																								},
																								{
																									"name": "Authentication failure",
																									"originalRequest": {
																										"method": "POST",
																										"header": [
																											{
																												"key": "Content-Type",
																												"value": "application/json"
																											},
																											{
																												"key": "Accept",
																												"value": "application/json"
																											},
																											{
																												"key": "Authorization",
																												"value": "Basic <credentials>",
																												"description": "Added as a part of security scheme: basic"
																											}
																										],
																										"body": {
																											"mode": "raw",
																											"raw": "{\n  \"signerName\": \"John Doe\",\n  \"signerEmail\": \"john.doe@example.com\"\n}",
																											"options": {
																												"raw": {
																													"headerFamily": "json",
																													"language": "json"
																												}
																											}
																										},
																										"url": {
																											"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass/activate",
																											"host": [
																												"{{baseUrl}}"
																											],
																											"path": [
																												"api",
																												"peppol",
																												"v1",
																												"legal-entities",
																												":legalEntityId",
																												"peppol-registrations",
																												":peppolRegistrationId",
																												"c5",
																												"corppass",
																												"activate"
																											],
																											"variable": [
																												{
																													"key": "legalEntityId"
																												},
																												{
																													"key": "peppolRegistrationId"
																												}
																											]
																										}
																									},
																									"status": "Unauthorized",
																									"code": 401,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "application/json"
																										}
																									],
																									"cookie": [],
																									"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																								}
																							]
																						}
																					]
																				},
																				{
																					"name": "Singapore - Get the details of the C5 activation",
																					"request": {
																						"auth": {
																							"type": "basic",
																							"basic": [
																								{
																									"key": "username",
																									"value": "{{basicAuthUsername}}",
																									"type": "string"
																								},
																								{
																									"key": "password",
																									"value": "{{basicAuthPassword}}",
																									"type": "string"
																								}
																							]
																						},
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"api",
																								"peppol",
																								"v1",
																								"legal-entities",
																								":legalEntityId",
																								"peppol-registrations",
																								":peppolRegistrationId",
																								"c5",
																								"corppass"
																							],
																							"variable": [
																								{
																									"key": "legalEntityId",
																									"value": "7",
																									"description": "(Required) The id of the legal entity"
																								},
																								{
																									"key": "peppolRegistrationId",
																									"value": "1",
																									"description": "(Required) The id of the Peppol registration for which you want to get the Corppass activation details"
																								}
																							]
																						},
																						"description": "The details of the C5 activation.<ul><li>ACTIVATED= The C5 activation has been signed</li><li>INITIATED_ACTIVATION= Signing of a C5 activation has been initiated</li><li>INITIATED_DEACTIVATION= Signing of a deactivation of an existing C5 activation has been initiated</li><li>PENDING_KYC= C5 Activation has been initiated but participant is still waiting for KYC signing</li></ul>"
																					},
																					"response": [
																						{
																							"name": "Corppass C5 activation retrieved successfully.",
																							"originalRequest": {
																								"method": "GET",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"key": "Authorization",
																										"value": "Basic <credentials>",
																										"description": "Added as a part of security scheme: basic"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"peppol",
																										"v1",
																										"legal-entities",
																										":legalEntityId",
																										"peppol-registrations",
																										":peppolRegistrationId",
																										"c5",
																										"corppass"
																									],
																									"variable": [
																										{
																											"key": "legalEntityId"
																										},
																										{
																											"key": "peppolRegistrationId"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"initiatedDate\": \"2019-08-24T14:15:22Z\",\n  \"signed\": true,\n  \"signerEmail\": \"john.doe@example.com\",\n  \"state\": \"ACTIVATED\",\n  \"actualSignerName\": \"John Doe\",\n  \"actualSignerEmail\": \"john.doe@example.com\",\n  \"signerName\": \"John Doe\",\n  \"signedDate\": \"2019-08-24T14:15:22Z\"\n}"
																						},
																						{
																							"name": "Error getting Corppass C5 activation details",
																							"originalRequest": {
																								"method": "GET",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"key": "Authorization",
																										"value": "Basic <credentials>",
																										"description": "Added as a part of security scheme: basic"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"peppol",
																										"v1",
																										"legal-entities",
																										":legalEntityId",
																										"peppol-registrations",
																										":peppolRegistrationId",
																										"c5",
																										"corppass"
																									],
																									"variable": [
																										{
																											"key": "legalEntityId"
																										},
																										{
																											"key": "peppolRegistrationId"
																										}
																									]
																								}
																							},
																							"status": "Bad Request",
																							"code": 400,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error getting the Corppass C5 activation details\"\n}"
																						},
																						{
																							"name": "Authentication failure",
																							"originalRequest": {
																								"method": "GET",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"key": "Authorization",
																										"value": "Basic <credentials>",
																										"description": "Added as a part of security scheme: basic"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId/c5/corppass",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"api",
																										"peppol",
																										"v1",
																										"legal-entities",
																										":legalEntityId",
																										"peppol-registrations",
																										":peppolRegistrationId",
																										"c5",
																										"corppass"
																									],
																									"variable": [
																										{
																											"key": "legalEntityId"
																										},
																										{
																											"key": "peppolRegistrationId"
																										}
																									]
																								}
																							},
																							"status": "Unauthorized",
																							"code": 401,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																						}
																					]
																				}
																			]
																		}
																	]
																},
																{
																	"name": "Update a Peppol registration for a legal entity",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"peppolRegistrationDetails\": {\n    \"peppolIdentifier\": {\n      \"scheme\": \"0208\",\n      \"identifier\": \"0552912569\"\n    },\n    \"supportedDocuments\": [\n      \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n      \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n      \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n      \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n    ],\n    \"peppolRegistration\": true\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"legal-entities",
																				":legalEntityId",
																				"peppol-registrations",
																				":peppolRegistrationId"
																			],
																			"variable": [
																				{
																					"key": "legalEntityId",
																					"value": "7",
																					"description": "(Required) The id of the legal entity you want to update in the Peppol network"
																				},
																				{
																					"key": "peppolRegistrationId",
																					"value": "1",
																					"description": "(Required) The id of the Peppol registration you want to update"
																				}
																			]
																		},
																		"description": "Update a Peppol registration for a legal entity(for instance to update the supported documents). You can have a look in the section <a href=\"#section/Getting-started/Register-your-legal-entity-as-a-participant-in-the-Peppol-network\">Register your legal entity as a participant in the Peppol network</a> for more details."
																	},
																	"response": [
																		{
																			"name": "Legal entity updated successfully.",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"peppolRegistrationDetails\": {\n    \"peppolIdentifier\": {\n      \"scheme\": \"0208\",\n      \"identifier\": \"0552912569\"\n    },\n    \"supportedDocuments\": [\n      \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n      \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n      \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n      \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n    ],\n    \"peppolRegistration\": true\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"peppol",
																						"v1",
																						"legal-entities",
																						":legalEntityId",
																						"peppol-registrations",
																						":peppolRegistrationId"
																					],
																					"variable": [
																						{
																							"key": "legalEntityId"
																						},
																						{
																							"key": "peppolRegistrationId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"legalEntityId\": 6156\n}"
																		},
																		{
																			"name": "Error updating legal entity",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"peppolRegistrationDetails\": {\n    \"peppolIdentifier\": {\n      \"scheme\": \"0208\",\n      \"identifier\": \"0552912569\"\n    },\n    \"supportedDocuments\": [\n      \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n      \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n      \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n      \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n    ],\n    \"peppolRegistration\": true\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"peppol",
																						"v1",
																						"legal-entities",
																						":legalEntityId",
																						"peppol-registrations",
																						":peppolRegistrationId"
																					],
																					"variable": [
																						{
																							"key": "legalEntityId"
																						},
																						{
																							"key": "peppolRegistrationId"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error creating legal entity\"\n}"
																		},
																		{
																			"name": "Authentication failure",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"peppolRegistrationDetails\": {\n    \"peppolIdentifier\": {\n      \"scheme\": \"0208\",\n      \"identifier\": \"0552912569\"\n    },\n    \"supportedDocuments\": [\n      \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n      \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n      \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n      \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n    ],\n    \"peppolRegistration\": true\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"peppol",
																						"v1",
																						"legal-entities",
																						":legalEntityId",
																						"peppol-registrations",
																						":peppolRegistrationId"
																					],
																					"variable": [
																						{
																							"key": "legalEntityId"
																						},
																						{
																							"key": "peppolRegistrationId"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																		}
																	]
																},
																{
																	"name": "Delete a Peppol registration for a legal entity",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"legal-entities",
																				":legalEntityId",
																				"peppol-registrations",
																				":peppolRegistrationId"
																			],
																			"variable": [
																				{
																					"key": "legalEntityId",
																					"value": "7",
																					"description": "(Required) The id of the legal entity"
																				},
																				{
																					"key": "peppolRegistrationId",
																					"value": "1",
																					"description": "(Required) The id of the Peppol registration you want to delete"
																				}
																			]
																		},
																		"description": "Delete a Peppol registration for a legal entity. The Peppol registration of the legal entity will be also deleted from the Peppol network(SML/SMP). "
																	},
																	"response": [
																		{
																			"name": "Peppol registration deleted successfully",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"peppol",
																						"v1",
																						"legal-entities",
																						":legalEntityId",
																						"peppol-registrations",
																						":peppolRegistrationId"
																					],
																					"variable": [
																						{
																							"key": "legalEntityId"
																						},
																						{
																							"key": "peppolRegistrationId"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Error deleting Peppol registration",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"peppol",
																						"v1",
																						"legal-entities",
																						":legalEntityId",
																						"peppol-registrations",
																						":peppolRegistrationId"
																					],
																					"variable": [
																						{
																							"key": "legalEntityId"
																						},
																						{
																							"key": "peppolRegistrationId"
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Could not delete the Peppol registration for legal entity\"\n}"
																		},
																		{
																			"name": "Authentication failure",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations/:peppolRegistrationId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"peppol",
																						"v1",
																						"legal-entities",
																						":legalEntityId",
																						"peppol-registrations",
																						":peppolRegistrationId"
																					],
																					"variable": [
																						{
																							"key": "legalEntityId"
																						},
																						{
																							"key": "peppolRegistrationId"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get the list of Peppol registrations for a legal entity",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations?peppolRegistrationId=9&peppolRegistrationScheme=0208&peppolRegistrationIdentifier=0552912569&peppolSupportedDocument=PEPPOL_BIS_BILLING_UBL_INVOICE_V3&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"legal-entities",
																		":legalEntityId",
																		"peppol-registrations"
																	],
																	"query": [
																		{
																			"key": "peppolRegistrationId",
																			"value": "9",
																			"description": "The id of the Peppol registration"
																		},
																		{
																			"key": "peppolRegistrationScheme",
																			"value": "0208",
																			"description": "The Peppol identifier scheme of the legal entity"
																		},
																		{
																			"key": "peppolRegistrationIdentifier",
																			"value": "0552912569",
																			"description": "The Peppol identifier of the legal entity"
																		},
																		{
																			"key": "peppolSupportedDocument",
																			"value": "PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
																			"description": "The document that can be received by the legal entity in the Peppol network"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	],
																	"variable": [
																		{
																			"key": "legalEntityId",
																			"value": "2588",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "You get a list of Peppol registrations with the following details:<ul><li>The scheme and identifier of the legal entity in the Peppol network eg 0208:0552912569</li><li>The list of Peppol supported documents the legal entity can send and receive eg PEPPOL_BIS_BILLING_UBL_INVOICE_V3</li></ul>"
															},
															"response": [
																{
																	"name": "Peppol registrations for legal entity retrieved successfully",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations?peppolRegistrationId=9&peppolRegistrationScheme=0208&peppolRegistrationIdentifier=0552912569&peppolSupportedDocument=PEPPOL_BIS_BILLING_UBL_INVOICE_V3&page=0&pageSize=10",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"legal-entities",
																				":legalEntityId",
																				"peppol-registrations"
																			],
																			"query": [
																				{
																					"key": "peppolRegistrationId",
																					"value": "9",
																					"description": "The id of the Peppol registration"
																				},
																				{
																					"key": "peppolRegistrationScheme",
																					"value": "0208",
																					"description": "The Peppol identifier scheme of the legal entity"
																				},
																				{
																					"key": "peppolRegistrationIdentifier",
																					"value": "0552912569",
																					"description": "The Peppol identifier of the legal entity"
																				},
																				{
																					"key": "peppolSupportedDocument",
																					"value": "PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
																					"description": "The document that can be received by the legal entity in the Peppol network"
																				},
																				{
																					"key": "page",
																					"value": "0",
																					"description": "The starting page number from which we want to retrieve results. The first page is 0."
																				},
																				{
																					"key": "pageSize",
																					"value": "10",
																					"description": "How many results we retrieve per page"
																				}
																			],
																			"variable": [
																				{
																					"key": "legalEntityId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"pagination\": {\n    \"count\": 2,\n    \"page\": 0,\n    \"pageSize\": 10\n  },\n  \"peppolRegistrations\": [\n    {\n      \"peppolRegistrationId\": 1,\n      \"peppolRegistrationDetails\": {\n        \"peppolIdentifier\": {\n          \"scheme\": \"0208\",\n          \"identifier\": \"0552912569\"\n        },\n        \"supportedDocuments\": [\n          \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n          \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n          \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n          \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n        ],\n        \"peppolRegistration\": true\n      }\n    },\n    {\n      \"peppolRegistrationId\": 1,\n      \"peppolRegistrationDetails\": {\n        \"peppolIdentifier\": {\n          \"scheme\": \"9925\",\n          \"identifier\": \"BE0552912569\"\n        },\n        \"supportedDocuments\": [\n          \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n          \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n          \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n          \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n        ],\n        \"peppolRegistration\": true\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Error retrieving Peppol registrations for legal entity",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations?peppolRegistrationId=9&peppolRegistrationScheme=0208&peppolRegistrationIdentifier=0552912569&peppolSupportedDocument=PEPPOL_BIS_BILLING_UBL_INVOICE_V3&page=0&pageSize=10",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"legal-entities",
																				":legalEntityId",
																				"peppol-registrations"
																			],
																			"query": [
																				{
																					"key": "peppolRegistrationId",
																					"value": "9",
																					"description": "The id of the Peppol registration"
																				},
																				{
																					"key": "peppolRegistrationScheme",
																					"value": "0208",
																					"description": "The Peppol identifier scheme of the legal entity"
																				},
																				{
																					"key": "peppolRegistrationIdentifier",
																					"value": "0552912569",
																					"description": "The Peppol identifier of the legal entity"
																				},
																				{
																					"key": "peppolSupportedDocument",
																					"value": "PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
																					"description": "The document that can be received by the legal entity in the Peppol network"
																				},
																				{
																					"key": "page",
																					"value": "0",
																					"description": "The starting page number from which we want to retrieve results. The first page is 0."
																				},
																				{
																					"key": "pageSize",
																					"value": "10",
																					"description": "How many results we retrieve per page"
																				}
																			],
																			"variable": [
																				{
																					"key": "legalEntityId"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error retrieving Peppol registrations for legal entity\"\n}"
																},
																{
																	"name": "Authentication failure",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations?peppolRegistrationId=9&peppolRegistrationScheme=0208&peppolRegistrationIdentifier=0552912569&peppolSupportedDocument=PEPPOL_BIS_BILLING_UBL_INVOICE_V3&page=0&pageSize=10",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"legal-entities",
																				":legalEntityId",
																				"peppol-registrations"
																			],
																			"query": [
																				{
																					"key": "peppolRegistrationId",
																					"value": "9",
																					"description": "The id of the Peppol registration"
																				},
																				{
																					"key": "peppolRegistrationScheme",
																					"value": "0208",
																					"description": "The Peppol identifier scheme of the legal entity"
																				},
																				{
																					"key": "peppolRegistrationIdentifier",
																					"value": "0552912569",
																					"description": "The Peppol identifier of the legal entity"
																				},
																				{
																					"key": "peppolSupportedDocument",
																					"value": "PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
																					"description": "The document that can be received by the legal entity in the Peppol network"
																				},
																				{
																					"key": "page",
																					"value": "0",
																					"description": "The starting page number from which we want to retrieve results. The first page is 0."
																				},
																				{
																					"key": "pageSize",
																					"value": "10",
																					"description": "How many results we retrieve per page"
																				}
																			],
																			"variable": [
																				{
																					"key": "legalEntityId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																}
															]
														},
														{
															"name": "Register a legal entity in the Peppol network",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"peppolRegistrationDetails\": {\n    \"peppolIdentifier\": {\n      \"scheme\": \"0208\",\n      \"identifier\": \"0552912569\"\n    },\n    \"supportedDocuments\": [\n      \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n      \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n      \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n      \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n    ],\n    \"peppolRegistration\": true\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"legal-entities",
																		":legalEntityId",
																		"peppol-registrations"
																	],
																	"variable": [
																		{
																			"key": "legalEntityId",
																			"value": "7",
																			"description": "(Required) The id of the legal entity you want to register in the Peppol network"
																		}
																	]
																},
																"description": "Register a legal entity as a participant in the Peppol network. You can have a look in the section <a href=\"#section/Getting-started/Register-your-legal-entity-as-a-participant-in-the-Peppol-network\">Register your legal entity as a participant in the Peppol network</a> for more details."
															},
															"response": [
																{
																	"name": "Peppol registration created successfully.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"peppolRegistrationDetails\": {\n    \"peppolIdentifier\": {\n      \"scheme\": \"0208\",\n      \"identifier\": \"0552912569\"\n    },\n    \"supportedDocuments\": [\n      \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n      \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n      \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n      \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n    ],\n    \"peppolRegistration\": true\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"legal-entities",
																				":legalEntityId",
																				"peppol-registrations"
																			],
																			"variable": [
																				{
																					"key": "legalEntityId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"peppolRegistrationId\": 6384\n}"
																},
																{
																	"name": "Error creating Peppol registration",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"peppolRegistrationDetails\": {\n    \"peppolIdentifier\": {\n      \"scheme\": \"0208\",\n      \"identifier\": \"0552912569\"\n    },\n    \"supportedDocuments\": [\n      \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n      \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n      \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n      \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n    ],\n    \"peppolRegistration\": true\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"legal-entities",
																				":legalEntityId",
																				"peppol-registrations"
																			],
																			"variable": [
																				{
																					"key": "legalEntityId"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error registering legal entity in the Peppol network\"\n}"
																},
																{
																	"name": "Authentication failure",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"peppolRegistrationDetails\": {\n    \"peppolIdentifier\": {\n      \"scheme\": \"0208\",\n      \"identifier\": \"0552912569\"\n    },\n    \"supportedDocuments\": [\n      \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n      \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n      \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n      \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n    ],\n    \"peppolRegistration\": true\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId/peppol-registrations",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"legal-entities",
																				":legalEntityId",
																				"peppol-registrations"
																			],
																			"variable": [
																				{
																					"key": "legalEntityId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Update a legal entity",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"legalEntityDetails\": {\n    \"publishInPeppolDirectory\": true,\n    \"name\": \"Ademico Software\",\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"204 My street, My City, My Country\",\n    \"registrationDate\": \"2019-08-24T14:15:22Z\",\n    \"websiteURL\": \"https://ademico-software.com\",\n    \"contacts\": [\n      {\n        \"contactType\": \"public\",\n        \"name\": \"Your company name\",\n        \"phoneNumber\": \"+32 123456\",\n        \"email\": \"info@example.com\"\n      }\n    ],\n    \"additionalInformation\": \"Our company is specialized in ...\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"scheme\": \"0208\",\n        \"identifier\": \"0552912569\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"legal-entities",
																":legalEntityId"
															],
															"variable": [
																{
																	"key": "legalEntityId",
																	"value": "2588",
																	"description": "(Required) "
																}
															]
														},
														"description": "Update a legal entity and publish it(optionally) in the <a href=\"https://directory.peppol.eu/public\" target=\"_blank\">Peppol Directory</a>. For the TEST environment the legal entity is published in <a href=\"https://test-directory.peppol.eu/public\" target=\"_blank\">TEST Peppol Directory</a> </br></br>Set the flag `publishInPeppolDirectory` to false if you don't want to publish the legal entity details in the Peppol Directory. </br>"
													},
													"response": [
														{
															"name": "Legal entity updated successfully.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"legalEntityDetails\": {\n    \"publishInPeppolDirectory\": true,\n    \"name\": \"Ademico Software\",\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"204 My street, My City, My Country\",\n    \"registrationDate\": \"2019-08-24T14:15:22Z\",\n    \"websiteURL\": \"https://ademico-software.com\",\n    \"contacts\": [\n      {\n        \"contactType\": \"public\",\n        \"name\": \"Your company name\",\n        \"phoneNumber\": \"+32 123456\",\n        \"email\": \"info@example.com\"\n      }\n    ],\n    \"additionalInformation\": \"Our company is specialized in ...\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"scheme\": \"0208\",\n        \"identifier\": \"0552912569\"\n      }\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"legal-entities",
																		":legalEntityId"
																	],
																	"variable": [
																		{
																			"key": "legalEntityId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Error updating legal entity",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"legalEntityDetails\": {\n    \"publishInPeppolDirectory\": true,\n    \"name\": \"Ademico Software\",\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"204 My street, My City, My Country\",\n    \"registrationDate\": \"2019-08-24T14:15:22Z\",\n    \"websiteURL\": \"https://ademico-software.com\",\n    \"contacts\": [\n      {\n        \"contactType\": \"public\",\n        \"name\": \"Your company name\",\n        \"phoneNumber\": \"+32 123456\",\n        \"email\": \"info@example.com\"\n      }\n    ],\n    \"additionalInformation\": \"Our company is specialized in ...\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"scheme\": \"0208\",\n        \"identifier\": \"0552912569\"\n      }\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"legal-entities",
																		":legalEntityId"
																	],
																	"variable": [
																		{
																			"key": "legalEntityId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error updating legal entity\"\n}"
														},
														{
															"name": "Authentication failure",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"legalEntityDetails\": {\n    \"publishInPeppolDirectory\": true,\n    \"name\": \"Ademico Software\",\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"204 My street, My City, My Country\",\n    \"registrationDate\": \"2019-08-24T14:15:22Z\",\n    \"websiteURL\": \"https://ademico-software.com\",\n    \"contacts\": [\n      {\n        \"contactType\": \"public\",\n        \"name\": \"Your company name\",\n        \"phoneNumber\": \"+32 123456\",\n        \"email\": \"info@example.com\"\n      }\n    ],\n    \"additionalInformation\": \"Our company is specialized in ...\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"scheme\": \"0208\",\n        \"identifier\": \"0552912569\"\n      }\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"legal-entities",
																		":legalEntityId"
																	],
																	"variable": [
																		{
																			"key": "legalEntityId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
														}
													]
												},
												{
													"name": "Delete a legal entity",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"legal-entities",
																":legalEntityId"
															],
															"variable": [
																{
																	"key": "legalEntityId",
																	"value": "7",
																	"description": "(Required) The identifier of the legal entity you want to delete"
																}
															]
														},
														"description": "Delete a legal entity from the Peppol network(SML/SMP) and from the <a href=\"https://directory.peppol.eu/public\" target=\"_blank\">Peppol Directory</a>. For the TEST environment the legal entity is deleted from the <a href=\"https://test-directory.peppol.eu/public\" target=\"_blank\">TEST Peppol Directory</a>. </br></br>The legal entity cannot be deleted if it has already sent or received documents in the Peppol network."
													},
													"response": [
														{
															"name": "Legal entity deleted successfully",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"legal-entities",
																		":legalEntityId"
																	],
																	"variable": [
																		{
																			"key": "legalEntityId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Error deleting legal entity",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"legal-entities",
																		":legalEntityId"
																	],
																	"variable": [
																		{
																			"key": "legalEntityId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Could not delete legal entity: legal entity already sent or receive documents in the Peppol network\"\n}"
														},
														{
															"name": "Authentication failure",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/legal-entities/:legalEntityId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"legal-entities",
																		":legalEntityId"
																	],
																	"variable": [
																		{
																			"key": "legalEntityId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get the list of the legal entities",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/peppol/v1/legal-entities?legalEntityId=15&name=Company name&country=BE&peppolRegistrationScheme=0208&peppolRegistrationIdentifier=0552912569&peppolSupportedDocument=PEPPOL_BIS_BILLING_UBL_INVOICE_V3&page=0&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"peppol",
														"v1",
														"legal-entities"
													],
													"query": [
														{
															"key": "legalEntityId",
															"value": "15",
															"description": "The legal entity identifier"
														},
														{
															"key": "name",
															"value": "Company name",
															"description": "The legal entity name"
														},
														{
															"key": "country",
															"value": "BE",
															"description": "The legal entity country"
														},
														{
															"key": "peppolRegistrationScheme",
															"value": "0208",
															"description": "The Peppol identifier scheme of the legal entity"
														},
														{
															"key": "peppolRegistrationIdentifier",
															"value": "0552912569",
															"description": "The Peppol identifier of the legal entity"
														},
														{
															"key": "peppolSupportedDocument",
															"value": "PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
															"description": "The document that can be received by the legal entity in the Peppol network"
														},
														{
															"key": "page",
															"value": "0",
															"description": "The starting page number from which we want to retrieve results. The first page is 0."
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "How many results we retrieve per page"
														}
													]
												},
												"description": "Get the list of the legal entities including the Peppol registrations(Peppol identifiers and supported documents)"
											},
											"response": [
												{
													"name": "Legal entities retrieved successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/legal-entities?legalEntityId=15&name=Company name&country=BE&peppolRegistrationScheme=0208&peppolRegistrationIdentifier=0552912569&peppolSupportedDocument=PEPPOL_BIS_BILLING_UBL_INVOICE_V3&page=0&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"legal-entities"
															],
															"query": [
																{
																	"key": "legalEntityId",
																	"value": "15",
																	"description": "The legal entity identifier"
																},
																{
																	"key": "name",
																	"value": "Company name",
																	"description": "The legal entity name"
																},
																{
																	"key": "country",
																	"value": "BE",
																	"description": "The legal entity country"
																},
																{
																	"key": "peppolRegistrationScheme",
																	"value": "0208",
																	"description": "The Peppol identifier scheme of the legal entity"
																},
																{
																	"key": "peppolRegistrationIdentifier",
																	"value": "0552912569",
																	"description": "The Peppol identifier of the legal entity"
																},
																{
																	"key": "peppolSupportedDocument",
																	"value": "PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
																	"description": "The document that can be received by the legal entity in the Peppol network"
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "The starting page number from which we want to retrieve results. The first page is 0."
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "How many results we retrieve per page"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"pagination\": {\n    \"count\": 2,\n    \"page\": 0,\n    \"pageSize\": 10\n  },\n  \"legalEntities\": [\n    {\n      \"legalEntityId\": 1,\n      \"legalEntityDetails\": {\n        \"publishInPeppolDirectory\": true,\n        \"name\": \"Ademico Software\",\n        \"registrationDate\": \"2019-08-24T14:15:22Z\",\n        \"countryCode\": \"BE\",\n        \"geographicalInformation\": \"204 My street, My City, My Country\",\n        \"websiteURL\": \"https://ademico-software.com\",\n        \"contacts\": [\n          {\n            \"contactType\": \"public\",\n            \"name\": \"Your company name\",\n            \"phoneNumber\": \"+32 123456\",\n            \"email\": \"info@example.com\"\n          }\n        ],\n        \"additionalInformation\": \"Our company is specialized in Peppol services\",\n        \"peppolAdditionalIdentifiers\": [\n          {\n            \"scheme\": \"0208\",\n            \"identifier\": \"0552912569\"\n          },\n          {\n            \"scheme\": \"9925\",\n            \"identifier\": \"BE0552912569\"\n          }\n        ]\n      },\n      \"peppolRegistrations\": [\n        {\n          \"peppolIdentifier\": {\n            \"scheme\": \"0208\",\n            \"identifier\": \"0552912569\"\n          },\n          \"supportedDocuments\": [\n            \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n            \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n            \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n            \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n          ],\n          \"publishInSMP\": true\n        },\n        {\n          \"peppolIdentifier\": {\n            \"scheme\": \"9925\",\n            \"identifier\": \"BE0552912569\"\n          },\n          \"supportedDocuments\": [\n            \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n            \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n            \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n            \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n          ],\n          \"publishInSMP\": true\n        }\n      ]\n    },\n    {\n      \"legalEntityId\": 2,\n      \"legalEntityDetails\": {\n        \"publishInPeppolDirectory\": true,\n        \"name\": \"Your company\",\n        \"registrationDate\": \"2023-08-24T14:15:22Z\",\n        \"countryCode\": \"BE\",\n        \"geographicalInformation\": \"204 My street, My City, My Country\",\n        \"websiteURL\": \"https://example.com\",\n        \"contacts\": [\n          {\n            \"contactType\": \"public\",\n            \"name\": \"Your company name\",\n            \"phoneNumber\": \"+32 123456\",\n            \"email\": \"info@example.com\"\n          }\n        ],\n        \"additionalInformation\": \"Our company is specialized in ...\"\n      },\n      \"peppolRegistrations\": [\n        {\n          \"peppolIdentifier\": {\n            \"scheme\": \"0208\",\n            \"identifier\": \"123456789\"\n          },\n          \"supportedDocuments\": [\n            \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n            \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n            \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n            \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n          ],\n          \"publishInSMP\": true\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Error retrieving legal entities",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/legal-entities?legalEntityId=15&name=Company name&country=BE&peppolRegistrationScheme=0208&peppolRegistrationIdentifier=0552912569&peppolSupportedDocument=PEPPOL_BIS_BILLING_UBL_INVOICE_V3&page=0&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"legal-entities"
															],
															"query": [
																{
																	"key": "legalEntityId",
																	"value": "15",
																	"description": "The legal entity identifier"
																},
																{
																	"key": "name",
																	"value": "Company name",
																	"description": "The legal entity name"
																},
																{
																	"key": "country",
																	"value": "BE",
																	"description": "The legal entity country"
																},
																{
																	"key": "peppolRegistrationScheme",
																	"value": "0208",
																	"description": "The Peppol identifier scheme of the legal entity"
																},
																{
																	"key": "peppolRegistrationIdentifier",
																	"value": "0552912569",
																	"description": "The Peppol identifier of the legal entity"
																},
																{
																	"key": "peppolSupportedDocument",
																	"value": "PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
																	"description": "The document that can be received by the legal entity in the Peppol network"
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "The starting page number from which we want to retrieve results. The first page is 0."
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "How many results we retrieve per page"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error getting legal entities\"\n}"
												},
												{
													"name": "Authentication failure",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/legal-entities?legalEntityId=15&name=Company name&country=BE&peppolRegistrationScheme=0208&peppolRegistrationIdentifier=0552912569&peppolSupportedDocument=PEPPOL_BIS_BILLING_UBL_INVOICE_V3&page=0&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"legal-entities"
															],
															"query": [
																{
																	"key": "legalEntityId",
																	"value": "15",
																	"description": "The legal entity identifier"
																},
																{
																	"key": "name",
																	"value": "Company name",
																	"description": "The legal entity name"
																},
																{
																	"key": "country",
																	"value": "BE",
																	"description": "The legal entity country"
																},
																{
																	"key": "peppolRegistrationScheme",
																	"value": "0208",
																	"description": "The Peppol identifier scheme of the legal entity"
																},
																{
																	"key": "peppolRegistrationIdentifier",
																	"value": "0552912569",
																	"description": "The Peppol identifier of the legal entity"
																},
																{
																	"key": "peppolSupportedDocument",
																	"value": "PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
																	"description": "The document that can be received by the legal entity in the Peppol network"
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "The starting page number from which we want to retrieve results. The first page is 0."
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "How many results we retrieve per page"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
												}
											]
										},
										{
											"name": "Create a legal entity and register it in the Peppol network",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"legalEntityDetails\": {\n    \"additionalInformation\": \"Our company is specialized in ...\",\n    \"contacts\": [\n      {\n        \"contactType\": \"public\",\n        \"email\": \"info@example.com\",\n        \"name\": \"Your company name\",\n        \"phoneNumber\": \"+32 123456\"\n      }\n    ],\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"204 My street, My City, My Country\",\n    \"name\": \"Ademico Software\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"identifier\": \"0552912569\",\n        \"scheme\": \"0208\"\n      }\n    ],\n    \"publishInPeppolDirectory\": true,\n    \"registrationDate\": \"2019-08-24T14:15:22Z\",\n    \"websiteURL\": \"https://ademico-software.com\"\n  },\n  \"peppolRegistrations\": [\n    {\n      \"peppolIdentifier\": {\n        \"identifier\": \"0552912569\",\n        \"scheme\": \"0208\"\n      },\n      \"peppolRegistration\": true,\n      \"supportedDocuments\": [\n        \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n        \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n        \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n        \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/peppol/v1/legal-entities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"peppol",
														"v1",
														"legal-entities"
													]
												},
												"description": "Create a legal entity and register it in the Peppol network. In the section <a href=\"#section/Getting-started/Register-your-legal-entity-as-a-participant-in-the-Peppol-network\">Register your legal entity as a participant in the Peppol network</a> we explain in detail how to create your legal entity."
											},
											"response": [
												{
													"name": "Create legal entity and register it in the Peppol network example",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"legalEntityDetails\": {\n    \"additionalInformation\": \"Our company is specialized in ...\",\n    \"contacts\": [\n      {\n        \"contactType\": \"public\",\n        \"email\": \"info@example.com\",\n        \"name\": \"Your company name\",\n        \"phoneNumber\": \"+32 123456\"\n      }\n    ],\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"204 My street, My City, My Country\",\n    \"name\": \"Ademico Software\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"identifier\": \"0552912569\",\n        \"scheme\": \"0208\"\n      }\n    ],\n    \"publishInPeppolDirectory\": true,\n    \"registrationDate\": \"2019-08-24T14:15:22Z\",\n    \"websiteURL\": \"https://ademico-software.com\"\n  },\n  \"peppolRegistrations\": [\n    {\n      \"peppolIdentifier\": {\n        \"identifier\": \"0552912569\",\n        \"scheme\": \"0208\"\n      },\n      \"peppolRegistration\": true,\n      \"supportedDocuments\": [\n        \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n        \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n        \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n        \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/legal-entities",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"legal-entities"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"legalEntityId\": 0\n}"
												},
												{
													"name": "Create legal entity without registering it in the Peppol network example",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"legalEntityDetails\": {\n    \"publishInPeppolDirectory\": true,\n    \"name\": \"Ademico Software\",\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"204 My street, My City, My Country\",\n    \"registrationDate\": \"2019-08-24T14:15:22Z\",\n    \"websiteURL\": \"https://ademico-software.com\",\n    \"contacts\": [\n      {\n        \"contactType\": \"public\",\n        \"name\": \"Your company name\",\n        \"phoneNumber\": \"+32 123456\",\n        \"email\": \"info@example.com\"\n      }\n    ],\n    \"additionalInformation\": \"Our company is specialized in ...\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"scheme\": \"0208\",\n        \"identifier\": \"0552912569\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/legal-entities",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"legal-entities"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"legalEntityId\": 0\n}"
												},
												{
													"name": "Create legal entity and register it in the Peppol network example",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"legalEntityDetails\": {\n    \"additionalInformation\": \"Our company is specialized in ...\",\n    \"contacts\": [\n      {\n        \"contactType\": \"public\",\n        \"email\": \"info@example.com\",\n        \"name\": \"Your company name\",\n        \"phoneNumber\": \"+32 123456\"\n      }\n    ],\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"204 My street, My City, My Country\",\n    \"name\": \"Ademico Software\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"identifier\": \"0552912569\",\n        \"scheme\": \"0208\"\n      }\n    ],\n    \"publishInPeppolDirectory\": true,\n    \"registrationDate\": \"2019-08-24T14:15:22Z\",\n    \"websiteURL\": \"https://ademico-software.com\"\n  },\n  \"peppolRegistrations\": [\n    {\n      \"peppolIdentifier\": {\n        \"identifier\": \"0552912569\",\n        \"scheme\": \"0208\"\n      },\n      \"peppolRegistration\": true,\n      \"supportedDocuments\": [\n        \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n        \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n        \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n        \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/legal-entities",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"legal-entities"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error creating legal entity\"\n}"
												},
												{
													"name": "Create legal entity without registering it in the Peppol network example",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"legalEntityDetails\": {\n    \"publishInPeppolDirectory\": true,\n    \"name\": \"Ademico Software\",\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"204 My street, My City, My Country\",\n    \"registrationDate\": \"2019-08-24T14:15:22Z\",\n    \"websiteURL\": \"https://ademico-software.com\",\n    \"contacts\": [\n      {\n        \"contactType\": \"public\",\n        \"name\": \"Your company name\",\n        \"phoneNumber\": \"+32 123456\",\n        \"email\": \"info@example.com\"\n      }\n    ],\n    \"additionalInformation\": \"Our company is specialized in ...\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"scheme\": \"0208\",\n        \"identifier\": \"0552912569\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/legal-entities",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"legal-entities"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"LEGAL_ENTITY_ERROR\",\n  \"message\": \"Error creating legal entity\"\n}"
												},
												{
													"name": "Create legal entity and register it in the Peppol network example",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"legalEntityDetails\": {\n    \"additionalInformation\": \"Our company is specialized in ...\",\n    \"contacts\": [\n      {\n        \"contactType\": \"public\",\n        \"email\": \"info@example.com\",\n        \"name\": \"Your company name\",\n        \"phoneNumber\": \"+32 123456\"\n      }\n    ],\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"204 My street, My City, My Country\",\n    \"name\": \"Ademico Software\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"identifier\": \"0552912569\",\n        \"scheme\": \"0208\"\n      }\n    ],\n    \"publishInPeppolDirectory\": true,\n    \"registrationDate\": \"2019-08-24T14:15:22Z\",\n    \"websiteURL\": \"https://ademico-software.com\"\n  },\n  \"peppolRegistrations\": [\n    {\n      \"peppolIdentifier\": {\n        \"identifier\": \"0552912569\",\n        \"scheme\": \"0208\"\n      },\n      \"peppolRegistration\": true,\n      \"supportedDocuments\": [\n        \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n        \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n        \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n        \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/legal-entities",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"legal-entities"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
												},
												{
													"name": "Create legal entity without registering it in the Peppol network example",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"legalEntityDetails\": {\n    \"publishInPeppolDirectory\": true,\n    \"name\": \"Ademico Software\",\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"204 My street, My City, My Country\",\n    \"registrationDate\": \"2019-08-24T14:15:22Z\",\n    \"websiteURL\": \"https://ademico-software.com\",\n    \"contacts\": [\n      {\n        \"contactType\": \"public\",\n        \"name\": \"Your company name\",\n        \"phoneNumber\": \"+32 123456\",\n        \"email\": \"info@example.com\"\n      }\n    ],\n    \"additionalInformation\": \"Our company is specialized in ...\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"scheme\": \"0208\",\n        \"identifier\": \"0552912569\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/legal-entities",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"legal-entities"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "participants",
									"item": [
										{
											"name": "{participantId}",
											"item": [
												{
													"name": "Delete a Peppol participant. Deprecated: use the Legal Entity API",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/participants/:participantId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"participants",
																":participantId"
															],
															"variable": [
																{
																	"key": "participantId",
																	"value": "7",
																	"description": "(Required) The database identifier of the participant we want to delete"
																}
															]
														},
														"description": "Delete a Peppol participant from the Peppol network(SML/SMP) and from the Peppol directory"
													},
													"response": [
														{
															"name": "Participant deleted successfully",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/participants/:participantId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"participants",
																		":participantId"
																	],
																	"variable": [
																		{
																			"key": "participantId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Error deleting participant",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/participants/:participantId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"participants",
																		":participantId"
																	],
																	"variable": [
																		{
																			"key": "participantId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"PARTICIPANT_ERROR\",\n  \"message\": \"Error deleting participant\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get the list of the Peppol participants. Deprecated: use the Legal Entity API",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/peppol/v1/participants?participantScheme=0208&participantIdentifier=0552912569&documentIdentifierScheme=PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"peppol",
														"v1",
														"participants"
													],
													"query": [
														{
															"key": "participantScheme",
															"value": "0208",
															"description": "The participant scheme"
														},
														{
															"key": "participantIdentifier",
															"value": "0552912569",
															"description": "The participant identifier"
														},
														{
															"key": "documentIdentifierScheme",
															"value": "PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
															"description": "The participant document scheme"
														}
													]
												},
												"description": "Get the list of the Peppol participants"
											},
											"response": [
												{
													"name": "Participants retrieved successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/participants?participantScheme=0208&participantIdentifier=0552912569&documentIdentifierScheme=PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"participants"
															],
															"query": [
																{
																	"key": "participantScheme",
																	"value": "0208",
																	"description": "The participant scheme"
																},
																{
																	"key": "participantIdentifier",
																	"value": "0552912569",
																	"description": "The participant identifier"
																},
																{
																	"key": "documentIdentifierScheme",
																	"value": "PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
																	"description": "The participant document scheme"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"peppolIdentifier\": {\n      \"scheme\": \"0208\",\n      \"identifier\": \"123456\"\n    },\n    \"supportedDocuments\": [\n      \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n      \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\"\n    ],\n    \"publishInSMP\": true,\n    \"peppolDirectoryDetails\": {\n      \"publishInPeppolDirectory\": true,\n      \"name\": \"Your company name 1\",\n      \"registrationDate\": \"2022-09-09T13:09:59.524\",\n      \"countryCode\": \"BE\",\n      \"geographicalInformation\": \"street number, street name, etc\",\n      \"websiteURL\": \"https://your-website.com\",\n      \"contacts\": [\n        {\n          \"contactType\": \"AP\",\n          \"name\": \"John Doe\",\n          \"phoneNumber\": \"+32 1234567\",\n          \"email\": \"info@your-company.com\"\n        }\n      ],\n      \"additionalInformation\": \"additional info\",\n      \"peppolAdditionalIdentifiers\": [\n        {\n          \"scheme\": \"CBE\",\n          \"identifier\": \"123456\"\n        }\n      ]\n    },\n    \"participantId\": 1\n  },\n  {\n    \"peppolIdentifier\": {\n      \"scheme\": \"0208\",\n      \"identifier\": \"45632121\"\n    },\n    \"supportedDocuments\": [\n      \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n      \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\"\n    ],\n    \"peppolDirectoryDetails\": {\n      \"publishInPeppolDirectory\": true,\n      \"name\": \"Your company name 2\",\n      \"registrationDate\": \"2022-09-09T13:09:59.524\",\n      \"countryCode\": \"BE\",\n      \"geographicalInformation\": \"street number, street name, etc\",\n      \"websiteURL\": \"https://your-website.com\",\n      \"contacts\": [\n        {\n          \"contactType\": \"AP\",\n          \"name\": \"John Doe\",\n          \"phoneNumber\": \"+32 1234567\",\n          \"email\": \"info@your-company.com\"\n        }\n      ],\n      \"additionalInformation\": \"additional info\",\n      \"peppolAdditionalIdentifiers\": [\n        {\n          \"scheme\": \"CBE\",\n          \"identifier\": \"45632121\"\n        }\n      ]\n    },\n    \"participantId\": 2\n  }\n]"
												},
												{
													"name": "Error retrieving participants",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/participants?participantScheme=0208&participantIdentifier=0552912569&documentIdentifierScheme=PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"participants"
															],
															"query": [
																{
																	"key": "participantScheme",
																	"value": "0208",
																	"description": "The participant scheme"
																},
																{
																	"key": "participantIdentifier",
																	"value": "0552912569",
																	"description": "The participant identifier"
																},
																{
																	"key": "documentIdentifierScheme",
																	"value": "PEPPOL_BIS_BILLING_UBL_INVOICE_V3",
																	"description": "The participant document scheme"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Details of the occurred error\"\n}"
												}
											]
										},
										{
											"name": "Create a Peppol participant. Deprecated: use the Legal Entity API",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"peppolIdentifier\": {\n    \"scheme\": \"BE:EN\",\n    \"identifier\": \"123456\"\n  },\n  \"supportedDocuments\": [\n    \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n    \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n    \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n    \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n  ],\n  \"publishInSMP\": true,\n  \"peppolDirectoryDetails\": {\n    \"publishInPeppolDirectory\": true,\n    \"name\": \"Your company name\",\n    \"registrationDate\": \"2022-09-09T13:09:59.524\",\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"street number, street name, etc\",\n    \"websiteURL\": \"https://your-website.com\",\n    \"contacts\": [\n      {\n        \"contactType\": \"AP\",\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"+32 1234567\",\n        \"email\": \"info@your-company.com\"\n      }\n    ],\n    \"additionalInformation\": \"additional info\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"scheme\": \"BE:EN\",\n        \"identifier\": \"123456\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/peppol/v1/participants",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"peppol",
														"v1",
														"participants"
													]
												},
												"description": "Create a Peppol participant and register it in the Peppol network. When using our REST API, it is mandatory to create a participant before sending or receiving a document in the Peppol network. To create a participant you would need to fill in the following data:<ul><li>The participant scheme and identifier</li><p>The participant scheme list can be found <a href=\"https://docs.peppol.eu/edelivery/codelists/\" target=\"_blank\">here</a> under section 'Participant Identifier Schemes'.The participant identifier must uniquely identify the participant eg VAT number</p><li>The list of supported documents the participant can receive.</li><li>The participant details that are published in the <a href=\"https://directory.peppol.eu/public\" target=\"_blank\">Peppol Directory</a> </li></ul>By default, your organization details are published in the Peppol network(SML/SMP) and in the Peppol Directory.</br> Set the flag `publishInSMP` to false if you don't want to publish the participant in the Peppol network(SML/SMP). You can set this flag to false when the participant is already registered in the Peppol network(SML/SMP).</br>Set the flag `publishInPeppolDirectory` to false if you don't want to publish the participant details in the Peppol Directory."
											},
											"response": [
												{
													"name": "Participant created successfully. You get the database participant identifier as a response.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"peppolIdentifier\": {\n    \"scheme\": \"BE:EN\",\n    \"identifier\": \"123456\"\n  },\n  \"supportedDocuments\": [\n    \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n    \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n    \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n    \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n  ],\n  \"publishInSMP\": true,\n  \"peppolDirectoryDetails\": {\n    \"publishInPeppolDirectory\": true,\n    \"name\": \"Your company name\",\n    \"registrationDate\": \"2022-09-09T13:09:59.524\",\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"street number, street name, etc\",\n    \"websiteURL\": \"https://your-website.com\",\n    \"contacts\": [\n      {\n        \"contactType\": \"AP\",\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"+32 1234567\",\n        \"email\": \"info@your-company.com\"\n      }\n    ],\n    \"additionalInformation\": \"additional info\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"scheme\": \"BE:EN\",\n        \"identifier\": \"123456\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/participants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"participants"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "7"
												},
												{
													"name": "Error creating participant",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"peppolIdentifier\": {\n    \"scheme\": \"BE:EN\",\n    \"identifier\": \"123456\"\n  },\n  \"supportedDocuments\": [\n    \"PEPPOL_BIS_BILLING_UBL_INVOICE_V3\",\n    \"PEPPOL_BIS_BILLING_UBL_CREDIT_NOTE_V3\",\n    \"PEPPOL_MESSAGE_LEVEL_RESPONSE_TRANSACTION_3_0\",\n    \"PEPPOL_INVOICE_RESPONSE_TRANSACTION_3_0\"\n  ],\n  \"publishInSMP\": true,\n  \"peppolDirectoryDetails\": {\n    \"publishInPeppolDirectory\": true,\n    \"name\": \"Your company name\",\n    \"registrationDate\": \"2022-09-09T13:09:59.524\",\n    \"countryCode\": \"BE\",\n    \"geographicalInformation\": \"street number, street name, etc\",\n    \"websiteURL\": \"https://your-website.com\",\n    \"contacts\": [\n      {\n        \"contactType\": \"AP\",\n        \"name\": \"John Doe\",\n        \"phoneNumber\": \"+32 1234567\",\n        \"email\": \"info@your-company.com\"\n      }\n    ],\n    \"additionalInformation\": \"additional info\",\n    \"peppolAdditionalIdentifiers\": [\n      {\n        \"scheme\": \"BE:EN\",\n        \"identifier\": \"123456\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/participants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"participants"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"PARTICIPANT_ERROR\",\n  \"message\": \"Error creating participant\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "orders",
									"item": [
										{
											"name": "ubl-submissions",
											"item": [
												{
													"name": "Send an UBL Order to the Seller",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"description": "(Required) The Order in UBL XML format",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/orders/ubl-submissions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"orders",
																"ubl-submissions"
															]
														},
														"description": "The Order is scheduled in the queue to be sent to the Seller. The UBL is validated before is being sent.You get notified either via pull or push mechanism when the Order has be received by the Seller. See below for possible validation errors you can get."
													},
													"response": [
														{
															"name": "The Order has been scheduled in the queue to be sent to the Seller.You get notified either via pull or push mechanism when the Order has be received by the Seller. Please check for more details in the notification sections.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "file",
																			"description": "(Required) The Order in UBL XML format",
																			"type": "file",
																			"src": []
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/orders/ubl-submissions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"orders",
																		"ubl-submissions"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"transmissionId\": \"803828d52d4911ed85f512ef9c5638d0@ademico-software.com\",\n  \"documentId\": \"pbe000512-1\",\n  \"documentTypeEnum\": \"ORDER\",\n  \"sender\": \"0208:0552912569\",\n  \"receiver\": \"0208:0465105397\"\n}"
														},
														{
															"name": "Error sending the UBL Order to the Seller. In this case the UBL Order is not sent to the Seller. Examples of cases when you get an error: <ul><li>The submitted file does not contain an UBL Order</li><li>The XML validation, XSD validation or Schematron val",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "file",
																			"description": "(Required) The Order in UBL XML format",
																			"type": "file",
																			"src": []
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/orders/ubl-submissions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"orders",
																		"ubl-submissions"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": {\n    \"code\": \"SCHEMATRON_VALIDATION_ERROR\",\n    \"message\": \"The Schematron validation failed has failed for document [Order-invalid.xml]\"\n  },\n  \"validationReport\": {\n    \"globalStatus\": \"ERROR\",\n    \"validatedXmlName\": \"Order-invalid.xml\",\n    \"xmlValidationReport\": {\n      \"validatedWith\": \"Order-invalid.xml\",\n      \"reportStatus\": \"SUCCESS\",\n      \"warningsCount\": 0,\n      \"errorsCount\": 0,\n      \"xmlValidationMessages\": [],\n      \"validationType\": \"XML_SYNTAX\"\n    },\n    \"xsdValidationReport\": {\n      \"validatedWith\": \"UBL-Order-2.1.xsd\",\n      \"reportStatus\": \"SUCCESS\",\n      \"warningsCount\": 0,\n      \"errorsCount\": 0,\n      \"xsdValidationMessages\": [],\n      \"validationType\": \"XSD_SCHEMA\"\n    },\n    \"schematronValidationReport\": [\n      {\n        \"validatedWith\": \"PEPPOLBIS-T01\",\n        \"reportStatus\": \"ERROR\",\n        \"warningsCount\": 0,\n        \"errorsCount\": 1,\n        \"schematronValidationMessages\": [\n          {\n            \"errorLevel\": \"ERROR\",\n            \"description\": \"Expected total amount with TAX = Expected total amount without TAX + Order total TAX amount.\",\n            \"lineNumber\": 263,\n            \"columnNumber\": 32,\n            \"schematronTest\": \"if($taxinclusiveAmount and /ubl:Order/cac:TaxTotal) then ($taxinclusiveAmount = $taxexclusiveAmount + $TAXamount) else 1\",\n            \"errorId\": \"PEPPOL-T01-R017\",\n            \"xpath\": \"/*:Order[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Order-2'][1]/*:AnticipatedMonetaryTotal[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]\",\n            \"xpathWithoutNamespaces\": \"/Order[1]/AnticipatedMonetaryTotal[1]\"\n          }\n        ],\n        \"validationType\": \"SCHEMATRON\"\n      }\n    ],\n    \"warningsCount\": 0,\n    \"errorsCount\": 1,\n    \"xmlContent\": \"\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "{transmissionId}",
											"item": [
												{
													"name": "ubl",
													"item": [
														{
															"name": "Get an Order in UBL format",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/xml"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/orders/:transmissionId/ubl",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"orders",
																		":transmissionId",
																		"ubl"
																	],
																	"variable": [
																		{
																			"key": "transmissionId",
																			"value": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Get the content of a sent or received Order in UBL format"
															},
															"response": [
																{
																	"name": "Order UBL XML retrieved successfully",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/xml"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/orders/:transmissionId/ubl",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"orders",
																				":transmissionId",
																				"ubl"
																			],
																			"variable": [
																				{
																					"key": "transmissionId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "xml",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/xml"
																		}
																	],
																	"cookie": [],
																	"body": "<element><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<Order xmlns=\"urn:oasis:names:specification:ubl:schema:xsd:Order-2\"\n\t   xmlns:cac=\"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\"\n\t   xmlns:cbc=\"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\">\n\t<cbc:CustomizationID>urn:fdc:peppol.eu:poacc:trns:order:3</cbc:CustomizationID>\n\t<cbc:ProfileID>urn:fdc:peppol.eu:poacc:bis:order_only:3</cbc:ProfileID>\n\t<cbc:ID>pbe000512-8</cbc:ID>\n\t<cbc:SalesOrderID>112233</cbc:SalesOrderID>\n\t<cbc:IssueDate>2018-09-01</cbc:IssueDate>\n\t<cbc:IssueTime>12:30:00</cbc:IssueTime>\n\t<cbc:OrderTypeCode>220</cbc:OrderTypeCode>\n\t<cbc:Note>Information text for the whole order</cbc:Note>\n\t<cbc:DocumentCurrencyCode>NOK</cbc:DocumentCurrencyCode>\n\t<cbc:CustomerReference>123456</cbc:CustomerReference>\n\t<cbc:AccountingCost>Project123</cbc:AccountingCost>\n\t<cac:ValidityPeriod>\n\t\t<cbc:EndDate>2013-01-31</cbc:EndDate>\n\t</cac:ValidityPeriod>\n\t<cac:QuotationDocumentReference>\n\t\t<cbc:ID>QuoteID123</cbc:ID>\n\t</cac:QuotationDocumentReference>\n\t<cac:OrderDocumentReference>\n\t\t<cbc:ID>my reference</cbc:ID>\n\t</cac:OrderDocumentReference>\n\t<cac:OriginatorDocumentReference>\n\t\t<cbc:ID>MAFO</cbc:ID>\n\t</cac:OriginatorDocumentReference>\n\t<cac:AdditionalDocumentReference>\n\t\t<cbc:ID>Doc1</cbc:ID>\n\t\t<cbc:DocumentType>Timesheet</cbc:DocumentType>\n\t\t<cac:Attachment>\n\t\t\t<cac:ExternalReference>\n\t\t\t\t<cbc:URI>http://www.example.com/sheet001.html</cbc:URI>\n\t\t\t</cac:ExternalReference>\n\t\t</cac:Attachment>\n\t</cac:AdditionalDocumentReference>\n\t<cac:AdditionalDocumentReference>\n\t\t<cbc:ID>Doc2</cbc:ID>\n\t\t<cbc:DocumentType>Order</cbc:DocumentType>\n\t\t<cac:Attachment>\n\t\t\t<cbc:EmbeddedDocumentBinaryObject mimeCode=\"application/pdf\" filename=\"order.pdf\">UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi\n\t\t\t</cbc:EmbeddedDocumentBinaryObject>\n\t\t</cac:Attachment>\n\t</cac:AdditionalDocumentReference>\n\t<cac:Contract>\n\t\t<cbc:ID>34322</cbc:ID>\n\t</cac:Contract>\n\t<cac:BuyerCustomerParty>\n\t\t<cac:Party>\n\t\t\t<cbc:EndpointID schemeID=\"0208\">0552912569</cbc:EndpointID>\n\t\t\t<cac:PartyIdentification>\n\t\t\t\t<cbc:ID>0552912569</cbc:ID>\n\t\t\t</cac:PartyIdentification>\n\t\t\t<cac:PartyName>\n\t\t\t\t<cbc:Name>Ademico Software</cbc:Name>\n\t\t\t</cac:PartyName>\n\t\t\t<cac:PostalAddress>\n\t\t\t\t<cbc:StreetName>Heidebergstraat 204</cbc:StreetName>\n\t\t\t\t<cbc:CityName>Kessel-Lo</cbc:CityName>\n\t\t\t\t<cbc:PostalZone>3010</cbc:PostalZone>\n\t\t\t\t<cbc:CountrySubentity>Region</cbc:CountrySubentity>\n\t\t\t\t<cac:AddressLine>\n\t\t\t\t\t<cbc:Line>Address Line 3</cbc:Line>\n\t\t\t\t</cac:AddressLine>\n\t\t\t\t<cac:Country>\n\t\t\t\t\t<cbc:IdentificationCode>BE</cbc:IdentificationCode>\n\t\t\t\t</cac:Country>\n\t\t\t</cac:PostalAddress>\n\t\t\t<cac:PartyTaxScheme>\n\t\t\t\t<cbc:CompanyID>BE0552912569</cbc:CompanyID>\n\t\t\t\t<cac:TaxScheme>\n\t\t\t\t\t<cbc:ID>VAT</cbc:ID>\n\t\t\t\t</cac:TaxScheme>\n\t\t\t</cac:PartyTaxScheme>\n\t\t\t<cac:PartyLegalEntity>\n\t\t\t\t<cbc:RegistrationName>Ademico Software</cbc:RegistrationName>\n\t\t\t\t<cbc:CompanyID schemeID=\"0208\">0552912569</cbc:CompanyID>\n\t\t\t\t<cac:RegistrationAddress>\n\t\t\t\t\t<cbc:CityName>Leuven</cbc:CityName>\n\t\t\t\t\t<cac:Country>\n\t\t\t\t\t\t<cbc:IdentificationCode>BE</cbc:IdentificationCode>\n\t\t\t\t\t</cac:Country>\n\t\t\t\t</cac:RegistrationAddress>\n\t\t\t</cac:PartyLegalEntity>\n\t\t\t<cac:Contact>\n\t\t\t\t<cbc:Name>John Doe</cbc:Name>\n\t\t\t\t<cbc:Telephone>1234567</cbc:Telephone>\n\t\t\t\t<cbc:ElectronicMail>info@example.com</cbc:ElectronicMail>\n\t\t\t</cac:Contact>\n\t\t</cac:Party>\n\t</cac:BuyerCustomerParty>\n\t<cac:SellerSupplierParty>\n\t\t<cac:Party>\n\t\t\t<cbc:EndpointID schemeID=\"9925\">0552912569_order1</cbc:EndpointID>\n\t\t\t<cac:PartyIdentification>\n\t\t\t\t<cbc:ID>0552912569_order1</cbc:ID>\n\t\t\t</cac:PartyIdentification>\n\t\t\t<cac:PartyName>\n\t\t\t\t<cbc:Name>Ademico Software Order</cbc:Name>\n\t\t\t</cac:PartyName>\n\t\t\t<cac:PostalAddress>\n\t\t\t\t<cbc:StreetName>My street</cbc:StreetName>\n\t\t\t\t<cbc:CityName>Leuven</cbc:CityName>\n\t\t\t\t<cbc:PostalZone>3010</cbc:PostalZone>\n\t\t\t\t<cbc:CountrySubentity>Region</cbc:CountrySubentity>\n\t\t\t\t<cac:AddressLine>\n\t\t\t\t\t<cbc:Line>Address Line 3</cbc:Line>\n\t\t\t\t</cac:AddressLine>\n\t\t\t\t<cac:Country>\n\t\t\t\t\t<cbc:IdentificationCode>BE</cbc:IdentificationCode>\n\t\t\t\t</cac:Country>\n\t\t\t</cac:PostalAddress>\n\t\t\t<cac:PartyLegalEntity>\n\t\t\t\t<cbc:RegistrationName>Ademico Software Order</cbc:RegistrationName>\n\t\t\t\t<cbc:CompanyID>0552912569_order1</cbc:CompanyID>\n\t\t\t\t<cac:RegistrationAddress>\n\t\t\t\t\t<cbc:CityName>Leuven</cbc:CityName>\n\t\t\t\t\t<cac:Country>\n\t\t\t\t\t\t<cbc:IdentificationCode>BE</cbc:IdentificationCode>\n\t\t\t\t\t</cac:Country>\n\t\t\t\t</cac:RegistrationAddress>\n\t\t\t</cac:PartyLegalEntity>\n\t\t\t<cac:Contact>\n\t\t\t\t<cbc:Name>John doe</cbc:Name>\n\t\t\t\t<cbc:Telephone>123456</cbc:Telephone>\n\t\t\t\t<cbc:ElectronicMail>info@example.com</cbc:ElectronicMail>\n\t\t\t</cac:Contact>\n\t\t</cac:Party>\n\t</cac:SellerSupplierParty>\n\t<cac:OriginatorCustomerParty>\n\t\t<cac:Party>\n\n\t\t\t<cac:PartyName>\n\t\t\t\t<cbc:Name>Ademico</cbc:Name>\n\t\t\t</cac:PartyName>\n\t\t\t<cac:Contact>\n\t\t\t\t<cbc:Name>John Doe</cbc:Name>\n\t\t\t\t<cbc:Telephone>123456</cbc:Telephone>\n\t\t\t\t<cbc:ElectronicMail>info@example.com</cbc:ElectronicMail>\n\t\t\t</cac:Contact>\n\t\t</cac:Party>\n\t</cac:OriginatorCustomerParty>\n\t<cac:AccountingCustomerParty>\n\t\t<cac:Party>\n\t\t\t<cbc:EndpointID schemeID=\"0192\">123456785</cbc:EndpointID>\n\t\t\t<cac:PartyName>\n\t\t\t\t<cbc:Name>Accounting</cbc:Name>\n\t\t\t</cac:PartyName>\n\t\t\t<cac:PostalAddress>\n\t\t\t\t<cbc:StreetName>My street</cbc:StreetName>\n\t\t\t\t<cbc:CityName>Oslo</cbc:CityName>\n\t\t\t\t<cbc:PostalZone>3010</cbc:PostalZone>\n\t\t\t\t<cbc:CountrySubentity>Region</cbc:CountrySubentity>\n\t\t\t\t<cac:AddressLine>\n\t\t\t\t\t<cbc:Line>Address Line 3</cbc:Line>\n\t\t\t\t</cac:AddressLine>\n\t\t\t\t<cac:Country>\n\t\t\t\t\t<cbc:IdentificationCode>BE</cbc:IdentificationCode>\n\t\t\t\t</cac:Country>\n\t\t\t</cac:PostalAddress>\n\t\t\t<cac:PartyTaxScheme>\n\t\t\t\t<cbc:CompanyID>BE0552912569</cbc:CompanyID>\n\t\t\t\t<cac:TaxScheme>\n\t\t\t\t\t<cbc:ID>VAT</cbc:ID>\n\t\t\t\t</cac:TaxScheme>\n\t\t\t</cac:PartyTaxScheme>\n\t\t\t<cac:PartyLegalEntity>\n\t\t\t\t<cbc:RegistrationName>Ademico Software</cbc:RegistrationName>\n\t\t\t\t<cbc:CompanyID schemeID=\"0082\">123486723</cbc:CompanyID>\n\t\t\t\t<cac:RegistrationAddress>\n\t\t\t\t\t<cbc:CityName>Leuven</cbc:CityName>\n\t\t\t\t\t<cac:Country>\n\t\t\t\t\t\t<cbc:IdentificationCode>BE</cbc:IdentificationCode>\n\t\t\t\t\t</cac:Country>\n\t\t\t\t</cac:RegistrationAddress>\n\t\t\t</cac:PartyLegalEntity>\n\t\t</cac:Party>\n\t</cac:AccountingCustomerParty>\n\t<cac:Delivery>\n\t\t<cac:DeliveryLocation>\n\t\t\t<cbc:ID schemeID=\"0088\">9483759475923478</cbc:ID>\n\t\t\t<cac:Address>\n\t\t\t\t<cbc:StreetName>Delivery street 2</cbc:StreetName>\n\t\t\t\t<cbc:AdditionalStreetName>Building 56</cbc:AdditionalStreetName>\n\t\t\t\t<cbc:CityName>Stockholm</cbc:CityName>\n\t\t\t\t<cbc:PostalZone>21234</cbc:PostalZone>\n\t\t\t\t<cac:Country>\n\t\t\t\t\t<cbc:IdentificationCode>SE</cbc:IdentificationCode>\n\t\t\t\t</cac:Country>\n\t\t\t</cac:Address>\n\t\t</cac:DeliveryLocation>\n\t\t<cac:RequestedDeliveryPeriod>\n\t\t\t<cbc:StartDate>2012-10-10</cbc:StartDate>\n\t\t\t<cbc:EndDate>2012-10-20</cbc:EndDate>\n\t\t</cac:RequestedDeliveryPeriod>\n\t\t<cac:DeliveryParty>\n\t\t\t<cac:PartyName>\n\t\t\t\t<cbc:Name>Delivery party Name</cbc:Name>\n\t\t\t</cac:PartyName>\n\t\t</cac:DeliveryParty>\n\t</cac:Delivery>\n\t<cac:DeliveryTerms>\n\t\t<cbc:ID>FOB</cbc:ID>\n\t\t<cbc:SpecialTerms>CAD</cbc:SpecialTerms>\n\t\t<cac:DeliveryLocation>\n\t\t\t<cbc:ID>FOB Oslo</cbc:ID>\n\t\t</cac:DeliveryLocation>\n\t</cac:DeliveryTerms>\n\t<cac:PaymentTerms>\n\t\t<cbc:Note>Payment terms description</cbc:Note>\n\t</cac:PaymentTerms>\n\t<cac:AllowanceCharge>\n\t\t<cbc:ChargeIndicator>true</cbc:ChargeIndicator>\n\t\t<cbc:AllowanceChargeReasonCode>ABK</cbc:AllowanceChargeReasonCode>\n\t\t<cbc:AllowanceChargeReason>Miscellaneous services</cbc:AllowanceChargeReason>\n\t\t<cbc:Amount currencyID=\"NOK\">400.00</cbc:Amount>\n\t\t<cac:TaxCategory>\n\t\t\t<cbc:ID>Z</cbc:ID>\n\t\t\t<cbc:Percent>0</cbc:Percent>\n\t\t\t<cac:TaxScheme>\n\t\t\t\t<cbc:ID>VAT</cbc:ID>\n\t\t\t</cac:TaxScheme>\n\t\t</cac:TaxCategory>\n\t</cac:AllowanceCharge>\n\t<cac:AllowanceCharge>\n\t\t<cbc:ChargeIndicator>false</cbc:ChargeIndicator>\n\t\t<cbc:AllowanceChargeReasonCode>95</cbc:AllowanceChargeReasonCode>\n\t\t<cbc:AllowanceChargeReason>Discount</cbc:AllowanceChargeReason>\n\t\t<cbc:MultiplierFactorNumeric>10</cbc:MultiplierFactorNumeric>\n\t\t<cbc:Amount currencyID=\"NOK\">652.50</cbc:Amount>\n\t\t<cbc:BaseAmount currencyID=\"NOK\">6525.00</cbc:BaseAmount>\n\t\t<cac:TaxCategory>\n\t\t\t<cbc:ID>S</cbc:ID>\n\t\t\t<cbc:Percent>25</cbc:Percent>\n\t\t\t<cac:TaxScheme>\n\t\t\t\t<cbc:ID>VAT</cbc:ID>\n\t\t\t</cac:TaxScheme>\n\t\t</cac:TaxCategory>\n\t</cac:AllowanceCharge>\n\t<cac:TaxTotal>\n\t\t<cbc:TaxAmount currencyID=\"NOK\">100.00</cbc:TaxAmount>\n\t</cac:TaxTotal>\n\t<cac:AnticipatedMonetaryTotal>\n\t\t<cbc:LineExtensionAmount currencyID=\"NOK\">6525.00</cbc:LineExtensionAmount>\n\t\t<cbc:TaxExclusiveAmount currencyID=\"NOK\">6272.50</cbc:TaxExclusiveAmount>\n\t\t<cbc:TaxInclusiveAmount currencyID=\"NOK\">6372.50</cbc:TaxInclusiveAmount>\n\t\t<cbc:AllowanceTotalAmount currencyID=\"NOK\">652.50</cbc:AllowanceTotalAmount>\n\t\t<cbc:ChargeTotalAmount currencyID=\"NOK\">400.00</cbc:ChargeTotalAmount>\n\t\t<cbc:PrepaidAmount currencyID=\"NOK\">10.00</cbc:PrepaidAmount>\n\t\t<cbc:PayableRoundingAmount currencyID=\"NOK\">0.50</cbc:PayableRoundingAmount>\n\t\t<cbc:PayableAmount currencyID=\"NOK\">6363</cbc:PayableAmount>\n\t</cac:AnticipatedMonetaryTotal>\n\t<cac:OrderLine>\n\t\t<cbc:Note>Freetext note on line 1</cbc:Note>\n\t\t<cac:LineItem>\n\t\t\t<cbc:ID>1</cbc:ID>\n\t\t\t<cbc:Quantity unitCode=\"EA\">120</cbc:Quantity>\n\t\t\t<cbc:LineExtensionAmount currencyID=\"NOK\">6300.00</cbc:LineExtensionAmount>\n\t\t\t<cbc:PartialDeliveryIndicator>false</cbc:PartialDeliveryIndicator>\n\t\t\t<cbc:AccountingCost>12345678</cbc:AccountingCost>\n\t\t\t<cac:Delivery>\n\t\t\t\t<cac:RequestedDeliveryPeriod>\n\t\t\t\t\t<cbc:StartDate>2010-02-10</cbc:StartDate>\n\t\t\t\t\t<cbc:EndDate>2010-02-25</cbc:EndDate>\n\t\t\t\t</cac:RequestedDeliveryPeriod>\n\t\t\t</cac:Delivery>\n\t\t\t<cac:OriginatorParty>\n\t\t\t\t<cac:PartyIdentification>\n\t\t\t\t\t<cbc:ID schemeID=\"0082\">1234567890</cbc:ID>\n\t\t\t\t</cac:PartyIdentification>\n\t\t\t\t<cac:PartyName>\n\t\t\t\t\t<cbc:Name>John K.</cbc:Name>\n\t\t\t\t</cac:PartyName>\n\t\t\t</cac:OriginatorParty>\n\t\t\t<cac:AllowanceCharge>\n\t\t\t\t<cbc:ChargeIndicator>true</cbc:ChargeIndicator>\n\t\t\t\t<cbc:AllowanceChargeReasonCode>ABK</cbc:AllowanceChargeReasonCode>\n\t\t\t\t<cbc:AllowanceChargeReason>Miscellaneous services</cbc:AllowanceChargeReason>\n\t\t\t\t<cbc:Amount currencyID=\"NOK\">600.00</cbc:Amount>\n\t\t\t</cac:AllowanceCharge>\n\t\t\t<cac:AllowanceCharge>\n\t\t\t\t<cbc:ChargeIndicator>false</cbc:ChargeIndicator>\n\t\t\t\t<cbc:AllowanceChargeReasonCode>95</cbc:AllowanceChargeReasonCode>\n\t\t\t\t<cbc:AllowanceChargeReason>Discount</cbc:AllowanceChargeReason>\n\t\t\t\t<cbc:MultiplierFactorNumeric>5</cbc:MultiplierFactorNumeric>\n\t\t\t\t<cbc:Amount currencyID=\"NOK\">300.00</cbc:Amount>\n\t\t\t\t<cbc:BaseAmount currencyID=\"NOK\">6000.00</cbc:BaseAmount>\n\t\t\t</cac:AllowanceCharge>\n\t\t\t<cac:Price>\n\t\t\t\t<cbc:PriceAmount currencyID=\"NOK\">50.000</cbc:PriceAmount>\n\t\t\t\t<cbc:BaseQuantity unitCode=\"EA\">1</cbc:BaseQuantity>\n\t\t\t\t<cac:AllowanceCharge>\n\t\t\t\t\t<cbc:ChargeIndicator>false</cbc:ChargeIndicator>\n\t\t\t\t\t<cbc:Amount currencyID=\"NOK\">10.00</cbc:Amount>\n\t\t\t\t\t<cbc:BaseAmount currencyID=\"NOK\">60.00</cbc:BaseAmount>\n\t\t\t\t</cac:AllowanceCharge>\n\t\t\t</cac:Price>\n\t\t\t<cac:Item>\n\t\t\t\t<cbc:Description>Needle 4mm</cbc:Description>\n\t\t\t\t<cbc:Name>Needle 4mm</cbc:Name>\n\t\t\t\t<cac:BuyersItemIdentification>\n\t\t\t\t\t<cbc:ID>123456</cbc:ID>\n\t\t\t\t</cac:BuyersItemIdentification>\n\t\t\t\t<cac:SellersItemIdentification>\n\t\t\t\t\t<cbc:ID>121212</cbc:ID>\n\t\t\t\t</cac:SellersItemIdentification>\n\t\t\t\t<cac:StandardItemIdentification>\n\t\t\t\t\t<cbc:ID schemeID=\"0160\">0060000012345</cbc:ID>\n\t\t\t\t</cac:StandardItemIdentification>\n\t\t\t\t<cac:ItemSpecificationDocumentReference>\n\t\t\t\t\t<cbc:ID>12345678</cbc:ID>\n\t\t\t\t</cac:ItemSpecificationDocumentReference>\n\t\t\t\t<cac:CommodityClassification>\n\t\t\t\t\t<cbc:ItemClassificationCode listID=\"MP\" listVersionID=\"19.0501\">12345678</cbc:ItemClassificationCode>\n\t\t\t\t</cac:CommodityClassification>\n\n\t\t\t\t<cac:ClassifiedTaxCategory>\n\t\t\t\t\t<cbc:ID>S</cbc:ID>\n\t\t\t\t\t<cbc:Percent>25</cbc:Percent>\n\t\t\t\t\t<cac:TaxScheme>\n\t\t\t\t\t\t<cbc:ID>VAT</cbc:ID>\n\t\t\t\t\t</cac:TaxScheme>\n\t\t\t\t</cac:ClassifiedTaxCategory>\n\t\t\t\t<cac:AdditionalItemProperty>\n\t\t\t\t\t<cbc:Name>Length</cbc:Name>\n\t\t\t\t\t<cbc:Value>30 mm</cbc:Value>\n\t\t\t\t\t<cbc:ValueQuantity unitCode=\"C62\">30</cbc:ValueQuantity>\n\t\t\t\t\t<cbc:ValueQualifier>descr</cbc:ValueQualifier>\n\t\t\t\t</cac:AdditionalItemProperty>\n\t\t\t\t<cac:ItemInstance>\n\t\t\t\t\t<cbc:SerialID>SE-123456</cbc:SerialID>\n\t\t\t\t\t<cac:LotIdentification>\n\t\t\t\t\t\t<cbc:LotNumberID>LO-123456</cbc:LotNumberID>\n\t\t\t\t\t</cac:LotIdentification>\n\t\t\t\t</cac:ItemInstance>\n\t\t\t</cac:Item>\n\t\t</cac:LineItem>\n\t</cac:OrderLine>\n\t<cac:OrderLine>\n\t\t<cbc:Note>Freetext note on line 2</cbc:Note>\n\t\t<cac:LineItem>\n\t\t\t<cbc:ID>2</cbc:ID>\n\t\t\t<cbc:Quantity unitCode=\"EA\">15</cbc:Quantity>\n\t\t\t<cbc:LineExtensionAmount currencyID=\"NOK\">225.00</cbc:LineExtensionAmount>\n\t\t\t<cbc:PartialDeliveryIndicator>true</cbc:PartialDeliveryIndicator>\n\t\t\t<cbc:AccountingCost>ProjectID123</cbc:AccountingCost>\n\t\t\t<cac:Delivery>\n\t\t\t\t<cac:RequestedDeliveryPeriod>\n\t\t\t\t\t<cbc:StartDate>2012-10-15</cbc:StartDate>\n\t\t\t\t\t<cbc:EndDate>2012-10-31</cbc:EndDate>\n\t\t\t\t</cac:RequestedDeliveryPeriod>\n\t\t\t</cac:Delivery>\n\t\t\t<cac:OriginatorParty>\n\t\t\t\t<cac:PartyIdentification>\n\t\t\t\t\t<cbc:ID schemeID=\"0082\">1234567890</cbc:ID>\n\t\t\t\t</cac:PartyIdentification>\n\t\t\t\t<cac:PartyName>\n\t\t\t\t\t<cbc:Name>John K.</cbc:Name>\n\t\t\t\t</cac:PartyName>\n\t\t\t</cac:OriginatorParty>\n\t\t\t<cac:Price>\n\t\t\t\t<cbc:PriceAmount currencyID=\"NOK\">15.000</cbc:PriceAmount>\n\t\t\t\t<cbc:BaseQuantity unitCode=\"EA\">1</cbc:BaseQuantity>\n\t\t\t\t<cac:AllowanceCharge>\n\t\t\t\t\t<cbc:ChargeIndicator>false</cbc:ChargeIndicator>\n\t\t\t\t\t<cbc:Amount currencyID=\"NOK\">100.0000</cbc:Amount>\n\t\t\t\t\t<cbc:BaseAmount currencyID=\"NOK\">115.0000</cbc:BaseAmount>\n\t\t\t\t</cac:AllowanceCharge>\n\t\t\t</cac:Price>\n\t\t\t<cac:Item>\n\t\t\t\t<cbc:Description>Wet tissues for children</cbc:Description>\n\t\t\t\t<cbc:Name>Wet tissues</cbc:Name>\n\t\t\t\t<cac:SellersItemIdentification>\n\t\t\t\t\t<cbc:ID>SItemNo011</cbc:ID>\n\t\t\t\t</cac:SellersItemIdentification>\n\t\t\t\t<cac:CommodityClassification>\n\t\t\t\t\t<cbc:ItemClassificationCode listID=\"MP\" listVersionID=\"19.0501\">56789123</cbc:ItemClassificationCode>\n\t\t\t\t</cac:CommodityClassification>\n\t\t\t\t<cac:ClassifiedTaxCategory>\n\t\t\t\t\t<cbc:ID>S</cbc:ID>\n\t\t\t\t\t<cbc:Percent>25</cbc:Percent>\n\t\t\t\t\t<cac:TaxScheme>\n\t\t\t\t\t\t<cbc:ID>VAT</cbc:ID>\n\t\t\t\t\t</cac:TaxScheme>\n\t\t\t\t</cac:ClassifiedTaxCategory>\n\t\t\t\t<cac:AdditionalItemProperty>\n\t\t\t\t\t<cbc:Name>Weight</cbc:Name>\n\t\t\t\t\t<cbc:Value>100 g</cbc:Value>\n\t\t\t\t</cac:AdditionalItemProperty>\n\t\t\t</cac:Item>\n\t\t</cac:LineItem>\n\t</cac:OrderLine>\n</Order>\n</element>"
																},
																{
																	"name": "Error retrieving the Order UBL XML ",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/xml"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/orders/:transmissionId/ubl",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"orders",
																				":transmissionId",
																				"ubl"
																			],
																			"variable": [
																				{
																					"key": "transmissionId"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "xml",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/xml"
																		}
																	],
																	"cookie": [],
																	"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ApplicationMessage>\n\t<code>DOCUMENT_NOT_FOUND</code>\n\t<message>Could not find Order with transmission id [803828d52d4911ed85f512ef9c5638d0@ademico-software.com]</message>\n</ApplicationMessage>"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "sending-notifications",
											"item": [
												{
													"name": "{notificationId}",
													"item": [
														{
															"name": "Deprecated: use the Notifications API api/peppol/v1/notifications. Consume a sending notification to remove it from the queue",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/orders/sending-notifications/:notificationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"orders",
																		"sending-notifications",
																		":notificationId"
																	],
																	"variable": [
																		{
																			"key": "notificationId",
																			"value": "7",
																			"description": "(Required) The id of the notification we want to consume"
																		}
																	]
																},
																"description": "The notification will not be retrieved anymore when getting the notifications list"
															},
															"response": [
																{
																	"name": "Notification consumed successfully",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/orders/sending-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"orders",
																				"sending-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Error consuming notification",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/orders/sending-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"orders",
																				"sending-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error consuming notification\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Deprecated: use the Notifications API api/peppol/v1/notifications. Get the list of notifications after sending an Order to the Seller",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/orders/sending-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"orders",
																"sending-notifications"
															],
															"query": [
																{
																	"key": "transmissionId",
																	"value": "803828d52d4911ed85f512ef9c5638d0",
																	"description": "The transmission id of a sent Order to the Seller"
																},
																{
																	"key": "documentId",
																	"value": "pbe000512-1",
																	"description": "The document id of a sent Order to the Seller"
																},
																{
																	"key": "sender",
																	"value": "0208:0552912569",
																	"description": "The sender of the notification"
																},
																{
																	"key": "receiver",
																	"value": "0208:0552912569",
																	"description": "The receiver of the notification"
																},
																{
																	"key": "startDate",
																	"value": "2023-06-25",
																	"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																},
																{
																	"key": "startDateTime",
																	"value": "2023-07-25T11:03:26.688Z",
																	"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																},
																{
																	"key": "endDate",
																	"value": "2023-06-26",
																	"description": "The end date of the period to filter the notifications"
																},
																{
																	"key": "endDateTime",
																	"value": "2023-07-29T11:03:26.688Z",
																	"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "The starting page number from which we want to retrieve results. The first page is 0."
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "How many results we retrieve per page"
																}
															]
														},
														"description": "You get notified when the status of an Order changes. The following Order status values are possible:<table><tr><th>Code</th><th>Description</th></tr><td>QUEUED</td><td>Waiting to be sent to the Seller</td></tr><tr><td>SENT</td><td>Acknowledged by the receiver Access Point C3</td></tr><tr><td>SEND_FAILED</td><td>Failed to send to the receiver's Access Point C3</td></tr><tr><td>REJECTED</td><td>MLR reject. Status is used only when the Seller will not process the referenced Order any further. Seller is rejecting this Order but not necessarily the commercial transaction. Although it can be used also for rejection for commercial reasons (Order not corresponding to delivery).</td></tr></table>"
													},
													"response": [
														{
															"name": "Sending notifications retrieved successfully",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/orders/sending-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"orders",
																		"sending-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a sent Order to the Seller"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of a sent Order to the Seller"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"pagination\": {\n    \"count\": 3,\n    \"page\": 0,\n    \"pageSize\": 10\n  },\n  \"notifications\": [\n    {\n      \"eventType\": \"DOCUMENT_SENT\",\n      \"notificationId\": 1,\n      \"transmissionId\": \"7c6b16d3303b11eda7239a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-1\",\n      \"documentStatus\": \"SENT\",\n      \"peppolDocumentType\": \"ORDER\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\",\n      \"notificationDate\": \"2022-09-09T13:09:59.524\",\n      \"details\": []\n    },\n    {\n      \"eventType\": \"DOCUMENT_SEND_FAILED\",\n      \"notificationId\": 2,\n      \"transmissionId\": \"7d62bd44303b11eda7239a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-2\",\n      \"documentStatus\": \"SEND_FAILED\",\n      \"peppolDocumentType\": \"ORDER\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\",\n      \"notificationDate\": \"2022-09-09T13:09:59.524\",\n      \"details\": [\n        {\n          \"code\": \"DOCUMENT_TRANSMISSION_ERROR\",\n          \"message\": \"Error dispatching the message to http://receiver:8080/msh\"\n        },\n        {\n          \"code\": \"DOCUMENT_TRANSMISSION_ERROR\",\n          \"message\": \"Error2\"\n        }\n      ]\n    },\n    {\n      \"eventType\": \"MLR_RECEIVED\",\n      \"notificationId\": 4,\n      \"transmissionId\": \"7df168b5303b11eda7239a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-3\",\n      \"documentStatus\": \"REJECTED\",\n      \"peppolDocumentType\": \"ORDER\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\",\n      \"notificationDate\": \"2022-09-09T13:09:59.524\",\n      \"details\": [\n        {\n          \"code\": \"ERROR\",\n          \"message\": \"/Order[1]:[BR-CO-15]-Invoice total amount with VAT (BT-112) = Invoice total amount without VAT (BT-109) + Invoice total VAT amount (BT-110).\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Error getting the sending notifications",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/orders/sending-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"orders",
																		"sending-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a sent Order to the Seller"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of a sent Order to the Seller"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error getting notifications\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "receiving-notifications",
											"item": [
												{
													"name": "{notificationId}",
													"item": [
														{
															"name": "Deprecated: use the Notifications API api/peppol/v1/notifications. Consume a receiving notification to remove it from the queue",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/orders/receiving-notifications/:notificationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"orders",
																		"receiving-notifications",
																		":notificationId"
																	],
																	"variable": [
																		{
																			"key": "notificationId",
																			"value": "7",
																			"description": "(Required) The id of the notification we want to consume"
																		}
																	]
																},
																"description": "The notification will not be retrieved anymore when getting the notifications list"
															},
															"response": [
																{
																	"name": "Notification consumed successfully",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/orders/receiving-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"orders",
																				"receiving-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Error consuming notification",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/orders/receiving-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"orders",
																				"receiving-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error consuming notification\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Deprecated: use the Notifications API api/peppol/v1/notifications. Get the list of notifications when receiving an Order from the Buyer",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/orders/receiving-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"orders",
																"receiving-notifications"
															],
															"query": [
																{
																	"key": "transmissionId",
																	"value": "803828d52d4911ed85f512ef9c5638d0",
																	"description": "The transmission id of a received Order from the Buyer"
																},
																{
																	"key": "documentId",
																	"value": "pbe000512-1",
																	"description": "The document id of a received Order from the Buyer"
																},
																{
																	"key": "sender",
																	"value": "0208:0552912569",
																	"description": "The sender of the notification"
																},
																{
																	"key": "receiver",
																	"value": "0208:0552912569",
																	"description": "The receiver of the notification"
																},
																{
																	"key": "startDate",
																	"value": "2023-06-25",
																	"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																},
																{
																	"key": "startDateTime",
																	"value": "2023-07-25T11:03:26.688Z",
																	"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																},
																{
																	"key": "endDate",
																	"value": "2023-06-26",
																	"description": "The end date of the period to filter the notifications"
																},
																{
																	"key": "endDateTime",
																	"value": "2023-07-29T11:03:26.688Z",
																	"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "The starting page number from which we want to retrieve results. The first page is 0."
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "How many results we retrieve per page"
																}
															]
														},
														"description": "You get notified when your receive an Order"
													},
													"response": [
														{
															"name": "Receiving notifications retrieved successfully",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/orders/receiving-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"orders",
																		"receiving-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a received Order from the Buyer"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of a received Order from the Buyer"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"pagination\": {\n    \"count\": 3,\n    \"page\": 0,\n    \"pageSize\": 10\n  },\n  \"notifications\": [\n    {\n      \"eventType\": \"DOCUMENT_RECEIVED\",\n      \"notificationId\": 9,\n      \"transmissionId\": \"23d58fa3303d11ed94af9a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-6\",\n      \"peppolDocumentType\": \"ORDER\",\n      \"sender\": \"0208:0465105397\",\n      \"receiver\": \"0208:0552912569\",\n      \"receivedDate\": \"2022-09-09T13:09:59.524\"\n    },\n    {\n      \"eventType\": \"DOCUMENT_RECEIVED\",\n      \"notificationId\": 10,\n      \"transmissionId\": \"24c60a25303d11ed94af9a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-7\",\n      \"peppolDocumentType\": \"ORDER\",\n      \"sender\": \"0208:0465105397\",\n      \"receiver\": \"0208:0552912569\",\n      \"receivedDate\": \"2022-09-09T13:09:59.524\"\n    },\n    {\n      \"eventType\": \"DOCUMENT_RECEIVED\",\n      \"notificationId\": 15,\n      \"transmissionId\": \"27cb0ccd303d11ed94af9a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-10\",\n      \"peppolDocumentType\": \"ORDER\",\n      \"sender\": \"0208:0465105397\",\n      \"receiver\": \"0208:0552912569\",\n      \"receivedDate\": \"2022-09-09T13:09:59.524\"\n    }\n  ]\n}"
														},
														{
															"name": "Error getting the receiving notifications",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/orders/receiving-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"orders",
																		"receiving-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a received Order from the Buyer"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of a received Order from the Buyer"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error getting notifications\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "invoices",
									"item": [
										{
											"name": "ubl-submissions",
											"item": [
												{
													"name": "Send an UBL invoice/credit note to the Buyer",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "X-C5-REPORTING",
																"value": "false",
																"description": "If true, the API will report the submission to C5 after the document was sent to the Buyer. Only used for Singapore."
															},
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"description": "(Required) The invoice or credit note in UBL XML format",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/invoices/ubl-submissions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"invoices",
																"ubl-submissions"
															]
														},
														"description": "The invoice/credit note is scheduled in the queue to be sent to the Buyer. The UBL is validated before is being sent.You get notified either via pull or push mechanism when the invoice/credit note has be received by the Buyer. See below for possible validation errors you can get."
													},
													"response": [
														{
															"name": "The invoice/credit note has been scheduled in the queue to be sent to the Buyer.You get notified either via pull or push mechanism when the invoice/credit note has be received by the Buyer. Please check for more details in the notification sections.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-C5-REPORTING",
																		"value": "false",
																		"description": "If true, the API will report the submission to C5 after the document was sent to the Buyer. Only used for Singapore."
																	},
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "file",
																			"description": "(Required) The invoice or credit note in UBL XML format",
																			"type": "file",
																			"src": []
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoices/ubl-submissions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoices",
																		"ubl-submissions"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"transmissionId\": \"803828d52d4911ed85f512ef9c5638d0\",\n  \"documentId\": \"pbe000512-1\",\n  \"documentTypeEnum\": \"INVOICE\",\n  \"sender\": \"0208:0552912569\",\n  \"receiver\": \"0208:0465105397\",\n  \"sbdhInstanceIdentifier\": \"6b56b28947e511eda0b802bb4e4747f9\",\n  \"c5SubmissionResult\": {\n    \"status\": \"SCHEDULED\",\n    \"details\": []\n  }\n}"
														},
														{
															"name": "Error sending the UBL invoice/credit note to the Buyer. In this case the UBL invoice/credit note is not sent to the Buyer. Examples of cases when you get an error: <ul><li>The submitted file does not contain an UBL invoice/credit note</li><li>The XML vali",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-C5-REPORTING",
																		"value": "false",
																		"description": "If true, the API will report the submission to C5 after the document was sent to the Buyer. Only used for Singapore."
																	},
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "file",
																			"description": "(Required) The invoice or credit note in UBL XML format",
																			"type": "file",
																			"src": []
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoices/ubl-submissions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoices",
																		"ubl-submissions"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": {\n    \"code\": \"SCHEMATRON_VALIDATION_ERROR\",\n    \"message\": \"The Schematron validation failed has failed for document [invoice.xml]\"\n  },\n  \"validationReport\": {\n    \"globalStatus\": \"ERROR\",\n    \"validatedXmlName\": \"invoice.xml\",\n    \"xmlValidationReport\": {\n      \"validatedWith\": \"invoice.xml\",\n      \"reportStatus\": \"SUCCESS\",\n      \"warningsCount\": 0,\n      \"errorsCount\": 0,\n      \"xmlValidationMessages\": [],\n      \"validationType\": \"XML_SYNTAX\"\n    },\n    \"xsdValidationReport\": {\n      \"validatedWith\": \"UBL-Invoice-2.1.xsd\",\n      \"reportStatus\": \"SUCCESS\",\n      \"warningsCount\": 0,\n      \"errorsCount\": 0,\n      \"xsdValidationMessages\": [],\n      \"validationType\": \"XSD_SCHEMA\"\n    },\n    \"schematronValidationReport\": [\n      {\n        \"validatedWith\": \"EN16931-UBL-validation.xslt\",\n        \"reportStatus\": \"ERROR\",\n        \"warningsCount\": 0,\n        \"errorsCount\": 2,\n        \"schematronValidationMessages\": [\n          {\n            \"errorLevel\": \"ERROR\",\n            \"description\": \"[BR-CO-15]-Invoice total amount with VAT (BT-112) = Invoice total amount without VAT (BT-109) + Invoice total VAT amount (BT-110).\",\n            \"lineNumber\": 3,\n            \"columnNumber\": 73,\n            \"schematronTest\": \"every $Currency in cbc:DocumentCurrencyCode satisfies (count(cac:TaxTotal/xs:decimal(cbc:TaxAmount[@currencyID=$Currency])) eq 1) and (cac:LegalMonetaryTotal/xs:decimal(cbc:TaxInclusiveAmount) = round( (cac:LegalMonetaryTotal/xs:decimal(cbc:TaxExclusiveAmount) + cac:TaxTotal/xs:decimal(cbc:TaxAmount[@currencyID=$Currency])) * 10 * 10) div 100)\",\n            \"errorId\": \"BR-CO-15\",\n            \"xpath\": \"/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]\"\n          },\n          {\n            \"errorLevel\": \"ERROR\",\n            \"description\": \"[BR-CO-14]-Invoice total VAT amount (BT-110) = Î£ VAT category tax amount (BT-117).\",\n            \"lineNumber\": 130,\n            \"columnNumber\": 19,\n            \"schematronTest\": \"(xs:decimal(child::cbc:TaxAmount)= round((sum(cac:TaxSubtotal/xs:decimal(cbc:TaxAmount)) * 10 * 10)) div 100) or not(cac:TaxSubtotal)\",\n            \"errorId\": \"BR-CO-14\",\n            \"xpath\": \"/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]/*:TaxTotal[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]\"\n          }\n        ],\n        \"validationType\": \"SCHEMATRON\"\n      }\n    ],\n    \"warningsCount\": 0,\n    \"errorsCount\": 2,\n    \"xmlContent\": \"<Invoice xmlns:cac=\\\"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\\\"\\n         xmlns:cbc=\\\"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\\\"\\n         xmlns=\\\"urn:oasis:names:specification:ubl:schema:xsd:Invoice-2\\\">\\n    <cbc:CustomizationID>urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0</cbc:CustomizationID>\\n    <cbc:ProfileID>urn:fdc:peppol.eu:2017:poacc:billing:01:1.0</cbc:ProfileID>\\n    <cbc:ID>pbe000512-8</cbc:ID>\\n    <cbc:IssueDate>2022-05-19</cbc:IssueDate>\\n    <cbc:DueDate>2022-06-19</cbc:DueDate>\\n    <cbc:InvoiceTypeCode>380</cbc:InvoiceTypeCode>\\n    <cbc:DocumentCurrencyCode>EUR</cbc:DocumentCurrencyCode>\\n    <cbc:AccountingCost>4025:123:4343</cbc:AccountingCost>\\n    <cbc:BuyerReference>0150abc</cbc:BuyerReference>\\n    <cac:OrderReference>\\n        <cbc:ID>test-ademico-001</cbc:ID>\\n        <cbc:SalesOrderID>test-ademico-001</cbc:SalesOrderID>\\n    </cac:OrderReference>\\n    <cac:AccountingSupplierParty>\\n        <cac:Party>\\n            <cbc:EndpointID schemeID=\\\"0208\\\">0552912569</cbc:EndpointID>\\n            <cac:PartyIdentification>\\n                <cbc:ID schemeID=\\\"0208\\\">0552912569</cbc:ID>\\n            </cac:PartyIdentification>\\n            <cac:PartyName>\\n                <cbc:Name>Ademico Software</cbc:Name>\\n            </cac:PartyName>\\n            <cac:PostalAddress>\\n                <cbc:StreetName>Heidebergstraat 204</cbc:StreetName>\\n                <cbc:CityName>Kessel-Lo</cbc:CityName>\\n                <cbc:PostalZone>3010</cbc:PostalZone>\\n                <cac:Country>\\n                    <cbc:IdentificationCode>BE</cbc:IdentificationCode>\\n                </cac:Country>\\n            </cac:PostalAddress>\\n            <cac:PartyTaxScheme>\\n                <cbc:CompanyID>BE0552912569</cbc:CompanyID>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:PartyTaxScheme>\\n            <cac:PartyLegalEntity>\\n                <cbc:RegistrationName>Ademico Software</cbc:RegistrationName>\\n                <cbc:CompanyID schemeID=\\\"0208\\\">0552912569</cbc:CompanyID>\\n            </cac:PartyLegalEntity>\\n            <cac:Contact>\\n                <cbc:ElectronicMail>info@ademico-software.com</cbc:ElectronicMail>\\n            </cac:Contact>\\n        </cac:Party>\\n    </cac:AccountingSupplierParty>\\n\\n    <cac:AccountingCustomerParty>\\n        <cac:Party>\\n            <cbc:EndpointID schemeID=\\\"0208\\\">0465105397</cbc:EndpointID>\\n            <cac:PartyIdentification>\\n                <cbc:ID schemeID=\\\"0208\\\">0465105397</cbc:ID>\\n            </cac:PartyIdentification>\\n            <cac:PartyName>\\n                <cbc:Name>NicolaasJanssens</cbc:Name>\\n            </cac:PartyName>\\n            <cac:PostalAddress>\\n                <cbc:StreetName>Simon Bolivarlaan</cbc:StreetName>\\n                <cbc:CityName>Brussel</cbc:CityName>\\n                <cbc:PostalZone>1000</cbc:PostalZone>\\n                <cac:Country>\\n                    <cbc:IdentificationCode>BE</cbc:IdentificationCode>\\n                </cac:Country>\\n            </cac:PostalAddress>\\n            <cac:PartyTaxScheme>\\n                <cbc:CompanyID>BE0465105397</cbc:CompanyID>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:PartyTaxScheme>\\n            <cac:PartyLegalEntity>\\n                <cbc:RegistrationName>NicolaasJanssens</cbc:RegistrationName>\\n                <cbc:CompanyID>0465105397</cbc:CompanyID>\\n            </cac:PartyLegalEntity>\\n            <cac:Contact>\\n                <cbc:ElectronicMail>nicolaas.janssens@bosa.fgov.be</cbc:ElectronicMail>\\n            </cac:Contact>\\n        </cac:Party>\\n    </cac:AccountingCustomerParty>\\n    <cac:Delivery>\\n        <cbc:ActualDeliveryDate>2017-11-01</cbc:ActualDeliveryDate>\\n        <cac:DeliveryLocation>\\n            <cbc:ID schemeID=\\\"0088\\\">9483759475923478</cbc:ID>\\n            <cac:Address>\\n                <cbc:StreetName>Delivery street 2</cbc:StreetName>\\n                <cbc:AdditionalStreetName>Building 56</cbc:AdditionalStreetName>\\n                <cbc:CityName>Stockholm</cbc:CityName>\\n                <cbc:PostalZone>21234</cbc:PostalZone>\\n                <cac:Country>\\n                    <cbc:IdentificationCode>SE</cbc:IdentificationCode>\\n                </cac:Country>\\n            </cac:Address>\\n        </cac:DeliveryLocation>\\n        <cac:DeliveryParty>\\n            <cac:PartyName>\\n                <cbc:Name>Delivery party Name</cbc:Name>\\n            </cac:PartyName>\\n        </cac:DeliveryParty>\\n    </cac:Delivery>\\n    <cac:PaymentMeans>\\n        <cbc:PaymentMeansCode name=\\\"Credit transfer\\\">30</cbc:PaymentMeansCode>\\n        <cbc:PaymentID>Snippet1</cbc:PaymentID>\\n        <cac:PayeeFinancialAccount>\\n            <cbc:ID>IBAN32423940</cbc:ID>\\n            <cbc:Name>AccountName</cbc:Name>\\n            <cac:FinancialInstitutionBranch>\\n                <cbc:ID>BIC324098</cbc:ID>\\n            </cac:FinancialInstitutionBranch>\\n        </cac:PayeeFinancialAccount>\\n    </cac:PaymentMeans>\\n    <cac:PaymentTerms>\\n        <cbc:Note>Payment within 10 days, 2% discount</cbc:Note>\\n    </cac:PaymentTerms>\\n    <cac:AllowanceCharge>\\n        <cbc:ChargeIndicator>true</cbc:ChargeIndicator>\\n        <cbc:AllowanceChargeReason>Insurance</cbc:AllowanceChargeReason>\\n        <cbc:Amount currencyID=\\\"EUR\\\">10</cbc:Amount>\\n        <cac:TaxCategory>\\n            <cbc:ID>E</cbc:ID>\\n            <cbc:Percent>0</cbc:Percent>\\n            <cac:TaxScheme>\\n                <cbc:ID>VAT</cbc:ID>\\n            </cac:TaxScheme>\\n        </cac:TaxCategory>\\n    </cac:AllowanceCharge>\\n    <cac:TaxTotal>\\n        <!-- Incorrect TaxAmount -->\\n        <cbc:TaxAmount currencyID=\\\"EUR\\\">310.09</cbc:TaxAmount>\\n        <cac:TaxSubtotal>\\n            <cbc:TaxableAmount currencyID=\\\"EUR\\\">1481.4</cbc:TaxableAmount>\\n            <cbc:TaxAmount currencyID=\\\"EUR\\\">311.09</cbc:TaxAmount>\\n            <cac:TaxCategory>\\n                <cbc:ID>S</cbc:ID>\\n                <cbc:Percent>21.0</cbc:Percent>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:TaxCategory>\\n        </cac:TaxSubtotal>\\n        <cac:TaxSubtotal>\\n            <cbc:TaxableAmount currencyID=\\\"EUR\\\">30</cbc:TaxableAmount>\\n            <cbc:TaxAmount currencyID=\\\"EUR\\\">0</cbc:TaxAmount>\\n            <cac:TaxCategory>\\n                <cbc:ID>E</cbc:ID>\\n                <cbc:Percent>0</cbc:Percent>\\n                <cbc:TaxExemptionReasonCode>VATEX-EU-F</cbc:TaxExemptionReasonCode>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:TaxCategory>\\n        </cac:TaxSubtotal>\\n    </cac:TaxTotal>\\n    <cac:LegalMonetaryTotal>\\n        <cbc:LineExtensionAmount currencyID=\\\"EUR\\\">1501.4</cbc:LineExtensionAmount>\\n        <cbc:TaxExclusiveAmount currencyID=\\\"EUR\\\">1511.4</cbc:TaxExclusiveAmount>\\n        <cbc:TaxInclusiveAmount currencyID=\\\"EUR\\\">1822.49</cbc:TaxInclusiveAmount>\\n        <cbc:ChargeTotalAmount currencyID=\\\"EUR\\\">10</cbc:ChargeTotalAmount>\\n        <cbc:PayableAmount currencyID=\\\"EUR\\\">1822.49</cbc:PayableAmount>\\n    </cac:LegalMonetaryTotal>\\n\\n    <cac:InvoiceLine>\\n        <cbc:ID>1</cbc:ID>\\n        <cbc:InvoicedQuantity unitCode=\\\"DAY\\\">2</cbc:InvoicedQuantity>\\n        <cbc:LineExtensionAmount currencyID=\\\"EUR\\\">20</cbc:LineExtensionAmount>\\n        <cbc:AccountingCost>Consulting Fees</cbc:AccountingCost>\\n        <cac:OrderLineReference>\\n            <cbc:LineID>test-ademico-001</cbc:LineID>\\n        </cac:OrderLineReference>\\n        <cac:Item>\\n            <cbc:Description>TEST 0%</cbc:Description>\\n            <cbc:Name>TEST 0%</cbc:Name>\\n            <cac:StandardItemIdentification>\\n                <cbc:ID schemeID=\\\"0088\\\">21382183120983</cbc:ID>\\n            </cac:StandardItemIdentification>\\n            <cac:OriginCountry>\\n                <cbc:IdentificationCode>NO</cbc:IdentificationCode>\\n            </cac:OriginCountry>\\n            <cac:CommodityClassification>\\n                <cbc:ItemClassificationCode listID=\\\"SRV\\\">09348023</cbc:ItemClassificationCode>\\n            </cac:CommodityClassification>\\n            <cac:ClassifiedTaxCategory>\\n                <cbc:ID>E</cbc:ID>\\n                <cbc:Percent>0</cbc:Percent>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:ClassifiedTaxCategory>\\n        </cac:Item>\\n        <cac:Price>\\n            <cbc:PriceAmount currencyID=\\\"EUR\\\">10</cbc:PriceAmount>\\n        </cac:Price>\\n    </cac:InvoiceLine>\\n    <cac:InvoiceLine>\\n        <cbc:ID>2</cbc:ID>\\n        <cbc:InvoicedQuantity unitCode=\\\"DAY\\\">12</cbc:InvoicedQuantity>\\n        <cbc:LineExtensionAmount currencyID=\\\"EUR\\\">1481.4</cbc:LineExtensionAmount>\\n        <cac:OrderLineReference>\\n            <cbc:LineID>test-ademico-001</cbc:LineID>\\n        </cac:OrderLineReference>\\n        <cac:Item>\\n            <cbc:Description>Description 2</cbc:Description>\\n            <cbc:Name>TEST 21%</cbc:Name>\\n            <cac:StandardItemIdentification>\\n                <cbc:ID schemeID=\\\"0088\\\">21382183120983</cbc:ID>\\n            </cac:StandardItemIdentification>\\n            <cac:OriginCountry>\\n                <cbc:IdentificationCode>NO</cbc:IdentificationCode>\\n            </cac:OriginCountry>\\n            <cac:CommodityClassification>\\n                <cbc:ItemClassificationCode listID=\\\"SRV\\\">09348023</cbc:ItemClassificationCode>\\n            </cac:CommodityClassification>\\n            <cac:ClassifiedTaxCategory>\\n                <cbc:ID>S</cbc:ID>\\n                <cbc:Percent>21.0</cbc:Percent>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:ClassifiedTaxCategory>\\n        </cac:Item>\\n        <cac:Price>\\n            <cbc:PriceAmount currencyID=\\\"EUR\\\">123.45</cbc:PriceAmount>\\n        </cac:Price>\\n    </cac:InvoiceLine>\\n</Invoice>\"\n  }\n}"
														},
														{
															"name": "Authentication failure",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-C5-REPORTING",
																		"value": "false",
																		"description": "If true, the API will report the submission to C5 after the document was sent to the Buyer. Only used for Singapore."
																	},
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "file",
																			"description": "(Required) The invoice or credit note in UBL XML format",
																			"type": "file",
																			"src": []
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoices/ubl-submissions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoices",
																		"ubl-submissions"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "{transmissionId}",
											"item": [
												{
													"name": "ubl",
													"item": [
														{
															"name": "Get an Invoice/Credit Note in UBL format",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/xml"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoices/:transmissionId/ubl",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoices",
																		":transmissionId",
																		"ubl"
																	],
																	"variable": [
																		{
																			"key": "transmissionId",
																			"value": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Get the content of a sent or received Invoice/Credit Note in UBL format"
															},
															"response": [
																{
																	"name": "Invoice/Credit Note UBL XML retrieved successfully",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/xml"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/invoices/:transmissionId/ubl",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"invoices",
																				":transmissionId",
																				"ubl"
																			],
																			"variable": [
																				{
																					"key": "transmissionId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "xml",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/xml"
																		}
																	],
																	"cookie": [],
																	"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element><Invoice xmlns:cac=\"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\"\n         xmlns:cbc=\"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\"\n         xmlns=\"urn:oasis:names:specification:ubl:schema:xsd:Invoice-2\">\n    <cbc:CustomizationID>urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0</cbc:CustomizationID>\n    <cbc:ProfileID>urn:fdc:peppol.eu:2017:poacc:billing:01:1.0</cbc:ProfileID>\n    <cbc:ID>pbe000512-8</cbc:ID>\n    <cbc:IssueDate>2022-05-19</cbc:IssueDate>\n    <cbc:DueDate>2022-06-19</cbc:DueDate>\n    <cbc:InvoiceTypeCode>380</cbc:InvoiceTypeCode>\n    <cbc:DocumentCurrencyCode>EUR</cbc:DocumentCurrencyCode>\n    <cbc:AccountingCost>4025:123:4343</cbc:AccountingCost>\n    <cbc:BuyerReference>0150abc</cbc:BuyerReference>\n    <cac:OrderReference>\n        <cbc:ID>test-ademico-001</cbc:ID>\n        <cbc:SalesOrderID>test-ademico-001</cbc:SalesOrderID>\n    </cac:OrderReference>\n    <cac:AdditionalDocumentReference>\n        <cbc:ID>invoice1</cbc:ID>\n        <cac:Attachment>\n            <cbc:EmbeddedDocumentBinaryObject mimeCode=\"application/pdf\" filename=\"invoice.pdf\">\n               dGhpcyBpcyB0aGUgcGRmIGludm9pY2UgYmFzZTY0IGVuY29kZWQ=\n            </cbc:EmbeddedDocumentBinaryObject>\n        </cac:Attachment>\n    </cac:AdditionalDocumentReference>\n    <cac:AccountingSupplierParty>\n        <cac:Party>\n            <cbc:EndpointID schemeID=\"0208\">0552912569</cbc:EndpointID>\n            <cac:PartyIdentification>\n                <cbc:ID schemeID=\"0208\">0552912569</cbc:ID>\n            </cac:PartyIdentification>\n            <cac:PartyName>\n                <cbc:Name>Ademico Software</cbc:Name>\n            </cac:PartyName>\n            <cac:PostalAddress>\n                <cbc:StreetName>My street, my number</cbc:StreetName>\n                <cbc:CityName>Leuven</cbc:CityName>\n                <cbc:PostalZone>3010</cbc:PostalZone>\n                <cac:Country>\n                    <cbc:IdentificationCode>BE</cbc:IdentificationCode>\n                </cac:Country>\n            </cac:PostalAddress>\n            <cac:PartyTaxScheme>\n                <cbc:CompanyID>BE0552912569</cbc:CompanyID>\n                <cac:TaxScheme>\n                    <cbc:ID>VAT</cbc:ID>\n                </cac:TaxScheme>\n            </cac:PartyTaxScheme>\n            <cac:PartyLegalEntity>\n                <cbc:RegistrationName>Ademico Software</cbc:RegistrationName>\n                <cbc:CompanyID schemeID=\"0208\">0552912569</cbc:CompanyID>\n            </cac:PartyLegalEntity>\n            <cac:Contact>\n                <cbc:ElectronicMail>info@ademico-software.com</cbc:ElectronicMail>\n            </cac:Contact>\n        </cac:Party>\n    </cac:AccountingSupplierParty>\n\n    <cac:AccountingCustomerParty>\n        <cac:Party>\n            <cbc:EndpointID schemeID=\"0208\">0465105397</cbc:EndpointID>\n            <cac:PartyIdentification>\n                <cbc:ID schemeID=\"0208\">0465105397</cbc:ID>\n            </cac:PartyIdentification>\n            <cac:PartyName>\n                <cbc:Name>NicolaasJanssens</cbc:Name>\n            </cac:PartyName>\n            <cac:PostalAddress>\n                <cbc:StreetName>Simon Bolivarlaan</cbc:StreetName>\n                <cbc:CityName>Brussel</cbc:CityName>\n                <cbc:PostalZone>1000</cbc:PostalZone>\n                <cac:Country>\n                    <cbc:IdentificationCode>BE</cbc:IdentificationCode>\n                </cac:Country>\n            </cac:PostalAddress>\n            <cac:PartyTaxScheme>\n                <cbc:CompanyID>BE0465105397</cbc:CompanyID>\n                <cac:TaxScheme>\n                    <cbc:ID>VAT</cbc:ID>\n                </cac:TaxScheme>\n            </cac:PartyTaxScheme>\n            <cac:PartyLegalEntity>\n                <cbc:RegistrationName>NicolaasJanssens</cbc:RegistrationName>\n                <cbc:CompanyID>0465105397</cbc:CompanyID>\n            </cac:PartyLegalEntity>\n            <cac:Contact>\n                <cbc:ElectronicMail>nicolaas.janssens@bosa.fgov.be</cbc:ElectronicMail>\n            </cac:Contact>\n        </cac:Party>\n    </cac:AccountingCustomerParty>\n    <cac:Delivery>\n        <cbc:ActualDeliveryDate>2017-11-01</cbc:ActualDeliveryDate>\n        <cac:DeliveryLocation>\n            <cbc:ID schemeID=\"0088\">9483759475923478</cbc:ID>\n            <cac:Address>\n                <cbc:StreetName>Delivery street 2</cbc:StreetName>\n                <cbc:AdditionalStreetName>Building 56</cbc:AdditionalStreetName>\n                <cbc:CityName>Stockholm</cbc:CityName>\n                <cbc:PostalZone>21234</cbc:PostalZone>\n                <cac:Country>\n                    <cbc:IdentificationCode>SE</cbc:IdentificationCode>\n                </cac:Country>\n            </cac:Address>\n        </cac:DeliveryLocation>\n        <cac:DeliveryParty>\n            <cac:PartyName>\n                <cbc:Name>Delivery party Name</cbc:Name>\n            </cac:PartyName>\n        </cac:DeliveryParty>\n    </cac:Delivery>\n    <cac:PaymentMeans>\n        <cbc:PaymentMeansCode name=\"Credit transfer\">30</cbc:PaymentMeansCode>\n        <cbc:PaymentID>Snippet1</cbc:PaymentID>\n        <cac:PayeeFinancialAccount>\n            <cbc:ID>IBAN32423940</cbc:ID>\n            <cbc:Name>AccountName</cbc:Name>\n            <cac:FinancialInstitutionBranch>\n                <cbc:ID>BIC324098</cbc:ID>\n            </cac:FinancialInstitutionBranch>\n        </cac:PayeeFinancialAccount>\n    </cac:PaymentMeans>\n    <cac:PaymentTerms>\n        <cbc:Note>Payment within 10 days, 2% discount</cbc:Note>\n    </cac:PaymentTerms>\n    <cac:AllowanceCharge>\n        <cbc:ChargeIndicator>true</cbc:ChargeIndicator>\n        <cbc:AllowanceChargeReason>Insurance</cbc:AllowanceChargeReason>\n        <cbc:Amount currencyID=\"EUR\">10</cbc:Amount>\n        <cac:TaxCategory>\n            <cbc:ID>E</cbc:ID>\n            <cbc:Percent>0</cbc:Percent>\n            <cac:TaxScheme>\n                <cbc:ID>VAT</cbc:ID>\n            </cac:TaxScheme>\n        </cac:TaxCategory>\n    </cac:AllowanceCharge>\n    <cac:TaxTotal>\n        <cbc:TaxAmount currencyID=\"EUR\">311.09</cbc:TaxAmount>\n        <cac:TaxSubtotal>\n            <cbc:TaxableAmount currencyID=\"EUR\">1481.4</cbc:TaxableAmount>\n            <cbc:TaxAmount currencyID=\"EUR\">311.09</cbc:TaxAmount>\n            <cac:TaxCategory>\n                <cbc:ID>S</cbc:ID>\n                <cbc:Percent>21.0</cbc:Percent>\n                <cac:TaxScheme>\n                    <cbc:ID>VAT</cbc:ID>\n                </cac:TaxScheme>\n            </cac:TaxCategory>\n        </cac:TaxSubtotal>\n        <cac:TaxSubtotal>\n            <cbc:TaxableAmount currencyID=\"EUR\">30</cbc:TaxableAmount>\n            <cbc:TaxAmount currencyID=\"EUR\">0</cbc:TaxAmount>\n            <cac:TaxCategory>\n                <cbc:ID>E</cbc:ID>\n                <cbc:Percent>0</cbc:Percent>\n                <cbc:TaxExemptionReasonCode>VATEX-EU-F</cbc:TaxExemptionReasonCode>\n                <cac:TaxScheme>\n                    <cbc:ID>VAT</cbc:ID>\n                </cac:TaxScheme>\n            </cac:TaxCategory>\n        </cac:TaxSubtotal>\n    </cac:TaxTotal>\n    <cac:LegalMonetaryTotal>\n        <cbc:LineExtensionAmount currencyID=\"EUR\">1501.4</cbc:LineExtensionAmount>\n        <cbc:TaxExclusiveAmount currencyID=\"EUR\">1511.4</cbc:TaxExclusiveAmount>\n        <cbc:TaxInclusiveAmount currencyID=\"EUR\">1822.49</cbc:TaxInclusiveAmount>\n        <cbc:ChargeTotalAmount currencyID=\"EUR\">10</cbc:ChargeTotalAmount>\n        <cbc:PayableAmount currencyID=\"EUR\">1822.49</cbc:PayableAmount>\n    </cac:LegalMonetaryTotal>\n\n    <cac:InvoiceLine>\n        <cbc:ID>1</cbc:ID>\n        <cbc:InvoicedQuantity unitCode=\"DAY\">2</cbc:InvoicedQuantity>\n        <cbc:LineExtensionAmount currencyID=\"EUR\">20</cbc:LineExtensionAmount>\n        <cbc:AccountingCost>Consulting Fees</cbc:AccountingCost>\n        <cac:OrderLineReference>\n            <cbc:LineID>test-ademico-001</cbc:LineID>\n        </cac:OrderLineReference>\n        <cac:Item>\n            <cbc:Description>TEST 0%</cbc:Description>\n            <cbc:Name>TEST 0%</cbc:Name>\n            <cac:StandardItemIdentification>\n                <cbc:ID schemeID=\"0088\">21382183120983</cbc:ID>\n            </cac:StandardItemIdentification>\n            <cac:OriginCountry>\n                <cbc:IdentificationCode>NO</cbc:IdentificationCode>\n            </cac:OriginCountry>\n            <cac:CommodityClassification>\n                <cbc:ItemClassificationCode listID=\"SRV\">09348023</cbc:ItemClassificationCode>\n            </cac:CommodityClassification>\n            <cac:ClassifiedTaxCategory>\n                <cbc:ID>E</cbc:ID>\n                <cbc:Percent>0</cbc:Percent>\n                <cac:TaxScheme>\n                    <cbc:ID>VAT</cbc:ID>\n                </cac:TaxScheme>\n            </cac:ClassifiedTaxCategory>\n        </cac:Item>\n        <cac:Price>\n            <cbc:PriceAmount currencyID=\"EUR\">10</cbc:PriceAmount>\n        </cac:Price>\n    </cac:InvoiceLine>\n    <cac:InvoiceLine>\n        <cbc:ID>2</cbc:ID>\n        <cbc:InvoicedQuantity unitCode=\"DAY\">12</cbc:InvoicedQuantity>\n        <cbc:LineExtensionAmount currencyID=\"EUR\">1481.4</cbc:LineExtensionAmount>\n        <cac:OrderLineReference>\n            <cbc:LineID>test-ademico-001</cbc:LineID>\n        </cac:OrderLineReference>\n        <cac:Item>\n            <cbc:Description>Description 2</cbc:Description>\n            <cbc:Name>TEST 21%</cbc:Name>\n            <cac:StandardItemIdentification>\n                <cbc:ID schemeID=\"0088\">21382183120983</cbc:ID>\n            </cac:StandardItemIdentification>\n            <cac:OriginCountry>\n                <cbc:IdentificationCode>NO</cbc:IdentificationCode>\n            </cac:OriginCountry>\n            <cac:CommodityClassification>\n                <cbc:ItemClassificationCode listID=\"SRV\">09348023</cbc:ItemClassificationCode>\n            </cac:CommodityClassification>\n            <cac:ClassifiedTaxCategory>\n                <cbc:ID>S</cbc:ID>\n                <cbc:Percent>21.0</cbc:Percent>\n                <cac:TaxScheme>\n                    <cbc:ID>VAT</cbc:ID>\n                </cac:TaxScheme>\n            </cac:ClassifiedTaxCategory>\n        </cac:Item>\n        <cac:Price>\n            <cbc:PriceAmount currencyID=\"EUR\">123.45</cbc:PriceAmount>\n        </cac:Price>\n    </cac:InvoiceLine>\n</Invoice></element>"
																},
																{
																	"name": "Error retrieving the Invoice/Credit Note UBL XML ",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/xml;charset=UTF-8"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/invoices/:transmissionId/ubl",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"invoices",
																				":transmissionId",
																				"ubl"
																			],
																			"variable": [
																				{
																					"key": "transmissionId"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "xml",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/xml;charset=UTF-8"
																		}
																	],
																	"cookie": [],
																	"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ApplicationMessage>\n\t<code>DOCUMENT_NOT_FOUND</code>\n\t<message>Could not find invoice/credit note with transmission id [803828d52d4911ed85f512ef9c5638d0@ademico-software.com]</message>\n</ApplicationMessage>"
																},
																{
																	"name": "Authentication failure",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/xml;charset=UTF-8"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/invoices/:transmissionId/ubl",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"invoices",
																				":transmissionId",
																				"ubl"
																			],
																			"variable": [
																				{
																					"key": "transmissionId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "xml",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/xml;charset=UTF-8"
																		}
																	],
																	"cookie": [],
																	"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>\n  <code>SECURITY_ERROR</code>\n  <message>Invalid authentication credentials</message>\n</element>"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "sending-notifications",
											"item": [
												{
													"name": "{notificationId}",
													"item": [
														{
															"name": "Deprecated: use the Notifications API api/peppol/v1/notifications. Consume a sending notification to remove it from the queue",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoices/sending-notifications/:notificationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoices",
																		"sending-notifications",
																		":notificationId"
																	],
																	"variable": [
																		{
																			"key": "notificationId",
																			"value": "7",
																			"description": "(Required) The id of the notification we want to consume"
																		}
																	]
																},
																"description": "The notification will not be retrieved anymore when getting the notifications list"
															},
															"response": [
																{
																	"name": "Notification consumed successfully",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/invoices/sending-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"invoices",
																				"sending-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Error consuming notification",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/invoices/sending-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"invoices",
																				"sending-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error consuming notification\"\n}"
																},
																{
																	"name": "Authentication failure",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/invoices/sending-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"invoices",
																				"sending-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Deprecated: use the Notifications API api/peppol/v1/notifications. Get the list of notifications after sending an Invoice/Credit Note to the Buyer",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/invoices/sending-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&eventType=INVOICE_RESPONSE_RECEIVED&peppolDocumentType=INVOICE&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"invoices",
																"sending-notifications"
															],
															"query": [
																{
																	"key": "transmissionId",
																	"value": "803828d52d4911ed85f512ef9c5638d0",
																	"description": "The transmission id of a sent Invoice/Credit Note to the Buyer"
																},
																{
																	"key": "documentId",
																	"value": "pbe000512-1",
																	"description": "The document id of a sent Invoice/Credit Note to the Buyer"
																},
																{
																	"key": "eventType",
																	"value": "INVOICE_RESPONSE_RECEIVED",
																	"description": "The notification event type"
																},
																{
																	"key": "peppolDocumentType",
																	"value": "INVOICE",
																	"description": "The document type: INVOICE or CREDIT_NOTE"
																},
																{
																	"key": "sender",
																	"value": "0208:0552912569",
																	"description": "The sender of the notification"
																},
																{
																	"key": "receiver",
																	"value": "0208:0552912569",
																	"description": "The receiver of the notification"
																},
																{
																	"key": "startDate",
																	"value": "2023-06-25",
																	"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																},
																{
																	"key": "startDateTime",
																	"value": "2023-07-25T11:03:26.688Z",
																	"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																},
																{
																	"key": "endDate",
																	"value": "2023-06-26",
																	"description": "The end date time of the period to filter the notifications"
																},
																{
																	"key": "endDateTime",
																	"value": "2023-07-29T11:03:26.688Z",
																	"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "The starting page number from which we want to retrieve results. The first page is 0."
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "How many results we retrieve per page"
																}
															]
														},
														"description": "Use only for sent Invoices/Credit Notes. You get notified when the status of an Invoice/Credit Note changes. The following invoice status values are possible:<table><tr><th>Code</th><th>Description</th></tr><tr><td>QUEUED</td><td>Waiting to be sent to the Buyer</td></tr><tr><td>SENT</td><td>Acknowledged by the receiver Access Point C3</td></tr><tr><td>SEND_FAILED</td><td>Failed to send to the receiver's Access Point C3</td></tr></table>"
													},
													"response": [
														{
															"name": "Sending notifications retrieved successfully",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoices/sending-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&eventType=INVOICE_RESPONSE_RECEIVED&peppolDocumentType=INVOICE&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoices",
																		"sending-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a sent Invoice/Credit Note to the Buyer"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of a sent Invoice/Credit Note to the Buyer"
																		},
																		{
																			"key": "eventType",
																			"value": "INVOICE_RESPONSE_RECEIVED",
																			"description": "The notification event type"
																		},
																		{
																			"key": "peppolDocumentType",
																			"value": "INVOICE",
																			"description": "The document type: INVOICE or CREDIT_NOTE"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date time of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"pagination\": {\n    \"count\": 8,\n    \"page\": 0,\n    \"pageSize\": 10\n  },\n  \"notifications\": [\n    {\n      \"eventType\": \"DOCUMENT_SENT\",\n      \"notificationId\": 1,\n      \"transmissionId\": \"7c6b16d3303b11eda7239a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-1\",\n      \"documentStatus\": \"SENT\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\",\n      \"notificationDate\": \"2022-09-09T13:09:59.524\",\n      \"invoiceResponse\": null,\n      \"details\": []\n    },\n    {\n      \"eventType\": \"DOCUMENT_SEND_FAILED\",\n      \"notificationId\": 2,\n      \"transmissionId\": \"7d62bd44303b11eda7239a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-2\",\n      \"documentStatus\": \"SEND_FAILED\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\",\n      \"notificationDate\": \"2022-09-09T13:09:59.524\",\n      \"invoiceResponse\": null,\n      \"details\": [\n        {\n          \"code\": \"DOCUMENT_TRANSMISSION_ERROR\",\n          \"message\": \"Error dispatching the message to http://receiver:8080/msh\"\n        },\n        {\n          \"code\": \"DOCUMENT_TRANSMISSION_ERROR\",\n          \"message\": \"Error2\"\n        }\n      ]\n    },\n    {\n      \"eventType\": \"DOCUMENT_SENT\",\n      \"notificationId\": 3,\n      \"transmissionId\": \"7df168b5303b11eda7239a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-3\",\n      \"documentStatus\": \"SENT\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\",\n      \"notificationDate\": \"2022-09-09T13:09:59.524\",\n      \"invoiceResponse\": null,\n      \"details\": []\n    },\n    {\n      \"eventType\": \"MLR_RECEIVED\",\n      \"notificationId\": 4,\n      \"transmissionId\": \"7df168b5303b11eda7239a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-3\",\n      \"documentStatus\": \"REJECTED\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\",\n      \"notificationDate\": \"2022-09-09T13:09:59.524\",\n      \"invoiceResponse\": null,\n      \"details\": [\n        {\n          \"code\": \"ERROR\",\n          \"message\": \"/Invoice[1]:[BR-CO-15]-Invoice total amount with VAT (BT-112) = Invoice total amount without VAT (BT-109) + Invoice total VAT amount (BT-110).\"\n        },\n        {\n          \"code\": \"ERROR\",\n          \"message\": \"/Invoice[1]/TaxTotal[1]/TaxSubtotal[1]/TaxCategory[1]:[BR-S-08]-For each different value of VAT category rate (BT-119) where the VAT category code (BT-118) is \\\"Standard rated\\\", the VAT category taxable amount (BT-116) in a VAT breakdown (BG-23) shall equal the sum of Invoice line net amounts (BT-131) plus the sum of document level charge amounts (BT-99) minus the sum of document level allowance amounts (BT-92) where the VAT category code (BT-151, BT-102, BT-95) is \\\"Standard rated\\\" and the VAT rate (BT-152, BT-103, BT-96) equals the VAT category rate (BT-119).\"\n        },\n        {\n          \"code\": \"ERROR\",\n          \"message\": \"/Invoice[1]/LegalMonetaryTotal[1]:[BR-CO-13]-Invoice total amount without VAT (BT-109) = Î£ Invoice line net amount (BT-131) - Sum of allowances on document level (BT-107) + Sum of charges on document level (BT-108).\"\n        },\n        {\n          \"code\": \"ERROR\",\n          \"message\": \"/Invoice[1]/InvoiceLine[1]/Item[1]/ClassifiedTaxCategory[1]:[BR-S-05]-In an Invoice line (BG-25) where the Invoiced item VAT category code (BT-151) is \\\"Standard rated\\\" the Invoiced item VAT rate (BT-152) shall be greater than zero.\"\n        }\n      ]\n    },\n    {\n      \"eventType\": \"DOCUMENT_SENT\",\n      \"notificationId\": 5,\n      \"transmissionId\": \"7ec22637303b11eda7239a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-4\",\n      \"documentStatus\": \"SENT\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\",\n      \"notificationDate\": \"2022-09-09T13:09:59.524\",\n      \"invoiceResponse\": null,\n      \"details\": []\n    },\n    {\n      \"eventType\": \"INVOICE_RESPONSE_RECEIVED\",\n      \"notificationId\": 6,\n      \"transmissionId\": \"7ec22637303b11eda7239a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-4\",\n      \"documentStatus\": \"ACCEPTED\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\",\n      \"notificationDate\": \"2022-09-09T13:09:59.524\",\n      \"invoiceResponse\": {\n        \"invoiceTransmissionId\": \"7ec22637303b11eda7239a0197b30fe2@ademico-software.com\",\n        \"responseCode\": \"AP\",\n        \"note\": null,\n        \"effectiveDate\": \"2022-05-22\",\n        \"invoiceClarifications\": []\n      },\n      \"details\": []\n    },\n    {\n      \"eventType\": \"DOCUMENT_SENT\",\n      \"notificationId\": 7,\n      \"transmissionId\": \"7f8687a9303b11eda7239a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-5\",\n      \"documentStatus\": \"SENT\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\",\n      \"notificationDate\": \"2022-09-09T13:09:59.524\",\n      \"invoiceResponse\": null,\n      \"details\": []\n    },\n    {\n      \"eventType\": \"INVOICE_RESPONSE_RECEIVED\",\n      \"notificationId\": 8,\n      \"transmissionId\": \"7f8687a9303b11eda7239a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-5\",\n      \"documentStatus\": \"REJECTED\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\",\n      \"notificationDate\": \"2022-09-09T13:09:59.524\",\n      \"invoiceResponse\": {\n        \"invoiceTransmissionId\": \"7f8687a9303b11eda7239a0197b30fe2@ademico-software.com\",\n        \"responseCode\": \"RE\",\n        \"note\": \"A note providing more details\",\n        \"effectiveDate\": \"2022-08-24\",\n        \"invoiceClarifications\": [\n          {\n            \"clarificationType\": \"OPStatusReason\",\n            \"clarificationCode\": \"LEG\",\n            \"clarification\": \"VAT Reference not found\"\n          },\n          {\n            \"clarificationType\": \"OPStatusAction\",\n            \"clarificationCode\": \"CNF\",\n            \"clarification\": \"Credit fully\"\n          },\n          {\n            \"clarificationType\": \"OPStatusAction\",\n            \"clarificationCode\": \"NIN\",\n            \"clarification\": \"Issue new invoice\"\n          }\n        ]\n      },\n      \"details\": []\n    }\n  ]\n}"
														},
														{
															"name": "Error getting the sending notifications",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoices/sending-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&eventType=INVOICE_RESPONSE_RECEIVED&peppolDocumentType=INVOICE&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoices",
																		"sending-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a sent Invoice/Credit Note to the Buyer"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of a sent Invoice/Credit Note to the Buyer"
																		},
																		{
																			"key": "eventType",
																			"value": "INVOICE_RESPONSE_RECEIVED",
																			"description": "The notification event type"
																		},
																		{
																			"key": "peppolDocumentType",
																			"value": "INVOICE",
																			"description": "The document type: INVOICE or CREDIT_NOTE"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date time of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error getting notifications\"\n}"
														},
														{
															"name": "Authentication failure",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoices/sending-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&eventType=INVOICE_RESPONSE_RECEIVED&peppolDocumentType=INVOICE&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoices",
																		"sending-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a sent Invoice/Credit Note to the Buyer"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of a sent Invoice/Credit Note to the Buyer"
																		},
																		{
																			"key": "eventType",
																			"value": "INVOICE_RESPONSE_RECEIVED",
																			"description": "The notification event type"
																		},
																		{
																			"key": "peppolDocumentType",
																			"value": "INVOICE",
																			"description": "The document type: INVOICE or CREDIT_NOTE"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date time of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "receiving-notifications",
											"item": [
												{
													"name": "{notificationId}",
													"item": [
														{
															"name": "Deprecated: use the Notifications API api/peppol/v1/notifications. Consume a receiving notification to remove it from the queue",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoices/receiving-notifications/:notificationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoices",
																		"receiving-notifications",
																		":notificationId"
																	],
																	"variable": [
																		{
																			"key": "notificationId",
																			"value": "7",
																			"description": "(Required) The id of the notification we want to consume"
																		}
																	]
																},
																"description": "The notification will not be retrieved anymore when getting the notifications list"
															},
															"response": [
																{
																	"name": "Notification consumed successfully",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/invoices/receiving-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"invoices",
																				"receiving-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Error consuming notification",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/invoices/receiving-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"invoices",
																				"receiving-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error consuming notification\"\n}"
																},
																{
																	"name": "Authentication failure",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/invoices/receiving-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"invoices",
																				"receiving-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Deprecated: use the Notifications API api/peppol/v1/notifications. Get the list of notifications when receiving an Invoice/Credit Note from the Seller",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/invoices/receiving-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&peppolDocumentType=INVOICE&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"invoices",
																"receiving-notifications"
															],
															"query": [
																{
																	"key": "transmissionId",
																	"value": "803828d52d4911ed85f512ef9c5638d0",
																	"description": "The transmission id of a received Invoice/Credit Note from the Seller"
																},
																{
																	"key": "documentId",
																	"value": "pbe000512-1",
																	"description": "The document id of a received Invoice/Credit Note from the Seller"
																},
																{
																	"key": "peppolDocumentType",
																	"value": "INVOICE",
																	"description": "The document type: INVOICE or CREDIT_NOTE"
																},
																{
																	"key": "sender",
																	"value": "0208:0552912569",
																	"description": "The sender of the notification"
																},
																{
																	"key": "receiver",
																	"value": "0208:0552912569",
																	"description": "The receiver of the notification"
																},
																{
																	"key": "startDate",
																	"value": "2023-06-25",
																	"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																},
																{
																	"key": "startDateTime",
																	"value": "2023-07-25T11:03:26.688Z",
																	"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																},
																{
																	"key": "endDate",
																	"value": "2023-06-26",
																	"description": "The end date of the period to filter the notifications"
																},
																{
																	"key": "endDateTime",
																	"value": "2023-07-29T11:03:26.688Z",
																	"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "The starting page number from which we want to retrieve results. The first page is 0."
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "How many results we retrieve per page"
																}
															]
														},
														"description": "You get notified when your receive an Invoice/Credit Note"
													},
													"response": [
														{
															"name": "Receiving notifications retrieved successfully",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoices/receiving-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&peppolDocumentType=INVOICE&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoices",
																		"receiving-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a received Invoice/Credit Note from the Seller"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of a received Invoice/Credit Note from the Seller"
																		},
																		{
																			"key": "peppolDocumentType",
																			"value": "INVOICE",
																			"description": "The document type: INVOICE or CREDIT_NOTE"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"pagination\": {\n    \"count\": 5,\n    \"page\": 0,\n    \"pageSize\": 10\n  },\n  \"notifications\": [\n    {\n      \"eventType\": \"DOCUMENT_RECEIVED\",\n      \"notificationId\": 9,\n      \"transmissionId\": \"23d58fa3303d11ed94af9a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-6\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0465105397\",\n      \"receiver\": \"0208:0552912569\",\n      \"receivedDate\": \"2022-09-09T13:09:59.524\"\n    },\n    {\n      \"eventType\": \"DOCUMENT_RECEIVED\",\n      \"notificationId\": 10,\n      \"transmissionId\": \"24c60a25303d11ed94af9a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-7\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0465105397\",\n      \"receiver\": \"0208:0552912569\",\n      \"receivedDate\": \"2022-09-09T13:09:59.524\"\n    },\n    {\n      \"eventType\": \"DOCUMENT_RECEIVED\",\n      \"notificationId\": 11,\n      \"transmissionId\": \"25777fd7303d11ed94af9a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-8\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0465105397\",\n      \"receiver\": \"0208:0552912569\",\n      \"receivedDate\": \"2022-09-09T13:09:59.524\"\n    },\n    {\n      \"eventType\": \"DOCUMENT_RECEIVED\",\n      \"notificationId\": 13,\n      \"transmissionId\": \"26b2befa303d11ed94af9a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-9\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0465105397\",\n      \"receiver\": \"0208:0552912569\",\n      \"receivedDate\": \"2022-09-09T13:09:59.524\"\n    },\n    {\n      \"eventType\": \"DOCUMENT_RECEIVED\",\n      \"notificationId\": 15,\n      \"transmissionId\": \"27cb0ccd303d11ed94af9a0197b30fe2@ademico-software.com\",\n      \"documentId\": \"pbe000512-10\",\n      \"peppolDocumentType\": \"INVOICE\",\n      \"sender\": \"0208:0465105397\",\n      \"receiver\": \"0208:0552912569\",\n      \"receivedDate\": \"2022-09-09T13:09:59.524\"\n    }\n  ]\n}"
														},
														{
															"name": "Error getting the receiving notifications",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoices/receiving-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&peppolDocumentType=INVOICE&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoices",
																		"receiving-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a received Invoice/Credit Note from the Seller"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of a received Invoice/Credit Note from the Seller"
																		},
																		{
																			"key": "peppolDocumentType",
																			"value": "INVOICE",
																			"description": "The document type: INVOICE or CREDIT_NOTE"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error getting notifications\"\n}"
														},
														{
															"name": "Authentication failure",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoices/receiving-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&peppolDocumentType=INVOICE&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoices",
																		"receiving-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a received Invoice/Credit Note from the Seller"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of a received Invoice/Credit Note from the Seller"
																		},
																		{
																			"key": "peppolDocumentType",
																			"value": "INVOICE",
																			"description": "The document type: INVOICE or CREDIT_NOTE"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "invoice-responses",
									"item": [
										{
											"name": "sending-notifications",
											"item": [
												{
													"name": "{notificationId}",
													"item": [
														{
															"name": "Deprecated: use the Notifications API api/peppol/v1/notifications. Consume a notification to remove it from the queue",
															"request": {
																"auth": {
																	"type": "basic",
																	"basic": [
																		{
																			"key": "username",
																			"value": "{{basicAuthUsername}}",
																			"type": "string"
																		},
																		{
																			"key": "password",
																			"value": "{{basicAuthPassword}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoice-responses/sending-notifications/:notificationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoice-responses",
																		"sending-notifications",
																		":notificationId"
																	],
																	"variable": [
																		{
																			"key": "notificationId",
																			"value": "7",
																			"description": "(Required) The id of the notification we want to consume"
																		}
																	]
																},
																"description": "The notification will not be retrieved anymore when getting the next time the notifications list"
															},
															"response": [
																{
																	"name": "Notification consumed successfully",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/invoice-responses/sending-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"invoice-responses",
																				"sending-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Error consuming notification",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/invoice-responses/sending-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"invoice-responses",
																				"sending-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error consuming notification\"\n}"
																},
																{
																	"name": "Authentication failure",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/invoice-responses/sending-notifications/:notificationId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"invoice-responses",
																				"sending-notifications",
																				":notificationId"
																			],
																			"variable": [
																				{
																					"key": "notificationId"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Deprecated: use the Notifications API api/peppol/v1/notifications. Get the list of notifications after sending an Invoice Response to the Seller",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/invoice-responses/sending-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&eventType=INVOICE_RESPONSE_SENT&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"invoice-responses",
																"sending-notifications"
															],
															"query": [
																{
																	"key": "transmissionId",
																	"value": "803828d52d4911ed85f512ef9c5638d0",
																	"description": "The transmission id of a previously sent Invoice Response to the Seller"
																},
																{
																	"key": "documentId",
																	"value": "pbe000512-1",
																	"description": "The document id of the Invoice/Credit Note for which we have sent an Invoice Response"
																},
																{
																	"key": "eventType",
																	"value": "INVOICE_RESPONSE_SENT",
																	"description": "The notification event type: INVOICE_RESPONSE_SENT or INVOICE_RESPONSE_SEND_FAILED"
																},
																{
																	"key": "sender",
																	"value": "0208:0552912569",
																	"description": "The sender of the notification"
																},
																{
																	"key": "receiver",
																	"value": "0208:0552912569",
																	"description": "The receiver of the notification"
																},
																{
																	"key": "startDate",
																	"value": "2023-06-25",
																	"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																},
																{
																	"key": "startDateTime",
																	"value": "2023-07-25T11:03:26.688Z",
																	"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																},
																{
																	"key": "endDate",
																	"value": "2023-06-26",
																	"description": "The end date of the period to filter the notifications"
																},
																{
																	"key": "endDateTime",
																	"value": "2023-07-29T11:03:26.688Z",
																	"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "The starting page number from which we want to retrieve results. The first page is 0."
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "How many results we retrieve per page"
																}
															]
														},
														"description": "You get notified if the Invoice Response has been sent successfully to the Seller or it failed to be sent"
													},
													"response": [
														{
															"name": "Sending notifications retrieved successfully",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoice-responses/sending-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&eventType=INVOICE_RESPONSE_SENT&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoice-responses",
																		"sending-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a previously sent Invoice Response to the Seller"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of the Invoice/Credit Note for which we have sent an Invoice Response"
																		},
																		{
																			"key": "eventType",
																			"value": "INVOICE_RESPONSE_SENT",
																			"description": "The notification event type: INVOICE_RESPONSE_SENT or INVOICE_RESPONSE_SEND_FAILED"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"pagination\": {\n    \"count\": 2,\n    \"page\": 0,\n    \"pageSize\": 10\n  },\n  \"notifications\": [\n    {\n      \"eventType\": \"INVOICE_RESPONSE_SENT\",\n      \"notificationId\": 12,\n      \"transmissionId\": \"cfbc5a48301411ed9f329232d501035b@ademico-software.com\",\n      \"documentId\": \"pbe000512-8\",\n      \"status\": \"SENT\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\"\n    },\n    {\n      \"eventType\": \"INVOICE_RESPONSE_SEND_FAILED\",\n      \"notificationId\": 2,\n      \"transmissionId\": \"716f7d19301d11ed82649232d501035b@ademico-software.com\",\n      \"documentId\": \"pbe000512-8\",\n      \"status\": \"SEND_FAILED\",\n      \"sender\": \"0208:0552912569\",\n      \"receiver\": \"0208:0465105397\",\n      \"details\": [\n        {\n          \"code\": \"DOCUMENT_TRANSMISSION_ERROR\",\n          \"message\": \"Error dispatching the message to http://receiver:8080/msh\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Error getting the sending notifications",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoice-responses/sending-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&eventType=INVOICE_RESPONSE_SENT&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoice-responses",
																		"sending-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a previously sent Invoice Response to the Seller"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of the Invoice/Credit Note for which we have sent an Invoice Response"
																		},
																		{
																			"key": "eventType",
																			"value": "INVOICE_RESPONSE_SENT",
																			"description": "The notification event type: INVOICE_RESPONSE_SENT or INVOICE_RESPONSE_SEND_FAILED"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error getting notifications\"\n}"
														},
														{
															"name": "Authentication failure",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/invoice-responses/sending-notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&eventType=INVOICE_RESPONSE_SENT&sender=0208:0552912569&receiver=0208:0552912569&startDate=2023-06-25&startDateTime=2023-07-25T11:03:26.688Z&endDate=2023-06-26&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"invoice-responses",
																		"sending-notifications"
																	],
																	"query": [
																		{
																			"key": "transmissionId",
																			"value": "803828d52d4911ed85f512ef9c5638d0",
																			"description": "The transmission id of a previously sent Invoice Response to the Seller"
																		},
																		{
																			"key": "documentId",
																			"value": "pbe000512-1",
																			"description": "The document id of the Invoice/Credit Note for which we have sent an Invoice Response"
																		},
																		{
																			"key": "eventType",
																			"value": "INVOICE_RESPONSE_SENT",
																			"description": "The notification event type: INVOICE_RESPONSE_SENT or INVOICE_RESPONSE_SEND_FAILED"
																		},
																		{
																			"key": "sender",
																			"value": "0208:0552912569",
																			"description": "The sender of the notification"
																		},
																		{
																			"key": "receiver",
																			"value": "0208:0552912569",
																			"description": "The receiver of the notification"
																		},
																		{
																			"key": "startDate",
																			"value": "2023-06-25",
																			"description": "The start date of the period to filter the notifications. To filter all notifications for a specific day E.g. `2023-06-25` use `startDate=2023-06-25` and `endDate=2023-06-26`"
																		},
																		{
																			"key": "startDateTime",
																			"value": "2023-07-25T11:03:26.688Z",
																			"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z`. `startDateTime` value has priority over `startDate`"
																		},
																		{
																			"key": "endDate",
																			"value": "2023-06-26",
																			"description": "The end date of the period to filter the notifications"
																		},
																		{
																			"key": "endDateTime",
																			"value": "2023-07-29T11:03:26.688Z",
																			"description": "The end date time of the period to filter the notifications. `endDateTime` has priority over `endDate`"
																		},
																		{
																			"key": "page",
																			"value": "0",
																			"description": "The starting page number from which we want to retrieve results. The first page is 0."
																		},
																		{
																			"key": "pageSize",
																			"value": "10",
																			"description": "How many results we retrieve per page"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Send the Invoice Response back to the Seller",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"invoiceTransmissionId\": \"803828d52d4911ed85f512ef9c5638d0\",\n  \"responseCode\": \"RE\",\n  \"note\": \"The invoice has been rejected\",\n  \"effectiveDate\": \"1992-06-09T19:08:06.379Z\",\n  \"invoiceClarifications\": [\n    {\n      \"clarificationCode\": \"LEG\",\n      \"clarificationType\": \"OPStatusReason\",\n      \"clarification\": \"VAT Reference not found\"\n    },\n    {\n      \"clarificationCode\": \"LEG\",\n      \"clarificationType\": \"OPStatusReason\",\n      \"clarification\": \"VAT Reference not found\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/peppol/v1/invoice-responses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"peppol",
														"v1",
														"invoice-responses"
													]
												},
												"description": "<p>Send the Invoice Response back to the Seller after we have received an invoice/credit note. The Invoice Response is scheduled in the queue to be sent to the Seller. You get notified either via pull or push mechanism when the Invoice Response has be received by the Seller.</p><p>An Invoice Response can be used to inform the Seller of the status of an invoice in the Buyer's approval and payment processes, based on the Buyer's business rules and/or a Seller/Buyer agreement.The following values can be used for the Invoice Response status codes:<table><tr><th>Code</th><th>Description</th></tr><tr><td>AB</td><td>Buyer acknowledges: Status is used when Buyer has received a readable invoice message that can be understood and submitted for processing by the Buyer.</td></tr><tr><td>IP</td><td>In process: Status is used when the processing of the Invoice has started in Buyers system.</td></tr><tr><td>UQ</td><td>Under query: Status is used when Buyer will not proceed to accept the Invoice without receiving additional information from the Seller.</td></tr><tr><td>CA</td><td>Conditionally accepted: Status is used when Buyer is accepting the Invoice under conditions stated in 'Status Reason' and proceed to pay accordingly unless disputed by Seller.</td></tr><tr><td>RE</td><td>Rejected: MLR reject or Invoice reject. Status is used only when the Buyer will not process the referenced Invoice any further. Buyer is rejecting this invoice but not necessarily the commercial transaction. Although it can be used also for rejection for commercial reasons (invoice not corresponding to delivery).</td></tr><tr><td>AP</td><td>Accepted: Status is used only when the Buyer has given a final approval of the invoice and the next step is payment.</td></tr><tr><td>PD</td><td>Paid: Fully paid or partially paid. When partially paid: Status is used together with Clarification Reason code PPD, only when the Buyer has initiated the payment of the invoice without having paid the accepted amount in full.</td></tr></table><p>You can find <a href=\"https://docs.peppol.eu/poacc/upgrade-3/profiles/63-invoiceresponse/#status-codes-1\" target=\"_blank\">here</a> more details about the Invoice Response status codes</p><p>Depending on the status code, a clarification may be needed to state the Buyer's reason for the status and/or any expected action from the Seller's side. The clarification may be given either as text (in Status Reason) or as code (in StatusReasonCode). The purpose of the clarification is to provide the Seller with structured information which enables him to partially or fully automate his processing. The clarifications are of two types:<ul><li>Reasons for the given status.</li><li>Actions that the Buyer requests from the Seller.</li></ul><p>The following values can be used for the clarification code reason(when clarificationType=<b>OPStatusReason</b>):</p><table><tr><th>Code</th><th>Description</th></tr><tr><td>NO</td><td>No issue</td></tr><tr><td>REF</td><td>References incorrect</td></tr><tr><td>LEG</td><td>Legal information incorrect</td></tr></tr><tr><td>REC</td><td>Receiver unknown</td></tr><tr><td>QUA</td><td>Item quality insufficient</td></tr><tr><td>DEL</td><td>Delivery proposed or provided is not acceptable</td></tr><tr><td>PRI</td><td>Prices incorrect</td></tr><tr><td>QTY</td><td>Quantity incorrect</td></tr><tr><td>ITM</td><td>Items incorrect</td></tr><tr><td>PAY</td><td>Payment terms incorrect</td></tr><tr><td>UNR</td><td>Not recognized</td></tr><tr><td>FIN</td><td>Finance incorrect</td></tr><tr><td>PPD</td><td>Partially Paid</td></tr><tr><td>OTH</td><td>Other</td></tr></table><p>The following values can be used for the clarification code reason(when clarificationType=<b>OPStatusAction</b>):</p><table><tr><th>Code</th><th>Description</th></tr><tr><td>NOA</td><td>No action required</td></tr><tr><td>PIN</td><td>Provide information</td></tr><tr><td>NIN</td><td>Issue new invoice</td></tr><tr><td>CNF</td><td>Credit fully</td></tr><tr><td>CNP</td><td>Credit partially</td></tr><tr><td>CNA</td><td>Credit the amount</td></tr><tr><td>OTH</td><td>Other</td></tr></table><p>You can find <a href=\"https://docs.peppol.eu/poacc/upgrade-3/profiles/63-invoiceresponse/#clarification\" target=\"_blank\">here</a> more details about the Invoice Response clarifications</p></p></p>"
											},
											"response": [
												{
													"name": "The Invoice Response has been scheduled in the queue to be sent to the Seller. You get notified either via pull or push mechanism when the Invoice Response has be received by the Seller.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"invoiceTransmissionId\": \"803828d52d4911ed85f512ef9c5638d0\",\n  \"responseCode\": \"RE\",\n  \"note\": \"The invoice has been rejected\",\n  \"effectiveDate\": \"1992-06-09T19:08:06.379Z\",\n  \"invoiceClarifications\": [\n    {\n      \"clarificationCode\": \"LEG\",\n      \"clarificationType\": \"OPStatusReason\",\n      \"clarification\": \"VAT Reference not found\"\n    },\n    {\n      \"clarificationCode\": \"LEG\",\n      \"clarificationType\": \"OPStatusReason\",\n      \"clarification\": \"VAT Reference not found\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/invoice-responses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"invoice-responses"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"transmissionId\": \"803828d52d4911ed85f512ef9c5638d0\",\n  \"documentId\": \"pbe000512-1\",\n  \"documentTypeEnum\": \"INVOICE\",\n  \"sender\": \"0208:0552912569\",\n  \"receiver\": \"0208:0465105397\",\n  \"sbdhInstanceIdentifier\": \"6b56b28947e511eda0b802bb4e4747f9\",\n  \"c5SubmissionResult\": {\n    \"status\": \"SCHEDULED\",\n    \"details\": []\n  }\n}"
												},
												{
													"name": "Error sending the Invoice Response to the Seller",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"invoiceTransmissionId\": \"803828d52d4911ed85f512ef9c5638d0\",\n  \"responseCode\": \"RE\",\n  \"note\": \"The invoice has been rejected\",\n  \"effectiveDate\": \"1992-06-09T19:08:06.379Z\",\n  \"invoiceClarifications\": [\n    {\n      \"clarificationCode\": \"LEG\",\n      \"clarificationType\": \"OPStatusReason\",\n      \"clarification\": \"VAT Reference not found\"\n    },\n    {\n      \"clarificationCode\": \"LEG\",\n      \"clarificationType\": \"OPStatusReason\",\n      \"clarification\": \"VAT Reference not found\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/invoice-responses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"invoice-responses"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error sending Invoice Response\"\n}"
												},
												{
													"name": "Authentication failure",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"invoiceTransmissionId\": \"803828d52d4911ed85f512ef9c5638d0\",\n  \"responseCode\": \"RE\",\n  \"note\": \"The invoice has been rejected\",\n  \"effectiveDate\": \"1992-06-09T19:08:06.379Z\",\n  \"invoiceClarifications\": [\n    {\n      \"clarificationCode\": \"LEG\",\n      \"clarificationType\": \"OPStatusReason\",\n      \"clarification\": \"VAT Reference not found\"\n    },\n    {\n      \"clarificationCode\": \"LEG\",\n      \"clarificationType\": \"OPStatusReason\",\n      \"clarification\": \"VAT Reference not found\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/invoice-responses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"invoice-responses"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "c5",
									"item": [
										{
											"name": "singapore",
											"item": [
												{
													"name": "iras",
													"item": [
														{
															"name": "sales",
															"item": [
																{
																	"name": "Send Sales Invoices/Credit Notes to IRAS.",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-SBDH-IDENTIFIER",
																				"value": "string",
																				"description": "If you provide a value, the API will set this value in the StandardBusinessDocumentHeader->DocumentIdentification->InstanceIdentifier element.If you don't provide any value, the API will generate a random value. This value must be unique for each transmission."
																			},
																			{
																				"key": "Content-Type",
																				"value": "multipart/form-data"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "formdata",
																			"formdata": [
																				{
																					"key": "file",
																					"description": "(Required) The document in UBL XML format",
																					"type": "file",
																					"src": []
																				}
																			]
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/c5/singapore/iras/sales",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"c5",
																				"singapore",
																				"iras",
																				"sales"
																			]
																		},
																		"description": "These are the documents that you have sent to your Buyers. The UBL XML is validated before is being sent."
																	},
																	"response": [
																		{
																			"name": "The document was sent successfully to IRAS.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "X-SBDH-IDENTIFIER",
																						"value": "string",
																						"description": "If you provide a value, the API will set this value in the StandardBusinessDocumentHeader->DocumentIdentification->InstanceIdentifier element.If you don't provide any value, the API will generate a random value. This value must be unique for each transmission."
																					},
																					{
																						"key": "Content-Type",
																						"value": "multipart/form-data"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "formdata",
																					"formdata": [
																						{
																							"key": "file",
																							"description": "(Required) The document in UBL XML format",
																							"type": "file",
																							"src": []
																						}
																					]
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/peppol/v1/c5/singapore/iras/sales",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"peppol",
																						"v1",
																						"c5",
																						"singapore",
																						"iras",
																						"sales"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"sbdhTransmissionId\": \"803828d52d4911ed85f512ef9c5638d0\",\n  \"acknowledgementId\": \"803828d52d4911ed85f512ef9c5638d0\",\n  \"documentId\": \"pbe000512-1\",\n  \"documentTypeEnum\": \"INVOICE\",\n  \"sender\": \"0208:0552912569\",\n  \"receiver\": \"0208:0465105397\",\n  \"irasReporter\": \"0208:0465105397\"\n}"
																		},
																		{
																			"name": "Error sending the document IRAS.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "X-SBDH-IDENTIFIER",
																						"value": "string",
																						"description": "If you provide a value, the API will set this value in the StandardBusinessDocumentHeader->DocumentIdentification->InstanceIdentifier element.If you don't provide any value, the API will generate a random value. This value must be unique for each transmission."
																					},
																					{
																						"key": "Content-Type",
																						"value": "multipart/form-data"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "formdata",
																					"formdata": [
																						{
																							"key": "file",
																							"description": "(Required) The document in UBL XML format",
																							"type": "file",
																							"src": []
																						}
																					]
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/peppol/v1/c5/singapore/iras/sales",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"peppol",
																						"v1",
																						"c5",
																						"singapore",
																						"iras",
																						"sales"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": {\n    \"code\": \"SCHEMATRON_VALIDATION_ERROR\",\n    \"message\": \"The Schematron validation failed has failed for document [invoice.xml]\"\n  },\n  \"validationReport\": {\n    \"globalStatus\": \"ERROR\",\n    \"validatedXmlName\": \"invoice.xml\",\n    \"xmlValidationReport\": {\n      \"validatedWith\": \"invoice.xml\",\n      \"reportStatus\": \"SUCCESS\",\n      \"warningsCount\": 0,\n      \"errorsCount\": 0,\n      \"xmlValidationMessages\": [],\n      \"validationType\": \"XML_SYNTAX\"\n    },\n    \"xsdValidationReport\": {\n      \"validatedWith\": \"UBL-Invoice-2.1.xsd\",\n      \"reportStatus\": \"SUCCESS\",\n      \"warningsCount\": 0,\n      \"errorsCount\": 0,\n      \"xsdValidationMessages\": [],\n      \"validationType\": \"XSD_SCHEMA\"\n    },\n    \"schematronValidationReport\": [\n      {\n        \"validatedWith\": \"EN16931-UBL-validation.xslt\",\n        \"reportStatus\": \"ERROR\",\n        \"warningsCount\": 0,\n        \"errorsCount\": 2,\n        \"schematronValidationMessages\": [\n          {\n            \"errorLevel\": \"ERROR\",\n            \"description\": \"[BR-CO-15]-Invoice total amount with VAT (BT-112) = Invoice total amount without VAT (BT-109) + Invoice total VAT amount (BT-110).\",\n            \"lineNumber\": 3,\n            \"columnNumber\": 73,\n            \"schematronTest\": \"every $Currency in cbc:DocumentCurrencyCode satisfies (count(cac:TaxTotal/xs:decimal(cbc:TaxAmount[@currencyID=$Currency])) eq 1) and (cac:LegalMonetaryTotal/xs:decimal(cbc:TaxInclusiveAmount) = round( (cac:LegalMonetaryTotal/xs:decimal(cbc:TaxExclusiveAmount) + cac:TaxTotal/xs:decimal(cbc:TaxAmount[@currencyID=$Currency])) * 10 * 10) div 100)\",\n            \"errorId\": \"BR-CO-15\",\n            \"xpath\": \"/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]\"\n          },\n          {\n            \"errorLevel\": \"ERROR\",\n            \"description\": \"[BR-CO-14]-Invoice total VAT amount (BT-110) = Î£ VAT category tax amount (BT-117).\",\n            \"lineNumber\": 130,\n            \"columnNumber\": 19,\n            \"schematronTest\": \"(xs:decimal(child::cbc:TaxAmount)= round((sum(cac:TaxSubtotal/xs:decimal(cbc:TaxAmount)) * 10 * 10)) div 100) or not(cac:TaxSubtotal)\",\n            \"errorId\": \"BR-CO-14\",\n            \"xpath\": \"/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]/*:TaxTotal[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]\"\n          }\n        ],\n        \"validationType\": \"SCHEMATRON\"\n      }\n    ],\n    \"warningsCount\": 0,\n    \"errorsCount\": 2,\n    \"xmlContent\": \"<Invoice xmlns:cac=\\\"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\\\"\\n         xmlns:cbc=\\\"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\\\"\\n         xmlns=\\\"urn:oasis:names:specification:ubl:schema:xsd:Invoice-2\\\">\\n    <cbc:CustomizationID>urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0</cbc:CustomizationID>\\n    <cbc:ProfileID>urn:fdc:peppol.eu:2017:poacc:billing:01:1.0</cbc:ProfileID>\\n    <cbc:ID>pbe000512-8</cbc:ID>\\n    <cbc:IssueDate>2022-05-19</cbc:IssueDate>\\n    <cbc:DueDate>2022-06-19</cbc:DueDate>\\n    <cbc:InvoiceTypeCode>380</cbc:InvoiceTypeCode>\\n    <cbc:DocumentCurrencyCode>EUR</cbc:DocumentCurrencyCode>\\n    <cbc:AccountingCost>4025:123:4343</cbc:AccountingCost>\\n    <cbc:BuyerReference>0150abc</cbc:BuyerReference>\\n    <cac:OrderReference>\\n        <cbc:ID>test-ademico-001</cbc:ID>\\n        <cbc:SalesOrderID>test-ademico-001</cbc:SalesOrderID>\\n    </cac:OrderReference>\\n    <cac:AccountingSupplierParty>\\n        <cac:Party>\\n            <cbc:EndpointID schemeID=\\\"0208\\\">0552912569</cbc:EndpointID>\\n            <cac:PartyIdentification>\\n                <cbc:ID schemeID=\\\"0208\\\">0552912569</cbc:ID>\\n            </cac:PartyIdentification>\\n            <cac:PartyName>\\n                <cbc:Name>Ademico Software</cbc:Name>\\n            </cac:PartyName>\\n            <cac:PostalAddress>\\n                <cbc:StreetName>Heidebergstraat 204</cbc:StreetName>\\n                <cbc:CityName>Kessel-Lo</cbc:CityName>\\n                <cbc:PostalZone>3010</cbc:PostalZone>\\n                <cac:Country>\\n                    <cbc:IdentificationCode>BE</cbc:IdentificationCode>\\n                </cac:Country>\\n            </cac:PostalAddress>\\n            <cac:PartyTaxScheme>\\n                <cbc:CompanyID>BE0552912569</cbc:CompanyID>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:PartyTaxScheme>\\n            <cac:PartyLegalEntity>\\n                <cbc:RegistrationName>Ademico Software</cbc:RegistrationName>\\n                <cbc:CompanyID schemeID=\\\"0208\\\">0552912569</cbc:CompanyID>\\n            </cac:PartyLegalEntity>\\n            <cac:Contact>\\n                <cbc:ElectronicMail>info@ademico-software.com</cbc:ElectronicMail>\\n            </cac:Contact>\\n        </cac:Party>\\n    </cac:AccountingSupplierParty>\\n\\n    <cac:AccountingCustomerParty>\\n        <cac:Party>\\n            <cbc:EndpointID schemeID=\\\"0208\\\">0465105397</cbc:EndpointID>\\n            <cac:PartyIdentification>\\n                <cbc:ID schemeID=\\\"0208\\\">0465105397</cbc:ID>\\n            </cac:PartyIdentification>\\n            <cac:PartyName>\\n                <cbc:Name>NicolaasJanssens</cbc:Name>\\n            </cac:PartyName>\\n            <cac:PostalAddress>\\n                <cbc:StreetName>Simon Bolivarlaan</cbc:StreetName>\\n                <cbc:CityName>Brussel</cbc:CityName>\\n                <cbc:PostalZone>1000</cbc:PostalZone>\\n                <cac:Country>\\n                    <cbc:IdentificationCode>BE</cbc:IdentificationCode>\\n                </cac:Country>\\n            </cac:PostalAddress>\\n            <cac:PartyTaxScheme>\\n                <cbc:CompanyID>BE0465105397</cbc:CompanyID>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:PartyTaxScheme>\\n            <cac:PartyLegalEntity>\\n                <cbc:RegistrationName>NicolaasJanssens</cbc:RegistrationName>\\n                <cbc:CompanyID>0465105397</cbc:CompanyID>\\n            </cac:PartyLegalEntity>\\n            <cac:Contact>\\n                <cbc:ElectronicMail>nicolaas.janssens@bosa.fgov.be</cbc:ElectronicMail>\\n            </cac:Contact>\\n        </cac:Party>\\n    </cac:AccountingCustomerParty>\\n    <cac:Delivery>\\n        <cbc:ActualDeliveryDate>2017-11-01</cbc:ActualDeliveryDate>\\n        <cac:DeliveryLocation>\\n            <cbc:ID schemeID=\\\"0088\\\">9483759475923478</cbc:ID>\\n            <cac:Address>\\n                <cbc:StreetName>Delivery street 2</cbc:StreetName>\\n                <cbc:AdditionalStreetName>Building 56</cbc:AdditionalStreetName>\\n                <cbc:CityName>Stockholm</cbc:CityName>\\n                <cbc:PostalZone>21234</cbc:PostalZone>\\n                <cac:Country>\\n                    <cbc:IdentificationCode>SE</cbc:IdentificationCode>\\n                </cac:Country>\\n            </cac:Address>\\n        </cac:DeliveryLocation>\\n        <cac:DeliveryParty>\\n            <cac:PartyName>\\n                <cbc:Name>Delivery party Name</cbc:Name>\\n            </cac:PartyName>\\n        </cac:DeliveryParty>\\n    </cac:Delivery>\\n    <cac:PaymentMeans>\\n        <cbc:PaymentMeansCode name=\\\"Credit transfer\\\">30</cbc:PaymentMeansCode>\\n        <cbc:PaymentID>Snippet1</cbc:PaymentID>\\n        <cac:PayeeFinancialAccount>\\n            <cbc:ID>IBAN32423940</cbc:ID>\\n            <cbc:Name>AccountName</cbc:Name>\\n            <cac:FinancialInstitutionBranch>\\n                <cbc:ID>BIC324098</cbc:ID>\\n            </cac:FinancialInstitutionBranch>\\n        </cac:PayeeFinancialAccount>\\n    </cac:PaymentMeans>\\n    <cac:PaymentTerms>\\n        <cbc:Note>Payment within 10 days, 2% discount</cbc:Note>\\n    </cac:PaymentTerms>\\n    <cac:AllowanceCharge>\\n        <cbc:ChargeIndicator>true</cbc:ChargeIndicator>\\n        <cbc:AllowanceChargeReason>Insurance</cbc:AllowanceChargeReason>\\n        <cbc:Amount currencyID=\\\"EUR\\\">10</cbc:Amount>\\n        <cac:TaxCategory>\\n            <cbc:ID>E</cbc:ID>\\n            <cbc:Percent>0</cbc:Percent>\\n            <cac:TaxScheme>\\n                <cbc:ID>VAT</cbc:ID>\\n            </cac:TaxScheme>\\n        </cac:TaxCategory>\\n    </cac:AllowanceCharge>\\n    <cac:TaxTotal>\\n        <!-- Incorrect TaxAmount -->\\n        <cbc:TaxAmount currencyID=\\\"EUR\\\">310.09</cbc:TaxAmount>\\n        <cac:TaxSubtotal>\\n            <cbc:TaxableAmount currencyID=\\\"EUR\\\">1481.4</cbc:TaxableAmount>\\n            <cbc:TaxAmount currencyID=\\\"EUR\\\">311.09</cbc:TaxAmount>\\n            <cac:TaxCategory>\\n                <cbc:ID>S</cbc:ID>\\n                <cbc:Percent>21.0</cbc:Percent>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:TaxCategory>\\n        </cac:TaxSubtotal>\\n        <cac:TaxSubtotal>\\n            <cbc:TaxableAmount currencyID=\\\"EUR\\\">30</cbc:TaxableAmount>\\n            <cbc:TaxAmount currencyID=\\\"EUR\\\">0</cbc:TaxAmount>\\n            <cac:TaxCategory>\\n                <cbc:ID>E</cbc:ID>\\n                <cbc:Percent>0</cbc:Percent>\\n                <cbc:TaxExemptionReasonCode>VATEX-EU-F</cbc:TaxExemptionReasonCode>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:TaxCategory>\\n        </cac:TaxSubtotal>\\n    </cac:TaxTotal>\\n    <cac:LegalMonetaryTotal>\\n        <cbc:LineExtensionAmount currencyID=\\\"EUR\\\">1501.4</cbc:LineExtensionAmount>\\n        <cbc:TaxExclusiveAmount currencyID=\\\"EUR\\\">1511.4</cbc:TaxExclusiveAmount>\\n        <cbc:TaxInclusiveAmount currencyID=\\\"EUR\\\">1822.49</cbc:TaxInclusiveAmount>\\n        <cbc:ChargeTotalAmount currencyID=\\\"EUR\\\">10</cbc:ChargeTotalAmount>\\n        <cbc:PayableAmount currencyID=\\\"EUR\\\">1822.49</cbc:PayableAmount>\\n    </cac:LegalMonetaryTotal>\\n\\n    <cac:InvoiceLine>\\n        <cbc:ID>1</cbc:ID>\\n        <cbc:InvoicedQuantity unitCode=\\\"DAY\\\">2</cbc:InvoicedQuantity>\\n        <cbc:LineExtensionAmount currencyID=\\\"EUR\\\">20</cbc:LineExtensionAmount>\\n        <cbc:AccountingCost>Consulting Fees</cbc:AccountingCost>\\n        <cac:OrderLineReference>\\n            <cbc:LineID>test-ademico-001</cbc:LineID>\\n        </cac:OrderLineReference>\\n        <cac:Item>\\n            <cbc:Description>TEST 0%</cbc:Description>\\n            <cbc:Name>TEST 0%</cbc:Name>\\n            <cac:StandardItemIdentification>\\n                <cbc:ID schemeID=\\\"0088\\\">21382183120983</cbc:ID>\\n            </cac:StandardItemIdentification>\\n            <cac:OriginCountry>\\n                <cbc:IdentificationCode>NO</cbc:IdentificationCode>\\n            </cac:OriginCountry>\\n            <cac:CommodityClassification>\\n                <cbc:ItemClassificationCode listID=\\\"SRV\\\">09348023</cbc:ItemClassificationCode>\\n            </cac:CommodityClassification>\\n            <cac:ClassifiedTaxCategory>\\n                <cbc:ID>E</cbc:ID>\\n                <cbc:Percent>0</cbc:Percent>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:ClassifiedTaxCategory>\\n        </cac:Item>\\n        <cac:Price>\\n            <cbc:PriceAmount currencyID=\\\"EUR\\\">10</cbc:PriceAmount>\\n        </cac:Price>\\n    </cac:InvoiceLine>\\n    <cac:InvoiceLine>\\n        <cbc:ID>2</cbc:ID>\\n        <cbc:InvoicedQuantity unitCode=\\\"DAY\\\">12</cbc:InvoicedQuantity>\\n        <cbc:LineExtensionAmount currencyID=\\\"EUR\\\">1481.4</cbc:LineExtensionAmount>\\n        <cac:OrderLineReference>\\n            <cbc:LineID>test-ademico-001</cbc:LineID>\\n        </cac:OrderLineReference>\\n        <cac:Item>\\n            <cbc:Description>Description 2</cbc:Description>\\n            <cbc:Name>TEST 21%</cbc:Name>\\n            <cac:StandardItemIdentification>\\n                <cbc:ID schemeID=\\\"0088\\\">21382183120983</cbc:ID>\\n            </cac:StandardItemIdentification>\\n            <cac:OriginCountry>\\n                <cbc:IdentificationCode>NO</cbc:IdentificationCode>\\n            </cac:OriginCountry>\\n            <cac:CommodityClassification>\\n                <cbc:ItemClassificationCode listID=\\\"SRV\\\">09348023</cbc:ItemClassificationCode>\\n            </cac:CommodityClassification>\\n            <cac:ClassifiedTaxCategory>\\n                <cbc:ID>S</cbc:ID>\\n                <cbc:Percent>21.0</cbc:Percent>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:ClassifiedTaxCategory>\\n        </cac:Item>\\n        <cac:Price>\\n            <cbc:PriceAmount currencyID=\\\"EUR\\\">123.45</cbc:PriceAmount>\\n        </cac:Price>\\n    </cac:InvoiceLine>\\n</Invoice>\"\n  }\n}"
																		},
																		{
																			"name": "Authentication failure",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "X-SBDH-IDENTIFIER",
																						"value": "string",
																						"description": "If you provide a value, the API will set this value in the StandardBusinessDocumentHeader->DocumentIdentification->InstanceIdentifier element.If you don't provide any value, the API will generate a random value. This value must be unique for each transmission."
																					},
																					{
																						"key": "Content-Type",
																						"value": "multipart/form-data"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "formdata",
																					"formdata": [
																						{
																							"key": "file",
																							"description": "(Required) The document in UBL XML format",
																							"type": "file",
																							"src": []
																						}
																					]
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/peppol/v1/c5/singapore/iras/sales",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"peppol",
																						"v1",
																						"c5",
																						"singapore",
																						"iras",
																						"sales"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "purchases",
															"item": [
																{
																	"name": "Send Purchase Invoices/Credit Notes to IRAS.",
																	"request": {
																		"auth": {
																			"type": "basic",
																			"basic": [
																				{
																					"key": "username",
																					"value": "{{basicAuthUsername}}",
																					"type": "string"
																				},
																				{
																					"key": "password",
																					"value": "{{basicAuthPassword}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-SBDH_IDENTIFIER",
																				"value": "string",
																				"description": "If you provide a value, the API will set this value in the StandardBusinessDocumentHeader->DocumentIdentification->InstanceIdentifier element.If you don't provide any value, the API will generate a random value"
																			},
																			{
																				"key": "Content-Type",
																				"value": "multipart/form-data"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "formdata",
																			"formdata": [
																				{
																					"key": "file",
																					"description": "(Required) The document in UBL XML format",
																					"type": "file",
																					"src": []
																				}
																			]
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/peppol/v1/c5/singapore/iras/purchases",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"peppol",
																				"v1",
																				"c5",
																				"singapore",
																				"iras",
																				"purchases"
																			]
																		},
																		"description": "These are the documents that you have received from your Sellers. The UBL XML is validated before is being sent."
																	},
																	"response": [
																		{
																			"name": "The document was sent successfully to IRAS.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "X-SBDH_IDENTIFIER",
																						"value": "string",
																						"description": "If you provide a value, the API will set this value in the StandardBusinessDocumentHeader->DocumentIdentification->InstanceIdentifier element.If you don't provide any value, the API will generate a random value"
																					},
																					{
																						"key": "Content-Type",
																						"value": "multipart/form-data"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "formdata",
																					"formdata": [
																						{
																							"key": "file",
																							"description": "(Required) The document in UBL XML format",
																							"type": "file",
																							"src": []
																						}
																					]
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/peppol/v1/c5/singapore/iras/purchases",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"peppol",
																						"v1",
																						"c5",
																						"singapore",
																						"iras",
																						"purchases"
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"sbdhTransmissionId\": \"803828d52d4911ed85f512ef9c5638d0\",\n  \"acknowledgementId\": \"803828d52d4911ed85f512ef9c5638d0\",\n  \"documentId\": \"pbe000512-1\",\n  \"documentTypeEnum\": \"INVOICE\",\n  \"sender\": \"0208:0552912569\",\n  \"receiver\": \"0208:0465105397\",\n  \"irasReporter\": \"0208:0465105397\"\n}"
																		},
																		{
																			"name": "Error sending the document IRAS.",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "X-SBDH_IDENTIFIER",
																						"value": "string",
																						"description": "If you provide a value, the API will set this value in the StandardBusinessDocumentHeader->DocumentIdentification->InstanceIdentifier element.If you don't provide any value, the API will generate a random value"
																					},
																					{
																						"key": "Content-Type",
																						"value": "multipart/form-data"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "formdata",
																					"formdata": [
																						{
																							"key": "file",
																							"description": "(Required) The document in UBL XML format",
																							"type": "file",
																							"src": []
																						}
																					]
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/peppol/v1/c5/singapore/iras/purchases",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"peppol",
																						"v1",
																						"c5",
																						"singapore",
																						"iras",
																						"purchases"
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": {\n    \"code\": \"SCHEMATRON_VALIDATION_ERROR\",\n    \"message\": \"The Schematron validation failed has failed for document [invoice.xml]\"\n  },\n  \"validationReport\": {\n    \"globalStatus\": \"ERROR\",\n    \"validatedXmlName\": \"invoice.xml\",\n    \"xmlValidationReport\": {\n      \"validatedWith\": \"invoice.xml\",\n      \"reportStatus\": \"SUCCESS\",\n      \"warningsCount\": 0,\n      \"errorsCount\": 0,\n      \"xmlValidationMessages\": [],\n      \"validationType\": \"XML_SYNTAX\"\n    },\n    \"xsdValidationReport\": {\n      \"validatedWith\": \"UBL-Invoice-2.1.xsd\",\n      \"reportStatus\": \"SUCCESS\",\n      \"warningsCount\": 0,\n      \"errorsCount\": 0,\n      \"xsdValidationMessages\": [],\n      \"validationType\": \"XSD_SCHEMA\"\n    },\n    \"schematronValidationReport\": [\n      {\n        \"validatedWith\": \"EN16931-UBL-validation.xslt\",\n        \"reportStatus\": \"ERROR\",\n        \"warningsCount\": 0,\n        \"errorsCount\": 2,\n        \"schematronValidationMessages\": [\n          {\n            \"errorLevel\": \"ERROR\",\n            \"description\": \"[BR-CO-15]-Invoice total amount with VAT (BT-112) = Invoice total amount without VAT (BT-109) + Invoice total VAT amount (BT-110).\",\n            \"lineNumber\": 3,\n            \"columnNumber\": 73,\n            \"schematronTest\": \"every $Currency in cbc:DocumentCurrencyCode satisfies (count(cac:TaxTotal/xs:decimal(cbc:TaxAmount[@currencyID=$Currency])) eq 1) and (cac:LegalMonetaryTotal/xs:decimal(cbc:TaxInclusiveAmount) = round( (cac:LegalMonetaryTotal/xs:decimal(cbc:TaxExclusiveAmount) + cac:TaxTotal/xs:decimal(cbc:TaxAmount[@currencyID=$Currency])) * 10 * 10) div 100)\",\n            \"errorId\": \"BR-CO-15\",\n            \"xpath\": \"/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]\"\n          },\n          {\n            \"errorLevel\": \"ERROR\",\n            \"description\": \"[BR-CO-14]-Invoice total VAT amount (BT-110) = Î£ VAT category tax amount (BT-117).\",\n            \"lineNumber\": 130,\n            \"columnNumber\": 19,\n            \"schematronTest\": \"(xs:decimal(child::cbc:TaxAmount)= round((sum(cac:TaxSubtotal/xs:decimal(cbc:TaxAmount)) * 10 * 10)) div 100) or not(cac:TaxSubtotal)\",\n            \"errorId\": \"BR-CO-14\",\n            \"xpath\": \"/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]/*:TaxTotal[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]\"\n          }\n        ],\n        \"validationType\": \"SCHEMATRON\"\n      }\n    ],\n    \"warningsCount\": 0,\n    \"errorsCount\": 2,\n    \"xmlContent\": \"<Invoice xmlns:cac=\\\"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\\\"\\n         xmlns:cbc=\\\"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\\\"\\n         xmlns=\\\"urn:oasis:names:specification:ubl:schema:xsd:Invoice-2\\\">\\n    <cbc:CustomizationID>urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0</cbc:CustomizationID>\\n    <cbc:ProfileID>urn:fdc:peppol.eu:2017:poacc:billing:01:1.0</cbc:ProfileID>\\n    <cbc:ID>pbe000512-8</cbc:ID>\\n    <cbc:IssueDate>2022-05-19</cbc:IssueDate>\\n    <cbc:DueDate>2022-06-19</cbc:DueDate>\\n    <cbc:InvoiceTypeCode>380</cbc:InvoiceTypeCode>\\n    <cbc:DocumentCurrencyCode>EUR</cbc:DocumentCurrencyCode>\\n    <cbc:AccountingCost>4025:123:4343</cbc:AccountingCost>\\n    <cbc:BuyerReference>0150abc</cbc:BuyerReference>\\n    <cac:OrderReference>\\n        <cbc:ID>test-ademico-001</cbc:ID>\\n        <cbc:SalesOrderID>test-ademico-001</cbc:SalesOrderID>\\n    </cac:OrderReference>\\n    <cac:AccountingSupplierParty>\\n        <cac:Party>\\n            <cbc:EndpointID schemeID=\\\"0208\\\">0552912569</cbc:EndpointID>\\n            <cac:PartyIdentification>\\n                <cbc:ID schemeID=\\\"0208\\\">0552912569</cbc:ID>\\n            </cac:PartyIdentification>\\n            <cac:PartyName>\\n                <cbc:Name>Ademico Software</cbc:Name>\\n            </cac:PartyName>\\n            <cac:PostalAddress>\\n                <cbc:StreetName>Heidebergstraat 204</cbc:StreetName>\\n                <cbc:CityName>Kessel-Lo</cbc:CityName>\\n                <cbc:PostalZone>3010</cbc:PostalZone>\\n                <cac:Country>\\n                    <cbc:IdentificationCode>BE</cbc:IdentificationCode>\\n                </cac:Country>\\n            </cac:PostalAddress>\\n            <cac:PartyTaxScheme>\\n                <cbc:CompanyID>BE0552912569</cbc:CompanyID>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:PartyTaxScheme>\\n            <cac:PartyLegalEntity>\\n                <cbc:RegistrationName>Ademico Software</cbc:RegistrationName>\\n                <cbc:CompanyID schemeID=\\\"0208\\\">0552912569</cbc:CompanyID>\\n            </cac:PartyLegalEntity>\\n            <cac:Contact>\\n                <cbc:ElectronicMail>info@ademico-software.com</cbc:ElectronicMail>\\n            </cac:Contact>\\n        </cac:Party>\\n    </cac:AccountingSupplierParty>\\n\\n    <cac:AccountingCustomerParty>\\n        <cac:Party>\\n            <cbc:EndpointID schemeID=\\\"0208\\\">0465105397</cbc:EndpointID>\\n            <cac:PartyIdentification>\\n                <cbc:ID schemeID=\\\"0208\\\">0465105397</cbc:ID>\\n            </cac:PartyIdentification>\\n            <cac:PartyName>\\n                <cbc:Name>NicolaasJanssens</cbc:Name>\\n            </cac:PartyName>\\n            <cac:PostalAddress>\\n                <cbc:StreetName>Simon Bolivarlaan</cbc:StreetName>\\n                <cbc:CityName>Brussel</cbc:CityName>\\n                <cbc:PostalZone>1000</cbc:PostalZone>\\n                <cac:Country>\\n                    <cbc:IdentificationCode>BE</cbc:IdentificationCode>\\n                </cac:Country>\\n            </cac:PostalAddress>\\n            <cac:PartyTaxScheme>\\n                <cbc:CompanyID>BE0465105397</cbc:CompanyID>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:PartyTaxScheme>\\n            <cac:PartyLegalEntity>\\n                <cbc:RegistrationName>NicolaasJanssens</cbc:RegistrationName>\\n                <cbc:CompanyID>0465105397</cbc:CompanyID>\\n            </cac:PartyLegalEntity>\\n            <cac:Contact>\\n                <cbc:ElectronicMail>nicolaas.janssens@bosa.fgov.be</cbc:ElectronicMail>\\n            </cac:Contact>\\n        </cac:Party>\\n    </cac:AccountingCustomerParty>\\n    <cac:Delivery>\\n        <cbc:ActualDeliveryDate>2017-11-01</cbc:ActualDeliveryDate>\\n        <cac:DeliveryLocation>\\n            <cbc:ID schemeID=\\\"0088\\\">9483759475923478</cbc:ID>\\n            <cac:Address>\\n                <cbc:StreetName>Delivery street 2</cbc:StreetName>\\n                <cbc:AdditionalStreetName>Building 56</cbc:AdditionalStreetName>\\n                <cbc:CityName>Stockholm</cbc:CityName>\\n                <cbc:PostalZone>21234</cbc:PostalZone>\\n                <cac:Country>\\n                    <cbc:IdentificationCode>SE</cbc:IdentificationCode>\\n                </cac:Country>\\n            </cac:Address>\\n        </cac:DeliveryLocation>\\n        <cac:DeliveryParty>\\n            <cac:PartyName>\\n                <cbc:Name>Delivery party Name</cbc:Name>\\n            </cac:PartyName>\\n        </cac:DeliveryParty>\\n    </cac:Delivery>\\n    <cac:PaymentMeans>\\n        <cbc:PaymentMeansCode name=\\\"Credit transfer\\\">30</cbc:PaymentMeansCode>\\n        <cbc:PaymentID>Snippet1</cbc:PaymentID>\\n        <cac:PayeeFinancialAccount>\\n            <cbc:ID>IBAN32423940</cbc:ID>\\n            <cbc:Name>AccountName</cbc:Name>\\n            <cac:FinancialInstitutionBranch>\\n                <cbc:ID>BIC324098</cbc:ID>\\n            </cac:FinancialInstitutionBranch>\\n        </cac:PayeeFinancialAccount>\\n    </cac:PaymentMeans>\\n    <cac:PaymentTerms>\\n        <cbc:Note>Payment within 10 days, 2% discount</cbc:Note>\\n    </cac:PaymentTerms>\\n    <cac:AllowanceCharge>\\n        <cbc:ChargeIndicator>true</cbc:ChargeIndicator>\\n        <cbc:AllowanceChargeReason>Insurance</cbc:AllowanceChargeReason>\\n        <cbc:Amount currencyID=\\\"EUR\\\">10</cbc:Amount>\\n        <cac:TaxCategory>\\n            <cbc:ID>E</cbc:ID>\\n            <cbc:Percent>0</cbc:Percent>\\n            <cac:TaxScheme>\\n                <cbc:ID>VAT</cbc:ID>\\n            </cac:TaxScheme>\\n        </cac:TaxCategory>\\n    </cac:AllowanceCharge>\\n    <cac:TaxTotal>\\n        <!-- Incorrect TaxAmount -->\\n        <cbc:TaxAmount currencyID=\\\"EUR\\\">310.09</cbc:TaxAmount>\\n        <cac:TaxSubtotal>\\n            <cbc:TaxableAmount currencyID=\\\"EUR\\\">1481.4</cbc:TaxableAmount>\\n            <cbc:TaxAmount currencyID=\\\"EUR\\\">311.09</cbc:TaxAmount>\\n            <cac:TaxCategory>\\n                <cbc:ID>S</cbc:ID>\\n                <cbc:Percent>21.0</cbc:Percent>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:TaxCategory>\\n        </cac:TaxSubtotal>\\n        <cac:TaxSubtotal>\\n            <cbc:TaxableAmount currencyID=\\\"EUR\\\">30</cbc:TaxableAmount>\\n            <cbc:TaxAmount currencyID=\\\"EUR\\\">0</cbc:TaxAmount>\\n            <cac:TaxCategory>\\n                <cbc:ID>E</cbc:ID>\\n                <cbc:Percent>0</cbc:Percent>\\n                <cbc:TaxExemptionReasonCode>VATEX-EU-F</cbc:TaxExemptionReasonCode>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:TaxCategory>\\n        </cac:TaxSubtotal>\\n    </cac:TaxTotal>\\n    <cac:LegalMonetaryTotal>\\n        <cbc:LineExtensionAmount currencyID=\\\"EUR\\\">1501.4</cbc:LineExtensionAmount>\\n        <cbc:TaxExclusiveAmount currencyID=\\\"EUR\\\">1511.4</cbc:TaxExclusiveAmount>\\n        <cbc:TaxInclusiveAmount currencyID=\\\"EUR\\\">1822.49</cbc:TaxInclusiveAmount>\\n        <cbc:ChargeTotalAmount currencyID=\\\"EUR\\\">10</cbc:ChargeTotalAmount>\\n        <cbc:PayableAmount currencyID=\\\"EUR\\\">1822.49</cbc:PayableAmount>\\n    </cac:LegalMonetaryTotal>\\n\\n    <cac:InvoiceLine>\\n        <cbc:ID>1</cbc:ID>\\n        <cbc:InvoicedQuantity unitCode=\\\"DAY\\\">2</cbc:InvoicedQuantity>\\n        <cbc:LineExtensionAmount currencyID=\\\"EUR\\\">20</cbc:LineExtensionAmount>\\n        <cbc:AccountingCost>Consulting Fees</cbc:AccountingCost>\\n        <cac:OrderLineReference>\\n            <cbc:LineID>test-ademico-001</cbc:LineID>\\n        </cac:OrderLineReference>\\n        <cac:Item>\\n            <cbc:Description>TEST 0%</cbc:Description>\\n            <cbc:Name>TEST 0%</cbc:Name>\\n            <cac:StandardItemIdentification>\\n                <cbc:ID schemeID=\\\"0088\\\">21382183120983</cbc:ID>\\n            </cac:StandardItemIdentification>\\n            <cac:OriginCountry>\\n                <cbc:IdentificationCode>NO</cbc:IdentificationCode>\\n            </cac:OriginCountry>\\n            <cac:CommodityClassification>\\n                <cbc:ItemClassificationCode listID=\\\"SRV\\\">09348023</cbc:ItemClassificationCode>\\n            </cac:CommodityClassification>\\n            <cac:ClassifiedTaxCategory>\\n                <cbc:ID>E</cbc:ID>\\n                <cbc:Percent>0</cbc:Percent>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:ClassifiedTaxCategory>\\n        </cac:Item>\\n        <cac:Price>\\n            <cbc:PriceAmount currencyID=\\\"EUR\\\">10</cbc:PriceAmount>\\n        </cac:Price>\\n    </cac:InvoiceLine>\\n    <cac:InvoiceLine>\\n        <cbc:ID>2</cbc:ID>\\n        <cbc:InvoicedQuantity unitCode=\\\"DAY\\\">12</cbc:InvoicedQuantity>\\n        <cbc:LineExtensionAmount currencyID=\\\"EUR\\\">1481.4</cbc:LineExtensionAmount>\\n        <cac:OrderLineReference>\\n            <cbc:LineID>test-ademico-001</cbc:LineID>\\n        </cac:OrderLineReference>\\n        <cac:Item>\\n            <cbc:Description>Description 2</cbc:Description>\\n            <cbc:Name>TEST 21%</cbc:Name>\\n            <cac:StandardItemIdentification>\\n                <cbc:ID schemeID=\\\"0088\\\">21382183120983</cbc:ID>\\n            </cac:StandardItemIdentification>\\n            <cac:OriginCountry>\\n                <cbc:IdentificationCode>NO</cbc:IdentificationCode>\\n            </cac:OriginCountry>\\n            <cac:CommodityClassification>\\n                <cbc:ItemClassificationCode listID=\\\"SRV\\\">09348023</cbc:ItemClassificationCode>\\n            </cac:CommodityClassification>\\n            <cac:ClassifiedTaxCategory>\\n                <cbc:ID>S</cbc:ID>\\n                <cbc:Percent>21.0</cbc:Percent>\\n                <cac:TaxScheme>\\n                    <cbc:ID>VAT</cbc:ID>\\n                </cac:TaxScheme>\\n            </cac:ClassifiedTaxCategory>\\n        </cac:Item>\\n        <cac:Price>\\n            <cbc:PriceAmount currencyID=\\\"EUR\\\">123.45</cbc:PriceAmount>\\n        </cac:Price>\\n    </cac:InvoiceLine>\\n</Invoice>\"\n  }\n}"
																		},
																		{
																			"name": "Authentication failure",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "X-SBDH_IDENTIFIER",
																						"value": "string",
																						"description": "If you provide a value, the API will set this value in the StandardBusinessDocumentHeader->DocumentIdentification->InstanceIdentifier element.If you don't provide any value, the API will generate a random value"
																					},
																					{
																						"key": "Content-Type",
																						"value": "multipart/form-data"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Basic <credentials>",
																						"description": "Added as a part of security scheme: basic"
																					}
																				],
																				"body": {
																					"mode": "formdata",
																					"formdata": [
																						{
																							"key": "file",
																							"description": "(Required) The document in UBL XML format",
																							"type": "file",
																							"src": []
																						}
																					]
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/peppol/v1/c5/singapore/iras/purchases",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"peppol",
																						"v1",
																						"c5",
																						"singapore",
																						"iras",
																						"purchases"
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "tools",
									"item": [
										{
											"name": "connectivity",
											"item": [
												{
													"name": "Check access to our service",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/tools/connectivity",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"tools",
																"connectivity"
															]
														},
														"description": "If you get a status `200` it means that you have access, status `401` means that your authentication credentials are not correct."
													},
													"response": [
														{
															"name": "Connectivity test successful",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/tools/connectivity",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"tools",
																		"connectivity"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Connectivity test failed",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/tools/connectivity",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"tools",
																		"connectivity"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "notifications",
									"item": [
										{
											"name": "{notificationId}",
											"item": [
												{
													"name": "Consume a notification to remove it from the queue",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/notifications/:notificationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"notifications",
																":notificationId"
															],
															"variable": [
																{
																	"key": "notificationId",
																	"value": "7",
																	"description": "(Required) The id of the notification we want to consume"
																}
															]
														},
														"description": "Once consumed, the notification will not be returned anymore when getting the notifications list"
													},
													"response": [
														{
															"name": "Notification consumed successfully",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/notifications/:notificationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"notifications",
																		":notificationId"
																	],
																	"variable": [
																		{
																			"key": "notificationId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Error consuming notification",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/notifications/:notificationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"notifications",
																		":notificationId"
																	],
																	"variable": [
																		{
																			"key": "notificationId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error consuming notification\"\n}"
														},
														{
															"name": "Authentication failure",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/peppol/v1/notifications/:notificationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"peppol",
																		"v1",
																		"notifications",
																		":notificationId"
																	],
																	"variable": [
																		{
																			"key": "notificationId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get the list of notifications",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/peppol/v1/notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&eventType=INVOICE_RESPONSE_RECEIVED&peppolDocumentType=INVOICE&sender=0208:0552912569&receiver=0208:0552912569&startDateTime=2023-07-25T11:03:26.688Z&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"peppol",
														"v1",
														"notifications"
													],
													"query": [
														{
															"key": "transmissionId",
															"value": "803828d52d4911ed85f512ef9c5638d0",
															"description": "The transmission id of the notification"
														},
														{
															"key": "documentId",
															"value": "pbe000512-1",
															"description": "The document id of a document eg Invoice/Credit Note"
														},
														{
															"key": "eventType",
															"value": "INVOICE_RESPONSE_RECEIVED",
															"description": "The notification event type"
														},
														{
															"key": "peppolDocumentType",
															"value": "INVOICE",
															"description": "The document type: INVOICE, CREDIT_NOTE, ORDER"
														},
														{
															"key": "sender",
															"value": "0208:0552912569",
															"description": "The sender of the notification"
														},
														{
															"key": "receiver",
															"value": "0208:0552912569",
															"description": "The receiver of the notification"
														},
														{
															"key": "startDateTime",
															"value": "2023-07-25T11:03:26.688Z",
															"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z"
														},
														{
															"key": "endDateTime",
															"value": "2023-07-29T11:03:26.688Z",
															"description": "The end date time of the period to filter the notifications."
														},
														{
															"key": "page",
															"value": "0",
															"description": "The starting page number from which we want to retrieve results. The first page is 0."
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "How many results we retrieve per page"
														}
													]
												},
												"description": "The API creates notifications to inform you when a document was sent successfully or when you receive a document from other legal entities.</br></br>The following status values are possible when you, acting as a Seller, are sending an invoice/credit note to a Buyer. You will get notified via the notification `InvoiceSendingNotificationRO`:<table><tr><th>Code</th><th>Description</th></tr><tr><td>QUEUED</td><td>Waiting to be sent to the Buyer</td></tr><tr><td>SENT</td><td>Acknowledged by the receiver Access Point C3</td></tr><tr><td>SEND_FAILED</td><td>Failed to send to the receiver's Access Point C3</td></tr></table></br>The following status values are possible when you, acting as a Seller, have sent an invoice/credit note to the Access Point of the Buyer and it was received. You will get notified via the notification `MLRReceivingNotificationRO`:<table><tr><th>Code</th><th>Description</th></tr><tr><td>TECHNICAL_ACCEPTANCE</td><td>Document received and accepted by the Access Point of the Buyer, but it was not (yet) read by Buyer</td></tr><tr><td>REJECTED</td><td>MLR reject. Status is used when the Access Point of the Buyer will not process the referenced document any further due to validation errors.</td></tr></table></br>When you, acting as a Buyer, are receiving an invoice/credit note from the Seller you will get notified via the notification `InvoiceReceivingNotificationRO`. This notification contains a unique identifier called `transmissionId` which you will use to get the incoming invoice/credit note using the endpoint <a href=\"#tag/InvoiceCredit-Note/operation/getInvoiceInUBLFormat\">Get Invoice/Credit Note</a>.</br></br>The following status values are possible when you, acting as a Seller, are receiving an InvoiceResponse notification(IR) from the Buyer. Not all Buyers are sending an InvoiceResponse.You will get notified via the notification `InvoiceResponseReceivingNotificationRO`:<table><tr><th>Code</th><th>Description</th></tr><tr><td>BUYER_ACKNOWLEDGE</td><td>Status is used when Buyer has received a readable invoice message that can be understood and submitted for processing by the Buyer.</td></tr><tr><td>IN_PROCESS</td><td>Status is used when the processing of the Invoice has started in Buyers system.</td></tr><tr><td>UNDER_QUERY</td><td>Status is used when Buyer will not proceed to accept the Invoice without receiving additional information from the Seller.</td></tr><tr><td>CONDITIONALLY_ACCEPTED</td><td>Status is used when Buyer is accepting the Invoice under conditions stated in 'Status Reason' and proceed to pay accordingly unless disputed by Seller.</td></tr><tr><td>REJECTED</td><td>Invoice reject. Status is used only when the Buyer will not process the referenced Invoice any further. Buyer is rejecting this invoice but not necessarily the commercial transaction. Although it can be used also for rejection for commercial reasons (invoice not corresponding to delivery).</td></tr><tr><td>ACCEPTED</td><td>Status is used only when the Buyer has given a final approval of the invoice and the next step is payment</td></tr><tr><td>PARTIALLY_PAID</td><td>Status is used together with Clarification Reason code PPD, only when the Buyer has initiated the payment of the invoice without having paid the accepted amount in full.</td></tr><tr><td>FULLY_PAID</td><td>Status is used only when the Buyer has initiated the payment of the invoice.</td></tr></table></br>Here is a list of all notifications defined in our OpenAPI specifications that you can receive:<table><tr><th>Name</th><th>Description</th></tr><tr><td>InvoiceSendingNotificationRO</td><td>Notification created when you, acting as a Seller, send an invoice/credit note to a Buyer. This notifies you whether the invoice was sent successfully or failed to be sent.</td></tr><tr><td>InvoiceReceivingNotificationRO</td><td>Notification created when you, acting as a Buyer, receive an invoice/credit note from a Seller.</td></tr><tr><td>MLRReceivingNotificationRO</td><td>Notification created when you, acting as a Seller, have sent an invoice/credit note to the Buyer's Access Point and it has been received. This notifies you whether the Buyer's Access Point has accepted or rejected the invoice for technical reasons.</td></tr><tr><td>InvoiceResponseSendingNotificationRO</td><td>Notification created when you, acting as a Buyer, send an Invoice Response (IR) to a Seller. This notifies you whether the Invoice Response was sent successfully or failed to be sent.</td></tr><tr><td>InvoiceResponseReceivingNotificationRO</td><td>Notification created when you, acting as a Seller, receive an Invoice Response (IR) from a Buyer. This notifies you whether the invoice you sent to the Buyer was accepted, rejected, paid, etc.</td></tr><tr><td>OrderSendingNotificationRO</td><td>Notification created when you, acting as a Buyer, send an order to a Seller. This notifies you whether the order was sent successfully or failed to be sent.</td></tr><tr><td>OrderReceivingNotificationRO</td><td>Notification created when you, acting as a Seller, receive an order from a Buyer.</td></tr><tr><td>LegalEntityCorppassKycNotificationRO</td><td>Specific to Singapore only: Notification created to inform you about the status of the legal entity KYC in Corppass.</td></tr><tr><td>LegalEntityCorppassC5NotificationRO</td><td>Specific to Singapore only: Notification created to inform you about the status of the legal entity C5 activation/deactivation in Corppass.</td></tr><tr><td>IrasSendingNotificationRO</td><td>Specific to Singapore only: Notification created when you, acting as a Seller, send an invoice/credit note to a Buyer and you have indicated to our API to automatically report to IRAS via the HTTP header X-C5-REPORTING.</td></tr></table>"
											},
											"response": [
												{
													"name": "Notifications retrieved successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&eventType=INVOICE_RESPONSE_RECEIVED&peppolDocumentType=INVOICE&sender=0208:0552912569&receiver=0208:0552912569&startDateTime=2023-07-25T11:03:26.688Z&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"notifications"
															],
															"query": [
																{
																	"key": "transmissionId",
																	"value": "803828d52d4911ed85f512ef9c5638d0",
																	"description": "The transmission id of the notification"
																},
																{
																	"key": "documentId",
																	"value": "pbe000512-1",
																	"description": "The document id of a document eg Invoice/Credit Note"
																},
																{
																	"key": "eventType",
																	"value": "INVOICE_RESPONSE_RECEIVED",
																	"description": "The notification event type"
																},
																{
																	"key": "peppolDocumentType",
																	"value": "INVOICE",
																	"description": "The document type: INVOICE, CREDIT_NOTE, ORDER"
																},
																{
																	"key": "sender",
																	"value": "0208:0552912569",
																	"description": "The sender of the notification"
																},
																{
																	"key": "receiver",
																	"value": "0208:0552912569",
																	"description": "The receiver of the notification"
																},
																{
																	"key": "startDateTime",
																	"value": "2023-07-25T11:03:26.688Z",
																	"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z"
																},
																{
																	"key": "endDateTime",
																	"value": "2023-07-29T11:03:26.688Z",
																	"description": "The end date time of the period to filter the notifications."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "The starting page number from which we want to retrieve results. The first page is 0."
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "How many results we retrieve per page"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"notifications\": [\n    {\n      \"documentId\": \"pbe000512-AUNZ-1\",\n      \"documentStatus\": \"SENT\",\n      \"eventType\": \"DOCUMENT_SENT\",\n      \"notificationDate\": \"2025-03-25T13:28:59.878\",\n      \"notificationId\": 1,\n      \"peppolDocumentType\": \"INVOICE\",\n      \"receiver\": \"0151:20234567890\",\n      \"sbdhTransmissionId\": \"1a5363fd097d11f083b9c2b5d1f6eb7f\",\n      \"sender\": \"0151:47555222000\",\n      \"transmissionId\": \"1a5363fe097d11f083b9c2b5d1f6eb7f\",\n      \"details\": []\n    },\n    {\n      \"documentId\": \"pbe000512-2\",\n      \"documentStatus\": \"SEND_FAILED\",\n      \"eventType\": \"DOCUMENT_SEND_FAILED\",\n      \"notificationDate\": \"2025-03-25T13:29:05.931\",\n      \"notificationId\": 5,\n      \"peppolDocumentType\": \"INVOICE\",\n      \"receiver\": \"0208:0465105397\",\n      \"sbdhTransmissionId\": \"1faf4efd097d11f083b9c2b5d1f6eb7f\",\n      \"sender\": \"0208:0552912569\",\n      \"transmissionId\": \"1faf4efe097d11f083b9c2b5d1f6eb7f\",\n      \"details\": [\n        {\n          \"code\": \"DOCUMENT_TRANSMISSION_ERROR\",\n          \"message\": \"Error dispatching the message to http://receiver:8080/msh\"\n        },\n        {\n          \"code\": \"DOCUMENT_TRANSMISSION_ERROR\",\n          \"message\": \"Error2\"\n        }\n      ]\n    },\n    {\n      \"documentId\": \"pbe000512-3\",\n      \"documentStatus\": \"REJECTED\",\n      \"eventType\": \"MLR_RECEIVED\",\n      \"notificationDate\": \"2025-03-25T13:29:07.536\",\n      \"notificationId\": 7,\n      \"peppolDocumentType\": \"INVOICE\",\n      \"receivedDate\": \"2025-03-25T13:29:07.536\",\n      \"receiver\": \"0208:0552912569\",\n      \"sender\": \"0208:0465105397\",\n      \"transmissionId\": \"20029f22097d11f083b9c2b5d1f6eb7f\",\n      \"details\": [\n        {\n          \"code\": \"GENERIC_ERROR\",\n          \"message\": \"/Invoice[1]/InvoiceLine[1]/Item[1]/ClassifiedTaxCategory[1]:[BR-S-05]-In an Invoice line (BG-25) where the Invoiced item VAT category code (BT-151) is \\\"Standard rated\\\" the Invoiced item VAT rate (BT-152) shall be greater than zero.\"\n        },\n        {\n          \"code\": \"GENERIC_ERROR\",\n          \"message\": \"/Invoice[1]/LegalMonetaryTotal[1]:[BR-CO-13]-Invoice total amount without VAT (BT-109) = Î£ Invoice line net amount (BT-131) - Sum of allowances on document level (BT-107) + Sum of charges on document level (BT-108).\"\n        },\n        {\n          \"code\": \"GENERIC_ERROR\",\n          \"message\": \"/Invoice[1]/TaxTotal[1]/TaxSubtotal[1]/TaxCategory[1]:[BR-S-08]-For each different value of VAT category rate (BT-119) where the VAT category code (BT-118) is \\\"Standard rated\\\", the VAT category taxable amount (BT-116) in a VAT breakdown (BG-23) shall equal the sum of Invoice line net amounts (BT-131) plus the sum of document level charge amounts (BT-99) minus the sum of document level allowance amounts (BT-92) where the VAT category code (BT-151, BT-102, BT-95) is \\\"Standard rated\\\" and the VAT rate (BT-152, BT-103, BT-96) equals the VAT category rate (BT-119).\"\n        },\n        {\n          \"code\": \"GENERIC_ERROR\",\n          \"message\": \"/Invoice[1]:[BR-CO-15]-Invoice total amount with VAT (BT-112) = Invoice total amount without VAT (BT-109) + Invoice total VAT amount (BT-110).\"\n        }\n      ]\n    },\n    {\n      \"details\": [],\n      \"documentId\": \"pbe000512-4\",\n      \"documentStatus\": \"ACCEPTED\",\n      \"eventType\": \"INVOICE_RESPONSE_RECEIVED\",\n      \"invoiceResponse\": {\n        \"effectiveDate\": \"2022-05-22\",\n        \"invoiceClarifications\": [],\n        \"invoiceTransmissionId\": \"221ca588097d11f083b9c2b5d1f6eb7f\",\n        \"note\": null,\n        \"responseCode\": \"AP\"\n      },\n      \"notificationDate\": \"2025-03-25T13:29:09.937\",\n      \"notificationId\": 9,\n      \"peppolDocumentType\": \"INVOICE\",\n      \"receiver\": \"0208:0552912569\",\n      \"sender\": \"0208:0465105397\",\n      \"transmissionId\": \"221ca588097d11f083b9c2b5d1f6eb7f\"\n    },\n    {\n      \"details\": [],\n      \"documentId\": \"pbe000512-5\",\n      \"documentStatus\": \"REJECTED\",\n      \"eventType\": \"INVOICE_RESPONSE_RECEIVED\",\n      \"invoiceResponse\": {\n        \"effectiveDate\": \"2022-08-24\",\n        \"invoiceClarifications\": [\n          {\n            \"clarification\": \"VAT Reference not found\",\n            \"clarificationCode\": \"LEG\",\n            \"clarificationType\": \"OPStatusReason\"\n          },\n          {\n            \"clarification\": \"Credit fully\",\n            \"clarificationCode\": \"CNF\",\n            \"clarificationType\": \"OPStatusAction\"\n          },\n          {\n            \"clarification\": \"Issue new invoice\",\n            \"clarificationCode\": \"NIN\",\n            \"clarificationType\": \"OPStatusAction\"\n          }\n        ],\n        \"invoiceTransmissionId\": \"22578bae097d11f083b9c2b5d1f6eb7f\",\n        \"note\": \"custom note\",\n        \"responseCode\": \"RE\"\n      },\n      \"notificationDate\": \"2025-03-25T13:29:10.460\",\n      \"notificationId\": 11,\n      \"peppolDocumentType\": \"INVOICE\",\n      \"receiver\": \"0208:0552912569\",\n      \"sender\": \"0208:0465105397\",\n      \"transmissionId\": \"22578bae097d11f083b9c2b5d1f6eb7f\"\n    },\n    {\n      \"details\": [],\n      \"documentId\": \"pbe000512-6\",\n      \"eventType\": \"DOCUMENT_RECEIVED\",\n      \"notificationDate\": \"2025-03-25T13:29:11.011\",\n      \"notificationId\": 12,\n      \"peppolDocumentType\": \"INVOICE\",\n      \"receivedDate\": \"2025-03-25T13:29:11.011\",\n      \"receiver\": \"0208:0552912569\",\n      \"sbdhTransmissionId\": \"5555555\",\n      \"sender\": \"0208:0465105397\",\n      \"transmissionId\": \"22e76fa4097d11f083b9c2b5d1f6eb7f\"\n    },\n    {\n      \"details\": [],\n      \"documentId\": \"pbe000512-8\",\n      \"documentStatus\": \"ACCEPTED\",\n      \"eventType\": \"INVOICE_RESPONSE_SENT\",\n      \"notificationDate\": \"2025-03-25T13:29:14.982\",\n      \"notificationId\": 15,\n      \"receiver\": \"0208:0465105397\",\n      \"sender\": \"0208:0552912569\",\n      \"transmissionId\": \"250ebc83097d11f083b9c2b5d1f6eb7f\"\n    },\n    {\n      \"details\": [],\n      \"documentId\": \"pbe000512-9\",\n      \"documentStatus\": \"REJECTED\",\n      \"eventType\": \"INVOICE_RESPONSE_SENT\",\n      \"notificationDate\": \"2025-03-25T13:29:17.621\",\n      \"notificationId\": 17,\n      \"receiver\": \"0208:0465105397\",\n      \"sender\": \"0208:0552912569\",\n      \"transmissionId\": \"26cf584a097d11f083b9c2b5d1f6eb7f\"\n    },\n    {\n      \"activationDate\": \"2025-03-25T14:29:45.897\",\n      \"eventType\": \"LEGAL_ENTITY_KYC_CORPPASS_ACTIVATED\",\n      \"initiatedDate\": \"2025-03-25T14:29:45.828\",\n      \"legalEntityId\": 2,\n      \"legalEntityRegistrationId\": 2,\n      \"notificationDate\": \"2025-03-25T14:29:45.899\",\n      \"notificationId\": 1,\n      \"signerEmail\": \"john.doe@example.com\",\n      \"signerName\": \"John Doe\"\n    },\n    {\n      \"activationDate\": \"2025-03-25T14:29:47.524\",\n      \"eventType\": \"LEGAL_ENTITY_C5_ACTIVATED\",\n      \"initiatedDate\": \"2025-03-25T14:29:47.500\",\n      \"legalEntityId\": 5,\n      \"legalEntityRegistrationId\": 5,\n      \"notificationDate\": \"2025-03-25T14:29:47.524\",\n      \"notificationId\": 2,\n      \"signerEmail\": \"john.doe@example.com\",\n      \"signerName\": \"John Doe\"\n    },\n    {\n      \"activationErrorDate\": \"2025-03-25T14:29:48.143\",\n      \"details\": [\n        {\n          \"code\": null,\n          \"message\": \"Corppass error detail\"\n        }\n      ],\n      \"eventType\": \"LEGAL_ENTITY_C5_ACTIVATION_ERROR\",\n      \"initiatedDate\": \"2025-03-25T14:29:48.126\",\n      \"legalEntityId\": 6,\n      \"legalEntityRegistrationId\": 6,\n      \"notificationDate\": \"2025-03-25T14:29:48.143\",\n      \"notificationId\": 3,\n      \"signerEmail\": \"john.doe@example.com\",\n      \"signerName\": \"John Doe\"\n    },\n    {\n      \"activationErrorDate\": \"2025-03-25T14:29:48.612\",\n      \"details\": [\n        {\n          \"code\": null,\n          \"message\": \"Corppass error detail\"\n        }\n      ],\n      \"eventType\": \"LEGAL_ENTITY_KYC_CORPPASS_ACTIVATION_ERROR\",\n      \"initiatedDate\": \"2025-03-25T14:29:48.598\",\n      \"legalEntityId\": 7,\n      \"legalEntityRegistrationId\": 7,\n      \"notificationDate\": \"2025-03-25T14:29:48.612\",\n      \"notificationId\": 4,\n      \"signerEmail\": \"john.doe@example.com\",\n      \"signerName\": \"John Doe\"\n    }\n  ],\n  \"pagination\": {\n    \"count\": 12,\n    \"page\": 0,\n    \"pageSize\": 20\n  }\n}"
												},
												{
													"name": "Error getting the Notifications",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&eventType=INVOICE_RESPONSE_RECEIVED&peppolDocumentType=INVOICE&sender=0208:0552912569&receiver=0208:0552912569&startDateTime=2023-07-25T11:03:26.688Z&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"notifications"
															],
															"query": [
																{
																	"key": "transmissionId",
																	"value": "803828d52d4911ed85f512ef9c5638d0",
																	"description": "The transmission id of the notification"
																},
																{
																	"key": "documentId",
																	"value": "pbe000512-1",
																	"description": "The document id of a document eg Invoice/Credit Note"
																},
																{
																	"key": "eventType",
																	"value": "INVOICE_RESPONSE_RECEIVED",
																	"description": "The notification event type"
																},
																{
																	"key": "peppolDocumentType",
																	"value": "INVOICE",
																	"description": "The document type: INVOICE, CREDIT_NOTE, ORDER"
																},
																{
																	"key": "sender",
																	"value": "0208:0552912569",
																	"description": "The sender of the notification"
																},
																{
																	"key": "receiver",
																	"value": "0208:0552912569",
																	"description": "The receiver of the notification"
																},
																{
																	"key": "startDateTime",
																	"value": "2023-07-25T11:03:26.688Z",
																	"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z"
																},
																{
																	"key": "endDateTime",
																	"value": "2023-07-29T11:03:26.688Z",
																	"description": "The end date time of the period to filter the notifications."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "The starting page number from which we want to retrieve results. The first page is 0."
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "How many results we retrieve per page"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"GENERIC_ERROR\",\n  \"message\": \"Error getting notifications\"\n}"
												},
												{
													"name": "Authentication failure",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/peppol/v1/notifications?transmissionId=803828d52d4911ed85f512ef9c5638d0&documentId=pbe000512-1&eventType=INVOICE_RESPONSE_RECEIVED&peppolDocumentType=INVOICE&sender=0208:0552912569&receiver=0208:0552912569&startDateTime=2023-07-25T11:03:26.688Z&endDateTime=2023-07-29T11:03:26.688Z&page=0&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"peppol",
																"v1",
																"notifications"
															],
															"query": [
																{
																	"key": "transmissionId",
																	"value": "803828d52d4911ed85f512ef9c5638d0",
																	"description": "The transmission id of the notification"
																},
																{
																	"key": "documentId",
																	"value": "pbe000512-1",
																	"description": "The document id of a document eg Invoice/Credit Note"
																},
																{
																	"key": "eventType",
																	"value": "INVOICE_RESPONSE_RECEIVED",
																	"description": "The notification event type"
																},
																{
																	"key": "peppolDocumentType",
																	"value": "INVOICE",
																	"description": "The document type: INVOICE, CREDIT_NOTE, ORDER"
																},
																{
																	"key": "sender",
																	"value": "0208:0552912569",
																	"description": "The sender of the notification"
																},
																{
																	"key": "receiver",
																	"value": "0208:0552912569",
																	"description": "The receiver of the notification"
																},
																{
																	"key": "startDateTime",
																	"value": "2023-07-25T11:03:26.688Z",
																	"description": "The start date time of the period to filter the notifications. To filter all notifications for a specific time E.g. `2023-07-25T11:03:26.688Z` use `startDateTime=2023-07-25T11:03:26.688Z` and `endDateTime=2023-07-29T11:03:26.688Z"
																},
																{
																	"key": "endDateTime",
																	"value": "2023-07-29T11:03:26.688Z",
																	"description": "The end date time of the period to filter the notifications."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "The starting page number from which we want to retrieve results. The first page is 0."
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "How many results we retrieve per page"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"SECURITY_ERROR\",\n  \"message\": \"Invalid authentication credentials\"\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://test-peppol-api.ademico-software.com"
		}
	]
}